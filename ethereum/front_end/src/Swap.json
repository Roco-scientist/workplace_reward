{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_thanksAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_message",
          "type": "uint256"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "redeemed",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "RewardsContract",
      "outputs": [
        {
          "internalType": "contract IERC20Custom",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ThanksContract",
      "outputs": [
        {
          "internalType": "contract IERC20Custom",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountThanks",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountRewards",
          "type": "uint256"
        }
      ],
      "name": "addMintedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mintThanksToUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "message",
          "type": "uint256"
        }
      ],
      "name": "sendThanks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/rorycoffey/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
    "1": "/Users/rorycoffey/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "2": "contracts/Swap.sol",
    "3": "interfaces/IERC20Custom.sol"
  },
  "ast": {
    "absolutePath": "contracts/Swap.sol",
    "exportedSymbols": {
      "Context": [
        665
      ],
      "IERC20Custom": [
        643
      ],
      "Ownable": [
        453
      ],
      "Swap": [
        348
      ]
    },
    "id": 349,
    "license": "AGPL 3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:2"
      },
      {
        "absolutePath": "/Users/rorycoffey/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 454,
        "src": "62:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "interfaces/IERC20Custom.sol",
        "file": "../interfaces/IERC20Custom.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 349,
        "sourceUnit": 644,
        "src": "115:40:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 453,
              "src": "174:7:2"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "174:7:2"
          }
        ],
        "canonicalName": "Swap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 348,
        "linearizedBaseContracts": [
          348,
          453,
          665
        ],
        "name": "Swap",
        "nameLocation": "166:4:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ce2734cc",
            "id": 8,
            "mutability": "mutable",
            "name": "RewardsContract",
            "nameLocation": "208:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 348,
            "src": "188:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Custom_$643",
              "typeString": "contract IERC20Custom"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "IERC20Custom",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 643,
                "src": "188:12:2"
              },
              "referencedDeclaration": 643,
              "src": "188:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Custom_$643",
                "typeString": "contract IERC20Custom"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f00830e5",
            "id": 11,
            "mutability": "mutable",
            "name": "ThanksContract",
            "nameLocation": "249:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 348,
            "src": "229:34:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20Custom_$643",
              "typeString": "contract IERC20Custom"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "IERC20Custom",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 643,
                "src": "229:12:2"
              },
              "referencedDeclaration": 643,
              "src": "229:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20Custom_$643",
                "typeString": "contract IERC20Custom"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 21,
            "name": "Sent",
            "nameLocation": "276:4:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "297:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "281:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "320:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "304:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "333:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "325:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "325:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "350:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "342:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:79:2"
            },
            "src": "270:90:2"
          },
          {
            "anonymous": false,
            "id": 27,
            "name": "redeemed",
            "nameLocation": "371:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_redeemer",
                  "nameLocation": "396:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "380:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "415:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "407:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "379:44:2"
            },
            "src": "365:59:2"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "498:119:2",
              "statements": [
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34,
                      "name": "RewardsContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "508:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Custom_$643",
                        "typeString": "contract IERC20Custom"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 36,
                          "name": "_rewardsAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "539:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 35,
                        "name": "IERC20Custom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "526:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Custom_$643_$",
                          "typeString": "type(contract IERC20Custom)"
                        }
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "526:29:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Custom_$643",
                        "typeString": "contract IERC20Custom"
                      }
                    },
                    "src": "508:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Custom_$643",
                      "typeString": "contract IERC20Custom"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "508:47:2"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "ThanksContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "565:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Custom_$643",
                        "typeString": "contract IERC20Custom"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42,
                          "name": "_thanksAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31,
                          "src": "595:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41,
                        "name": "IERC20Custom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 643,
                        "src": "582:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Custom_$643_$",
                          "typeString": "type(contract IERC20Custom)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "582:28:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Custom_$643",
                        "typeString": "contract IERC20Custom"
                      }
                    },
                    "src": "565:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Custom_$643",
                      "typeString": "contract IERC20Custom"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "565:45:2"
                }
              ]
            },
            "id": 47,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "_rewardsAddress",
                  "nameLocation": "450:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "442:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "442:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "mutability": "mutable",
                  "name": "_thanksAddress",
                  "nameLocation": "475:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "467:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "467:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "441:49:2"
            },
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:2"
            },
            "scope": 348,
            "src": "430:187:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "797:780:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 59,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "967:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 60,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "967:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 57,
                              "name": "ThanksContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "942:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Custom_$643",
                                "typeString": "contract IERC20Custom"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 470,
                            "src": "942:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "942:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 62,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "982:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "942:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207468616e6b20796f757320746f2073656e64",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "990:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dd168ac8a5aabac9079b3b1bf7cc494f8aaa93931bba085770793dd2b40ff47",
                          "typeString": "literal_string \"Not enough thank yous to send\""
                        },
                        "value": "Not enough thank yous to send"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dd168ac8a5aabac9079b3b1bf7cc494f8aaa93931bba085770793dd2b40ff47",
                          "typeString": "literal_string \"Not enough thank yous to send\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "934:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "934:88:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "934:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 72,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1074:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Swap_$348",
                                    "typeString": "contract Swap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Swap_$348",
                                    "typeString": "contract Swap"
                                  }
                                ],
                                "id": 71,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1066:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 70,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1066:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1066:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 68,
                              "name": "RewardsContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1040:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Custom_$643",
                                "typeString": "contract IERC20Custom"
                              }
                            },
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 470,
                            "src": "1040:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1040:40:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 75,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "1084:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1040:50:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207265776172647320746f2067697665206f7574",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1092:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076a789f61ef64e17606f5dfd8df3829be7391ab2d64f6df547c81a4f1f96238",
                          "typeString": "literal_string \"Not enough rewards to give out\""
                        },
                        "value": "Not enough rewards to give out"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076a789f61ef64e17606f5dfd8df3829be7391ab2d64f6df547c81a4f1f96238",
                          "typeString": "literal_string \"Not enough rewards to give out\""
                        }
                      ],
                      "id": 67,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1032:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1032:93:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1032:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1218:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1218:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 83,
                          "name": "toAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1232:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1218:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207468616e6b20796f757273656c66",
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1243:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc9398ac66e35df13c63453f7b6d2b639afa571d7e0148ee3b830b46d9f39120",
                          "typeString": "literal_string \"You cannot thank yourself\""
                        },
                        "value": "You cannot thank yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc9398ac66e35df13c63453f7b6d2b639afa571d7e0148ee3b830b46d9f39120",
                          "typeString": "literal_string \"You cannot thank yourself\""
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1210:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1210:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 91,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1366:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1366:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 95,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1386:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          ],
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1378:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 93,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1378:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1393:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88,
                        "name": "ThanksContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1338:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Custom_$643",
                          "typeString": "contract IERC20Custom"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 512,
                      "src": "1338:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:62:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1338:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103,
                        "name": "toAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1492:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1503:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100,
                        "name": "RewardsContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1467:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Custom_$643",
                          "typeString": "contract IERC20Custom"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "1467:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1467:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:43:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 108,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1531:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1531:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 110,
                        "name": "toAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1543:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 111,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1554:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 112,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1562:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 107,
                      "name": "Sent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "1526:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1526:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "EmitStatement",
                  "src": "1521:49:2"
                }
              ]
            },
            "functionSelector": "e87278ce",
            "id": 116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendThanks",
            "nameLocation": "727:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "746:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "738:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "toAddress",
                  "nameLocation": "762:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "754:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "781:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "773:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "737:52:2"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:0:2"
            },
            "scope": 348,
            "src": "718:859:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 150,
              "nodeType": "Block",
              "src": "1678:312:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 124,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1790:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1790:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 122,
                              "name": "RewardsContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1764:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Custom_$643",
                                "typeString": "contract IERC20Custom"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 470,
                            "src": "1764:25:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1764:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 127,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1764:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547279696e6720746f2072656465656d206d6f72652072657761726473207468616e20796f752061726520686f6c64696e67",
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1813:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b3a46326b58b25b8625bf6b0949a42e727d2a3b2c6bd2357000929561851c2",
                          "typeString": "literal_string \"Trying to redeem more rewards than you are holding\""
                        },
                        "value": "Trying to redeem more rewards than you are holding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b3a46326b58b25b8625bf6b0949a42e727d2a3b2c6bd2357000929561851c2",
                          "typeString": "literal_string \"Trying to redeem more rewards than you are holding\""
                        }
                      ],
                      "id": 121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1756:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:110:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 135,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1906:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1906:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1926:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          ],
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1918:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1918:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1918:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 141,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1933:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 132,
                        "name": "RewardsContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "1877:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Custom_$643",
                          "typeString": "contract IERC20Custom"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 512,
                      "src": "1877:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:63:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1964:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1964:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 147,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "1976:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 144,
                      "name": "redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1955:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1955:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "EmitStatement",
                  "src": "1950:33:2"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 151,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "1648:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1663:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 151,
                  "src": "1655:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1655:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1654:16:2"
            },
            "returnParameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1678:0:2"
            },
            "scope": 348,
            "src": "1639:351:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "2214:502:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 162,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "2274:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2274:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2294:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2274:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20726563697069656e7420616464726573736573",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2297:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_699c089f8e4b392329fa61eed904ea77949a71785dfc35beca73275293b42f04",
                          "typeString": "literal_string \"No recipient addresses\""
                        },
                        "value": "No recipient addresses"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_699c089f8e4b392329fa61eed904ea77949a71785dfc35beca73275293b42f04",
                          "typeString": "literal_string \"No recipient addresses\""
                        }
                      ],
                      "id": 161,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2266:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:56:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 170,
                                  "name": "recipients",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 154,
                                  "src": "2341:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2341:17:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 172,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "2361:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2341:26:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 174,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2340:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 179,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2405:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Swap_$348",
                                    "typeString": "contract Swap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Swap_$348",
                                    "typeString": "contract Swap"
                                  }
                                ],
                                "id": 178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2397:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 177,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2397:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2397:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 175,
                              "name": "ThanksContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "2372:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Custom_$643",
                                "typeString": "contract IERC20Custom"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 470,
                            "src": "2372:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2372:39:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2340:71:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207468616e6b7320746f6b656e732077697468696e2074686520636f6e747261637420746f2066756e6420726563697069656e74732e20204d696e74206d6f726520746f6b656e732e",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2413:85:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0cd863830160771720959bcb3346c9d82c1cc9d2de61f09f266ca836ec60e1b2",
                          "typeString": "literal_string \"Not enough thanks tokens within the contract to fund recipients.  Mint more tokens.\""
                        },
                        "value": "Not enough thanks tokens within the contract to fund recipients.  Mint more tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0cd863830160771720959bcb3346c9d82c1cc9d2de61f09f266ca836ec60e1b2",
                          "typeString": "literal_string \"Not enough thanks tokens within the contract to fund recipients.  Mint more tokens.\""
                        }
                      ],
                      "id": 169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2332:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:167:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:167:2"
                },
                {
                  "body": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2631:79:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 199,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 154,
                                "src": "2669:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 201,
                              "indexExpression": {
                                "id": 200,
                                "name": "userIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "2680:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2669:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 202,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 156,
                              "src": "2692:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 196,
                              "name": "ThanksContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "2645:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Custom_$643",
                                "typeString": "contract IERC20Custom"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 480,
                            "src": "2645:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2645:54:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 204,
                        "nodeType": "ExpressionStatement",
                        "src": "2645:54:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 189,
                      "name": "userIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "2587:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 190,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "2599:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2599:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2587:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 206,
                  "initializationExpression": {
                    "assignments": [
                      187
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "userIndex",
                        "nameLocation": "2576:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2568:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2568:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 188,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2568:17:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2618:11:2",
                      "subExpression": {
                        "id": 193,
                        "name": "userIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "2618:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 195,
                    "nodeType": "ExpressionStatement",
                    "src": "2618:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "2563:147:2"
                }
              ]
            },
            "functionSelector": "1826c119",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 158,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 395,
                  "src": "2204:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2204:9:2"
              }
            ],
            "name": "distribute",
            "nameLocation": "2141:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "2169:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2152:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 152,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2152:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 153,
                    "nodeType": "ArrayTypeName",
                    "src": "2152:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2189:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 208,
                  "src": "2181:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2181:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2151:45:2"
            },
            "returnParameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2214:0:2"
            },
            "scope": 348,
            "src": "2132:584:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 252,
              "nodeType": "Block",
              "src": "2891:285:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 223,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2930:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          ],
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2922:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 221,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2922:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2922:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 225,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2937:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "expression": {
                            "id": 226,
                            "name": "recipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2946:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2946:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2937:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 218,
                        "name": "RewardsContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2901:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Custom_$643",
                          "typeString": "contract IERC20Custom"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 642,
                      "src": "2901:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:63:2"
                },
                {
                  "body": {
                    "id": 250,
                    "nodeType": "Block",
                    "src": "3095:75:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 244,
                                "name": "recipients",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 211,
                                "src": "3129:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 246,
                              "indexExpression": {
                                "id": 245,
                                "name": "userIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 232,
                                "src": "3140:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3129:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 247,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "3152:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 241,
                              "name": "ThanksContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "3109:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Custom_$643",
                                "typeString": "contract IERC20Custom"
                              }
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 642,
                            "src": "3109:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3109:50:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 249,
                        "nodeType": "ExpressionStatement",
                        "src": "3109:50:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 234,
                      "name": "userIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "3051:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 235,
                        "name": "recipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "3063:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3063:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3051:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 251,
                  "initializationExpression": {
                    "assignments": [
                      232
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 232,
                        "mutability": "mutable",
                        "name": "userIndex",
                        "nameLocation": "3040:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 251,
                        "src": "3032:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 231,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3032:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 233,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3032:17:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3082:11:2",
                      "subExpression": {
                        "id": 238,
                        "name": "userIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "3082:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 240,
                    "nodeType": "ExpressionStatement",
                    "src": "3082:11:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "3027:143:2"
                }
              ]
            },
            "functionSelector": "66837f1b",
            "id": 253,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 215,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 395,
                  "src": "2881:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "2881:9:2"
              }
            ],
            "name": "mintThanksToUsers",
            "nameLocation": "2811:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "recipients",
                  "nameLocation": "2846:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "2829:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 209,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2829:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 210,
                    "nodeType": "ArrayTypeName",
                    "src": "2829:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2866:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "2858:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2858:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2828:45:2"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2891:0:2"
            },
            "scope": 348,
            "src": "2802:374:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 282,
              "nodeType": "Block",
              "src": "3355:125:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 267,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3394:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          ],
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3386:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 265,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3386:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3386:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 269,
                        "name": "amountRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "3401:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 262,
                        "name": "RewardsContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "3365:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Custom_$643",
                          "typeString": "contract IERC20Custom"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 642,
                      "src": "3365:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3365:50:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3365:50:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 277,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3453:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap_$348",
                              "typeString": "contract Swap"
                            }
                          ],
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3445:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3445:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3445:13:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 279,
                        "name": "amountThanks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "3460:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 272,
                        "name": "ThanksContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "3425:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Custom_$643",
                          "typeString": "contract IERC20Custom"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 642,
                      "src": "3425:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3425:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 281,
                  "nodeType": "ExpressionStatement",
                  "src": "3425:48:2"
                }
              ]
            },
            "functionSelector": "0ca6a16e",
            "id": 283,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 260,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 259,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 395,
                  "src": "3345:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3345:9:2"
              }
            ],
            "name": "addMintedTokens",
            "nameLocation": "3277:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "amountThanks",
                  "nameLocation": "3301:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "3293:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "amountRewards",
                  "nameLocation": "3323:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 283,
                  "src": "3315:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3292:45:2"
            },
            "returnParameters": {
              "id": 261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3355:0:2"
            },
            "scope": 348,
            "src": "3268:212:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 307,
              "nodeType": "Block",
              "src": "3650:271:2",
              "statements": [
                {
                  "assignments": [
                    294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 294,
                      "mutability": "mutable",
                      "name": "tokenContract",
                      "nameLocation": "3673:13:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 307,
                      "src": "3660:26:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Custom_$643",
                        "typeString": "contract IERC20Custom"
                      },
                      "typeName": {
                        "id": 293,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 292,
                          "name": "IERC20Custom",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 643,
                          "src": "3660:12:2"
                        },
                        "referencedDeclaration": 643,
                        "src": "3660:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Custom_$643",
                          "typeString": "contract IERC20Custom"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 298,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 296,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 285,
                        "src": "3702:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 295,
                      "name": "IERC20Custom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "3689:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Custom_$643_$",
                        "typeString": "type(contract IERC20Custom)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3689:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Custom_$643",
                      "typeString": "contract IERC20Custom"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3660:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 302,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3894:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3894:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 304,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "3906:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 299,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 294,
                        "src": "3871:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Custom_$643",
                          "typeString": "contract IERC20Custom"
                        }
                      },
                      "id": 301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "3871:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3871:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 306,
                  "nodeType": "ExpressionStatement",
                  "src": "3871:43:2"
                }
              ]
            },
            "functionSelector": "9e281a98",
            "id": 308,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 290,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 289,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 395,
                  "src": "3640:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3640:9:2"
              }
            ],
            "name": "withdrawToken",
            "nameLocation": "3578:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 285,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "3600:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "3592:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3592:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 287,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3624:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 308,
                  "src": "3616:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3616:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3591:41:2"
            },
            "returnParameters": {
              "id": 291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3650:0:2"
            },
            "scope": 348,
            "src": "3569:352:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 326,
              "nodeType": "Block",
              "src": "4129:68:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 321,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4176:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$348",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$348",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4168:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 319,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4168:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4168:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4168:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 315,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4147:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4147:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4139:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 313,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4139:8:2",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4139:19:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4139:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4139:51:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "4139:51:2"
                }
              ]
            },
            "functionSelector": "a0ef91df",
            "id": 327,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 311,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 310,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 395,
                  "src": "4119:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "4119:9:2"
              }
            ],
            "name": "withdrawEth",
            "nameLocation": "4090:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4101:2:2"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4129:0:2"
            },
            "scope": 348,
            "src": "4081:116:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 330,
              "nodeType": "Block",
              "src": "4287:2:2",
              "statements": []
            },
            "id": 331,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4267:2:2"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4287:0:2"
            },
            "scope": 348,
            "src": "4260:29:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 334,
              "nodeType": "Block",
              "src": "4385:2:2",
              "statements": []
            },
            "id": 335,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4365:2:2"
            },
            "returnParameters": {
              "id": 333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4385:0:2"
            },
            "scope": 348,
            "src": "4357:30:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "4504:45:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 342,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4529:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Swap_$348",
                            "typeString": "contract Swap"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Swap_$348",
                            "typeString": "contract Swap"
                          }
                        ],
                        "id": 341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4521:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4521:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4521:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4521:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 339,
                  "id": 345,
                  "nodeType": "Return",
                  "src": "4514:28:2"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 347,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "4464:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4474:2:2"
            },
            "returnParameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "4498:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4497:6:2"
            },
            "scope": 348,
            "src": "4455:94:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 349,
        "src": "157:4394:2",
        "usedErrors": []
      }
    ],
    "src": "37:4515:2"
  },
  "bytecode": "",
  "bytecodeSha1": "4c864de1fffbcff02c629de58c4fae4d0ffabfb8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Swap",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "34": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {
        "Swap.distribute": {
          "28": [
            2274,
            2295,
            true
          ],
          "29": [
            2340,
            2411,
            true
          ]
        },
        "Swap.redeem": {
          "30": [
            1764,
            1811,
            true
          ]
        },
        "Swap.sendThanks": {
          "31": [
            942,
            988,
            true
          ],
          "32": [
            1040,
            1090,
            true
          ],
          "33": [
            1218,
            1241,
            true
          ]
        }
      },
      "3": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "26": [
            2378,
            2395
          ],
          "27": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "12": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "24": [
            1998,
            2071
          ],
          "25": [
            2081,
            2109
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "2": {
        "Swap.addMintedTokens": {
          "3": [
            3365,
            3415
          ],
          "4": [
            3425,
            3473
          ]
        },
        "Swap.distribute": {
          "5": [
            2266,
            2322
          ],
          "6": [
            2332,
            2499
          ],
          "7": [
            2645,
            2699
          ],
          "8": [
            2618,
            2629
          ]
        },
        "Swap.getBalance": {
          "0": [
            4514,
            4542
          ]
        },
        "Swap.mintThanksToUsers": {
          "9": [
            2901,
            2964
          ],
          "10": [
            3109,
            3159
          ],
          "11": [
            3082,
            3093
          ]
        },
        "Swap.redeem": {
          "15": [
            1756,
            1866
          ],
          "16": [
            1877,
            1940
          ],
          "17": [
            1950,
            1983
          ]
        },
        "Swap.sendThanks": {
          "18": [
            934,
            1022
          ],
          "19": [
            1032,
            1125
          ],
          "20": [
            1210,
            1271
          ],
          "21": [
            1338,
            1400
          ],
          "22": [
            1467,
            1510
          ],
          "23": [
            1521,
            1570
          ]
        },
        "Swap.withdrawEth": {
          "14": [
            4139,
            4190
          ]
        },
        "Swap.withdrawToken": {
          "13": [
            3871,
            3914
          ]
        }
      },
      "3": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "IERC20Custom",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "157:4394:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:212;;;;;;;;;;-1:-1:-1;3268:212:2;;;;;:::i;:::-;;:::i;4455:94::-;;;;;;;;;;-1:-1:-1;4455:94:2;;4521:21;413:25:4;;401:2;386:18;4455:94:2;;;;;;;;2132:584;;;;;;;;;;-1:-1:-1;2132:584:2;;;;;:::i;:::-;;:::i;2802:374::-;;;;;;;;;;-1:-1:-1;2802:374:2;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;2119:32:4;;;2101:51;;2089:2;2074:18;1036:85:0;1955:203:4;3569:352:2;;;;;;;;;;-1:-1:-1;3569:352:2;;;;;:::i;:::-;;:::i;4081:116::-;;;:::i;188:35::-;;;;;;;;;;-1:-1:-1;188:35:2;;;;-1:-1:-1;;;;;188:35:2;;;1639:351;;;;;;;;;;-1:-1:-1;1639:351:2;;;;;:::i;:::-;;:::i;718:859::-;;;;;;;;;;-1:-1:-1;718:859:2;;;;;:::i;:::-;;:::i;229:34::-;;;;;;;;;;-1:-1:-1;229:34:2;;;;-1:-1:-1;;;;;229:34:2;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;3268:212:2:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;3365:15:2::1;::::0;:50:::1;::::0;-1:-1:-1;;;3365:50:2;;3394:4:::1;3365:50;::::0;::::1;3888:51:4::0;3955:18;;;3948:34;;;-1:-1:-1;;;;;3365:15:2;;::::1;::::0;:20:::1;::::0;3861:18:4;;3365:50:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3425:14:2::1;::::0;:48:::1;::::0;-1:-1:-1;;;3425:48:2;;3453:4:::1;3425:48;::::0;::::1;3888:51:4::0;3955:18;;;3948:34;;;-1:-1:-1;;;;;3425:14:2;;::::1;::::0;-1:-1:-1;3425:19:2::1;::::0;-1:-1:-1;3861:18:4;;3425:48:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3268:212:::0;;:::o;2132:584::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2294:1:2::1;2274:10;:17;:21;2266:56;;;::::0;-1:-1:-1;;;2266:56:2;;4195:2:4;2266:56:2::1;::::0;::::1;4177:21:4::0;4234:2;4214:18;;;4207:30;-1:-1:-1;;;4253:18:4;;;4246:52;4315:18;;2266:56:2::1;3993:346:4::0;2266:56:2::1;2372:14;::::0;:39:::1;::::0;-1:-1:-1;;;2372:39:2;;2405:4:::1;2372:39;::::0;::::1;2101:51:4::0;-1:-1:-1;;;;;2372:14:2;;::::1;::::0;:24:::1;::::0;2074:18:4;;2372:39:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2361:6;2341:10;:17;:26;;;;:::i;:::-;2340:71;;2332:167;;;::::0;-1:-1:-1;;;2332:167:2;;5040:2:4;2332:167:2::1;::::0;::::1;5022:21:4::0;5079:2;5059:18;;;5052:30;5118:34;5098:18;;;5091:62;5189:34;5169:18;;;5162:62;-1:-1:-1;;;5240:19:4;;;5233:50;5300:19;;2332:167:2::1;4838:487:4::0;2332:167:2::1;2568:17;2563:147;2599:10;:17;2587:9;:29;2563:147;;;2645:14;::::0;2669:21;;-1:-1:-1;;;;;2645:14:2;;::::1;::::0;:23:::1;::::0;2669:10;;2680:9;;2669:21;::::1;;;;;:::i;:::-;;;;;;;2692:6;2645:54;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3906:32:4;;;;3888:51;;3970:2;3955:18;;3948:34;3876:2;3861:18;;3714:274;2645:54:2::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2618:11:2;::::1;::::0;::::1;:::i;:::-;;;;2563:147;;;;2132:584:::0;;:::o;2802:374::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2901:15:2::1;::::0;2946:17;;-1:-1:-1;;;;;2901:15:2;;::::1;::::0;:20:::1;::::0;2930:4:::1;::::0;2937:26:::1;::::0;:6;:26:::1;:::i;:::-;2901:63;::::0;-1:-1:-1;;;;;;2901:63:2::1;::::0;;;;;;-1:-1:-1;;;;;3906:32:4;;;2901:63:2::1;::::0;::::1;3888:51:4::0;3955:18;;;3948:34;3861:18;;2901:63:2::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3032:17;3027:143;3063:10;:17;3051:9;:29;3027:143;;;3109:14;::::0;3129:21;;-1:-1:-1;;;;;3109:14:2;;::::1;::::0;:19:::1;::::0;3129:10;;3140:9;;3129:21;::::1;;;;;:::i;:::-;;;;;;;3152:6;3109:50;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;3906:32:4;;;;3888:51;;3970:2;3955:18;;3948:34;3876:2;3861:18;;3714:274;3109:50:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3082:11;;;;;:::i;:::-;;;;3027:143;;1668:101:0::0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3569:352:2:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3871:43:2::1;::::0;-1:-1:-1;;;3871:43:2;;3894:10:::1;3871:43;::::0;::::1;3888:51:4::0;3955:18;;;3948:34;;;3702:14:2;;-1:-1:-1;;;;;3871:22:2;::::1;::::0;::::1;::::0;3861:18:4;;3871:43:2::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3650:271;3569:352:::0;;:::o;4081:116::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4139:51:2::1;::::0;4147:10:::1;::::0;4168:21:::1;4139:51:::0;::::1;;;::::0;::::1;::::0;;;4168:21;4147:10;4139:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4081:116::o:0;1639:351::-;1764:15;;:37;;-1:-1:-1;;;1764:37:2;;1790:10;1764:37;;;2101:51:4;1805:6:2;;-1:-1:-1;;;;;1764:15:2;;:25;;2074:18:4;;1764:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;1756:110;;;;-1:-1:-1;;;1756:110:2;;6086:2:4;1756:110:2;;;6068:21:4;6125:2;6105:18;;;6098:30;6164:34;6144:18;;;6137:62;-1:-1:-1;;;6215:18:4;;;6208:48;6273:19;;1756:110:2;5884:414:4;1756:110:2;1877:15;;:63;;-1:-1:-1;;;1877:63:2;;1906:10;1877:63;;;6543:34:4;1926:4:2;6593:18:4;;;6586:43;6645:18;;;6638:34;;;-1:-1:-1;;;;;1877:15:2;;;;:28;;6478:18:4;;1877:63:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1955:28:2;;413:25:4;;;1964:10:2;;1955:28;;401:2:4;386:18;1955:28:2;;;;;;;1639:351;:::o;718:859::-;942:14;;:36;;-1:-1:-1;;;942:36:2;;967:10;942:36;;;2101:51:4;982:6:2;;-1:-1:-1;;;;;942:14:2;;:24;;2074:18:4;;942:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;934:88;;;;-1:-1:-1;;;934:88:2;;6885:2:4;934:88:2;;;6867:21:4;6924:2;6904:18;;;6897:30;6963:31;6943:18;;;6936:59;7012:18;;934:88:2;6683:353:4;934:88:2;1040:15;;:40;;-1:-1:-1;;;1040:40:2;;1074:4;1040:40;;;2101:51:4;1084:6:2;;-1:-1:-1;;;;;1040:15:2;;:25;;2074:18:4;;1040:40:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;1032:93;;;;-1:-1:-1;;;1032:93:2;;7243:2:4;1032:93:2;;;7225:21:4;7282:2;7262:18;;;7255:30;7321:32;7301:18;;;7294:60;7371:18;;1032:93:2;7041:354:4;1032:93:2;1218:10;-1:-1:-1;;;;;1218:23:2;;;;1210:61;;;;-1:-1:-1;;;1210:61:2;;7602:2:4;1210:61:2;;;7584:21:4;7641:2;7621:18;;;7614:30;7680:27;7660:18;;;7653:55;7725:18;;1210:61:2;7400:349:4;1210:61:2;1338:14;;:62;;-1:-1:-1;;;1338:62:2;;1366:10;1338:62;;;6543:34:4;1386:4:2;6593:18:4;;;6586:43;6645:18;;;6638:34;;;-1:-1:-1;;;;;1338:14:2;;;;:27;;6478:18:4;;1338:62:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1467:15:2;;:43;;-1:-1:-1;;;1467:43:2;;-1:-1:-1;;;;;3906:32:4;;;1467:43:2;;;3888:51:4;3955:18;;;3948:34;;;1467:15:2;;;;:24;;3861:18:4;;1467:43:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1526:44:2;;;7928:25:4;;;7984:2;7969:18;;7962:34;;;-1:-1:-1;;;;;1526:44:2;;;1531:10;;1526:44;;7901:18:4;1526:44:2;;;;;;;718:859;;;:::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;8209:2:4;1998:73:0::1;::::0;::::1;8191:21:4::0;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:4;;;8331:36;8384:19;;1998:73:0::1;8007:402:4::0;1998:73:0::1;2081:28;2100:8;2270:187:::0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:248:4:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:4;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:4:o;449:127::-;510:10;505:3;501:20;498:1;491:31;541:4;538:1;531:15;565:4;562:1;555:15;581:173;649:20;;-1:-1:-1;;;;;698:31:4;;688:42;;678:70;;744:1;741;734:12;678:70;581:173;;;:::o;759:1191::-;852:6;860;913:2;901:9;892:7;888:23;884:32;881:52;;;929:1;926;919:12;881:52;969:9;956:23;998:18;1039:2;1031:6;1028:14;1025:34;;;1055:1;1052;1045:12;1025:34;1093:6;1082:9;1078:22;1068:32;;1138:7;1131:4;1127:2;1123:13;1119:27;1109:55;;1160:1;1157;1150:12;1109:55;1196:2;1183:16;1218:4;1241:2;1237;1234:10;1231:36;;;1247:18;;:::i;:::-;1293:2;1290:1;1286:10;1325:2;1319:9;1388:2;1384:7;1379:2;1375;1371:11;1367:25;1359:6;1355:38;1443:6;1431:10;1428:22;1423:2;1411:10;1408:18;1405:46;1402:72;;;1454:18;;:::i;:::-;1490:2;1483:22;1540:18;;;1574:15;;;;-1:-1:-1;1616:11:4;;;1612:20;;;1644:19;;;1641:39;;;1676:1;1673;1666:12;1641:39;1700:11;;;;1720:148;1736:6;1731:3;1728:15;1720:148;;;1802:23;1821:3;1802:23;:::i;:::-;1790:36;;1753:12;;;;1846;;;;1720:148;;;1887:6;1925:18;;;;1912:32;;-1:-1:-1;;;;;;;759:1191:4:o;2163:254::-;2231:6;2239;2292:2;2280:9;2271:7;2267:23;2263:32;2260:52;;;2308:1;2305;2298:12;2260:52;2331:29;2350:9;2331:29;:::i;:::-;2321:39;2407:2;2392:18;;;;2379:32;;-1:-1:-1;;;2163:254:4:o;2650:180::-;2709:6;2762:2;2750:9;2741:7;2737:23;2733:32;2730:52;;;2778:1;2775;2768:12;2730:52;-1:-1:-1;2801:23:4;;2650:180;-1:-1:-1;2650:180:4:o;2835:322::-;2912:6;2920;2928;2981:2;2969:9;2960:7;2956:23;2952:32;2949:52;;;2997:1;2994;2987:12;2949:52;3033:9;3020:23;3010:33;;3062:38;3096:2;3085:9;3081:18;3062:38;:::i;:::-;3052:48;;3147:2;3136:9;3132:18;3119:32;3109:42;;2835:322;;;;;:::o;3162:186::-;3221:6;3274:2;3262:9;3253:7;3249:23;3245:32;3242:52;;;3290:1;3287;3280:12;3242:52;3313:29;3332:9;3313:29;:::i;:::-;3303:39;3162:186;-1:-1:-1;;;3162:186:4:o;3353:356::-;3555:2;3537:21;;;3574:18;;;3567:30;3633:34;3628:2;3613:18;;3606:62;3700:2;3685:18;;3353:356::o;4344:184::-;4414:6;4467:2;4455:9;4446:7;4442:23;4438:32;4435:52;;;4483:1;4480;4473:12;4435:52;-1:-1:-1;4506:16:4;;4344:184;-1:-1:-1;4344:184:4:o;4533:127::-;4594:10;4589:3;4585:20;4582:1;4575:31;4625:4;4622:1;4615:15;4649:4;4646:1;4639:15;4665:168;4705:7;4771:1;4767;4763:6;4759:14;4756:1;4753:21;4748:1;4741:9;4734:17;4730:45;4727:71;;;4778:18;;:::i;:::-;-1:-1:-1;4818:9:4;;4665:168::o;5330:127::-;5391:10;5386:3;5382:20;5379:1;5372:31;5422:4;5419:1;5412:15;5446:4;5443:1;5436:15;5462:277;5529:6;5582:2;5570:9;5561:7;5557:23;5553:32;5550:52;;;5598:1;5595;5588:12;5550:52;5630:9;5624:16;5683:5;5676:13;5669:21;5662:5;5659:32;5649:60;;5705:1;5702;5695:12;5744:135;5783:3;-1:-1:-1;;5804:17:4;;5801:43;;;5824:18;;:::i;:::-;-1:-1:-1;5871:1:4;5860:13;;5744:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    157,
    4551
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E281A98 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xDB006A75 GT PUSH2 0x56 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xE87278CE EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0xF00830E5 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x235 JUMPI STOP JUMPDEST DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0xA0EF91DF EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xCE2734CC EQ PUSH2 0x1B5 JUMPI STOP JUMPDEST DUP1 PUSH4 0xCA6A16E EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x1826C119 EQ PUSH2 0x106 JUMPI DUP1 PUSH4 0x66837F1B EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15B JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xC4 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0xE1 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA5 JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x121 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x141 CALLDATASIZE PUSH1 0x4 PUSH2 0xDF9 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x6FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xEC4 JUMP JUMPDEST PUSH2 0x730 JUMP JUMPDEST PUSH2 0xC4 PUSH2 0x7D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x175 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x82C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x210 CALLDATASIZE PUSH1 0x4 PUSH2 0xF07 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x175 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC4 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3C JUMP JUMPDEST PUSH2 0xCC1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0x40C10F19 SWAP2 POP PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4E6F20726563697069656E7420616464726573736573 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x410 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x434 SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST DUP2 DUP4 MLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0xFC2 JUMP JUMPDEST GT ISZERO PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x53 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207468616E6B7320746F6B656E732077697468696E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74686520636F6E747261637420746F2066756E6420726563697069656E74732E PUSH1 0x64 DUP3 ADD MSTORE PUSH19 0x101026B4B73A1036B7B932903A37B5B2B73997 PUSH1 0x69 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x2 SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x506 JUMPI PUSH2 0x506 PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x540 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x55F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x583 SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST POP DUP1 PUSH2 0x58E DUP2 PUSH2 0x1019 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x1 SLOAD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 ADDRESS SWAP1 PUSH2 0x5E8 SWAP1 DUP6 PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x642 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x596 JUMPI PUSH1 0x2 SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x40C10F19 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x67B JUMPI PUSH2 0x67B PUSH2 0xFE1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x6F2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x724 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH2 0x72E PUSH1 0x0 PUSH2 0xD55 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7CD SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x829 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x898 SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST LT ISZERO PUSH2 0x901 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547279696E6720746F2072656465656D206D6F72652072657761726473207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x616E20796F752061726520686F6C64696E67 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x958 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97C SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xDF6A6B38F34402C0BA80B47405008313822040F95ECED1D637852F9EEB08FC82 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA21 SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST LT ISZERO PUSH2 0xA6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207468616E6B20796F757320746F2073656E64000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADB SWAP2 SWAP1 PUSH2 0xF93 JUMP JUMPDEST LT ISZERO PUSH2 0xB29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207265776172647320746F2067697665206F75740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0xB82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74207468616E6B20796F757273656C6600000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x27F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBFD SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC75 SWAP2 SWAP1 PUSH2 0xFF7 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 CALLER SWAP2 PUSH32 0x34355B4C5DFF25F21B90975D65F648EDF2C50BEA228323BB74333BFE5F015F3C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x27F JUMP JUMPDEST PUSH2 0x829 DUP2 JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0xE4C JUMPI PUSH2 0xE4C PUSH2 0xDC7 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP7 DUP3 GT OR ISZERO PUSH2 0xE71 JUMPI PUSH2 0xE71 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP3 DUP4 MSTORE DUP2 DUP4 ADD SWAP4 POP DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP10 DUP5 GT ISZERO PUSH2 0xE8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEB4 JUMPI PUSH2 0xEA5 DUP7 PUSH2 0xDDD JUMP JUMPDEST DUP6 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH2 0xE94 JUMP JUMPDEST SWAP10 SWAP8 SWAP1 SWAP2 ADD CALLDATALOAD SWAP8 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE0 DUP4 PUSH2 0xDDD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0xF2C PUSH1 0x20 DUP6 ADD PUSH2 0xDDD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF57 DUP3 PUSH2 0xDDD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xFDC JUMPI PUSH2 0xFDC PUSH2 0xFAC JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x102D JUMPI PUSH2 0x102D PUSH2 0xFAC JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT JUMP 0xB0 BALANCE 0xCC RETURNDATASIZE CREATE2 0xA6 0xDC 0xFC GT 0xEC PC OR CREATE 0xBD KECCAK256 0xD CODECOPY 0x21 ISZERO EXTCODEHASH 0xE7 0xE4 0xC2 PUSH29 0x818CE5E4DE1764736F6C634300080B0033000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        157,
        4551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "LT",
      "path": "2"
    },
    "9": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD"
    },
    "12": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "13": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "SHR",
      "path": "2"
    },
    "19": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "20": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9E281A98"
    },
    "25": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "GT",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x79"
    },
    "29": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "30": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "31": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDB006A75"
    },
    "36": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "GT",
      "path": "2"
    },
    "37": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x56"
    },
    "40": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "41": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "42": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDB006A75"
    },
    "47": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "48": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D5"
    },
    "51": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "52": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "53": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE87278CE"
    },
    "58": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "59": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5"
    },
    "62": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "63": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "64": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF00830E5"
    },
    "69": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "70": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x215"
    },
    "73": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "74": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "75": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "81": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x235"
    },
    "84": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "85": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "STOP",
      "path": "2"
    },
    "86": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x9E281A98"
    },
    "93": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18D"
    },
    "97": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA0EF91DF"
    },
    "104": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AD"
    },
    "108": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xCE2734CC"
    },
    "115": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "116": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5"
    },
    "119": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "120": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "STOP",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "122": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "123": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xCA6A16E"
    },
    "128": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "129": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6"
    },
    "132": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "133": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x12065FE0"
    },
    "139": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "140": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6"
    },
    "143": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "144": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "145": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1826C119"
    },
    "150": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "151": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x106"
    },
    "154": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "155": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "156": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x66837F1B"
    },
    "161": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "162": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x126"
    },
    "165": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "166": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "167": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "172": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "173": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146"
    },
    "176": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "177": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "DUP1",
      "path": "2"
    },
    "178": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "183": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "EQ",
      "path": "2"
    },
    "184": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15B"
    },
    "187": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "188": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "STOP",
      "path": "2"
    },
    "189": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "190": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "191": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "194": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "195": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "STOP",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        157,
        4551
      ],
      "op": "STOP",
      "path": "2"
    },
    "198": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "199": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "200": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "201": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "202": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD2"
    },
    "205": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "206": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "208": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "DUP1",
      "path": "2"
    },
    "209": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "REVERT",
      "path": "2"
    },
    "210": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "211": {
      "op": "POP"
    },
    "212": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "215": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1"
    },
    "218": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "219": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "221": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA5"
    },
    "224": {
      "fn": "Swap.addMintedTokens",
      "jump": "i",
      "offset": [
        3268,
        3480
      ],
      "op": "JUMP",
      "path": "2"
    },
    "225": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "226": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x255"
    },
    "229": {
      "fn": "Swap.addMintedTokens",
      "jump": "i",
      "offset": [
        3268,
        3480
      ],
      "op": "JUMP",
      "path": "2"
    },
    "230": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "231": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "232": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "DUP1",
      "path": "2"
    },
    "233": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "234": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF2"
    },
    "237": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "238": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "240": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "DUP1",
      "path": "2"
    },
    "241": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "REVERT",
      "path": "2"
    },
    "242": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "243": {
      "op": "POP"
    },
    "244": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "246": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "247": {
      "fn": "Swap.getBalance",
      "offset": [
        4521,
        4542
      ],
      "op": "SELFBALANCE",
      "path": "2",
      "statement": 0
    },
    "248": {
      "op": "DUP2"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "252": {
      "op": "ADD"
    },
    "253": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "254": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "256": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "257": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "DUP1",
      "path": "2"
    },
    "258": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "259": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "SUB",
      "path": "2"
    },
    "260": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "261": {
      "fn": "Swap.getBalance",
      "offset": [
        4455,
        4549
      ],
      "op": "RETURN",
      "path": "2"
    },
    "262": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "263": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "264": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "DUP1",
      "path": "2"
    },
    "265": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "266": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x112"
    },
    "269": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "270": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "272": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "DUP1",
      "path": "2"
    },
    "273": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "REVERT",
      "path": "2"
    },
    "274": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "275": {
      "op": "POP"
    },
    "276": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "279": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x121"
    },
    "282": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "283": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "285": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF9"
    },
    "288": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        2132,
        2716
      ],
      "op": "JUMP",
      "path": "2"
    },
    "289": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "290": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "293": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        2132,
        2716
      ],
      "op": "JUMP",
      "path": "2"
    },
    "294": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "295": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "296": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "297": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "298": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132"
    },
    "301": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "302": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "304": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "DUP1",
      "path": "2"
    },
    "305": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "REVERT",
      "path": "2"
    },
    "306": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "307": {
      "op": "POP"
    },
    "308": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "311": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x141"
    },
    "314": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "315": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "317": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF9"
    },
    "320": {
      "fn": "Swap.mintThanksToUsers",
      "jump": "i",
      "offset": [
        2802,
        3176
      ],
      "op": "JUMP",
      "path": "2"
    },
    "321": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "322": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59B"
    },
    "325": {
      "fn": "Swap.mintThanksToUsers",
      "jump": "i",
      "offset": [
        2802,
        3176
      ],
      "op": "JUMP",
      "path": "2"
    },
    "326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "329": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "330": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152"
    },
    "333": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "334": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "336": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "337": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "338": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FA"
    },
    "346": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "347": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "348": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "349": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "350": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "351": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "354": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "355": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "357": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "358": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "359": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "363": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "370": {
      "op": "SHL"
    },
    "371": {
      "op": "SUB"
    },
    "372": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "373": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "374": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "376": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "381": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "383": {
      "op": "SHL"
    },
    "384": {
      "op": "SUB"
    },
    "385": {
      "op": "SWAP1"
    },
    "386": {
      "op": "SWAP2"
    },
    "387": {
      "op": "AND"
    },
    "388": {
      "op": "DUP2"
    },
    "389": {
      "op": "MSTORE"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "392": {
      "op": "ADD"
    },
    "393": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFD"
    },
    "396": {
      "op": "JUMP"
    },
    "397": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "398": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "399": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "400": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "401": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x199"
    },
    "404": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "405": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "407": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "DUP1",
      "path": "2"
    },
    "408": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "REVERT",
      "path": "2"
    },
    "409": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "410": {
      "op": "POP"
    },
    "411": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "414": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A8"
    },
    "417": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "418": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "420": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEC4"
    },
    "423": {
      "fn": "Swap.withdrawToken",
      "jump": "i",
      "offset": [
        3569,
        3921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "424": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "425": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x730"
    },
    "428": {
      "fn": "Swap.withdrawToken",
      "jump": "i",
      "offset": [
        3569,
        3921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "429": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4081,
        4197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "430": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4081,
        4197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "433": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4081,
        4197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D3"
    },
    "436": {
      "fn": "Swap.withdrawEth",
      "jump": "i",
      "offset": [
        4081,
        4197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "437": {
      "offset": [
        188,
        223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "438": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "439": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "440": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "441": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1"
    },
    "444": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "445": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "447": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "DUP1",
      "path": "2"
    },
    "448": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "REVERT",
      "path": "2"
    },
    "449": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "offset": [
        188,
        223
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "453": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "454": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175"
    },
    "457": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "462": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "464": {
      "op": "SHL"
    },
    "465": {
      "op": "SUB"
    },
    "466": {
      "offset": [
        188,
        223
      ],
      "op": "AND",
      "path": "2"
    },
    "467": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "DUP2",
      "path": "2"
    },
    "468": {
      "fn": "Swap.withdrawEth",
      "offset": [
        188,
        223
      ],
      "op": "JUMP",
      "path": "2"
    },
    "469": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "470": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "471": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "DUP1",
      "path": "2"
    },
    "472": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "473": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E1"
    },
    "476": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "477": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "479": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "DUP1",
      "path": "2"
    },
    "480": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "REVERT",
      "path": "2"
    },
    "481": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "486": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0"
    },
    "489": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "490": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "492": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEEE"
    },
    "495": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        1639,
        1990
      ],
      "op": "JUMP",
      "path": "2"
    },
    "496": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "497": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82C"
    },
    "500": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        1639,
        1990
      ],
      "op": "JUMP",
      "path": "2"
    },
    "501": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "502": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "503": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "504": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "505": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x201"
    },
    "508": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "509": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "511": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "DUP1",
      "path": "2"
    },
    "512": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "REVERT",
      "path": "2"
    },
    "513": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "514": {
      "op": "POP"
    },
    "515": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4"
    },
    "518": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x210"
    },
    "521": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "522": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "524": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF07"
    },
    "527": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        718,
        1577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "528": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "529": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B5"
    },
    "532": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        718,
        1577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "533": {
      "offset": [
        229,
        263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "534": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "535": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "DUP1",
      "path": "2"
    },
    "536": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "537": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x221"
    },
    "540": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "541": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "543": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "DUP1",
      "path": "2"
    },
    "544": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "REVERT",
      "path": "2"
    },
    "545": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "546": {
      "op": "POP"
    },
    "547": {
      "offset": [
        229,
        263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "549": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "550": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x175"
    },
    "553": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "558": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "560": {
      "op": "SHL"
    },
    "561": {
      "op": "SUB"
    },
    "562": {
      "offset": [
        229,
        263
      ],
      "op": "AND",
      "path": "2"
    },
    "563": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "DUP2",
      "path": "2"
    },
    "564": {
      "fn": "Swap.sendThanks",
      "offset": [
        229,
        263
      ],
      "op": "JUMP",
      "path": "2"
    },
    "565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "567": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "569": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x241"
    },
    "572": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "575": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "578": {
      "op": "POP"
    },
    "579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "582": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x250"
    },
    "585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3C"
    },
    "591": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC1"
    },
    "596": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "597": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "598": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "600": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "op": "SUB"
    },
    "609": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "610": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 2
    },
    "611": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "612": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x288"
    },
    "615": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "616": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "618": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "625": {
      "op": "SHL"
    },
    "626": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "627": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "630": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "631": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "634": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "635": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5E"
    },
    "638": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "642": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "644": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "645": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "648": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "649": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3380
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x1"
    },
    "651": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3380
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "652": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "654": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "655": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "660": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "662": {
      "op": "SHL"
    },
    "663": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "664": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "665": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3394,
        3398
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "666": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "668": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP3",
      "path": "2"
    },
    "669": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "ADD",
      "path": "2"
    },
    "670": {
      "op": "MSTORE"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "673": {
      "op": "DUP2"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "DUP4"
    },
    "676": {
      "op": "SWAP1"
    },
    "677": {
      "op": "MSTORE"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "684": {
      "op": "SHL"
    },
    "685": {
      "op": "SUB"
    },
    "686": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "687": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3380
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "688": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3380
      ],
      "op": "AND",
      "path": "2"
    },
    "689": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3380
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "690": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3385
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40C10F19"
    },
    "695": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3385
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "696": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "698": {
      "op": "ADD"
    },
    "699": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "701": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "703": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "704": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "705": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP4",
      "path": "2"
    },
    "706": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "SUB",
      "path": "2"
    },
    "707": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "708": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "710": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP8",
      "path": "2"
    },
    "711": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "712": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "713": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "714": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "715": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "716": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D4"
    },
    "719": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "720": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "722": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "723": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "724": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "725": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "POP",
      "path": "2"
    },
    "726": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "GAS",
      "path": "2"
    },
    "727": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "CALL",
      "path": "2"
    },
    "728": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "729": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "730": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "731": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E8"
    },
    "734": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "735": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "736": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "738": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "DUP1",
      "path": "2"
    },
    "739": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "740": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "741": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "743": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "REVERT",
      "path": "2"
    },
    "744": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3365,
        3415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "op": "POP"
    },
    "747": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3439
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x2"
    },
    "749": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3439
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "750": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "752": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "753": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "758": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "760": {
      "op": "SHL"
    },
    "761": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "762": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "763": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3453,
        3457
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "764": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "766": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "767": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "ADD",
      "path": "2"
    },
    "768": {
      "op": "MSTORE"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "771": {
      "op": "DUP2"
    },
    "772": {
      "op": "ADD"
    },
    "773": {
      "op": "DUP7"
    },
    "774": {
      "op": "SWAP1"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "782": {
      "op": "SHL"
    },
    "783": {
      "op": "SUB"
    },
    "784": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "785": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3439
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "786": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3439
      ],
      "op": "AND",
      "path": "2"
    },
    "787": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3439
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "788": {
      "op": "POP"
    },
    "789": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3444
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40C10F19"
    },
    "794": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3444
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "798": {
      "op": "ADD"
    },
    "799": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "801": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "803": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "804": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "805": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP4",
      "path": "2"
    },
    "806": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "SUB",
      "path": "2"
    },
    "807": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP2",
      "path": "2"
    },
    "808": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "810": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP8",
      "path": "2"
    },
    "811": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "812": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "813": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "814": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "815": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "816": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x338"
    },
    "819": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "820": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "822": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "823": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "REVERT",
      "path": "2"
    },
    "824": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "825": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "POP",
      "path": "2"
    },
    "826": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "GAS",
      "path": "2"
    },
    "827": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "CALL",
      "path": "2"
    },
    "828": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "829": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "830": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "831": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34C"
    },
    "834": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "835": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "836": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "838": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "DUP1",
      "path": "2"
    },
    "839": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "840": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "841": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "843": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "REVERT",
      "path": "2"
    },
    "844": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "845": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "POP",
      "path": "2"
    },
    "846": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "POP",
      "path": "2"
    },
    "847": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "POP",
      "path": "2"
    },
    "848": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3425,
        3473
      ],
      "op": "POP",
      "path": "2"
    },
    "849": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "POP",
      "path": "2"
    },
    "850": {
      "fn": "Swap.addMintedTokens",
      "offset": [
        3268,
        3480
      ],
      "op": "POP",
      "path": "2"
    },
    "851": {
      "fn": "Swap.addMintedTokens",
      "jump": "o",
      "offset": [
        3268,
        3480
      ],
      "op": "JUMP",
      "path": "2"
    },
    "852": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "855": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "862": {
      "op": "SHL"
    },
    "863": {
      "op": "SUB"
    },
    "864": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "865": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "866": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "867": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37E"
    },
    "870": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "874": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "882": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "883": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "885": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "886": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "889": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "890": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5E"
    },
    "893": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "894": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "895": {
      "fn": "Swap.distribute",
      "offset": [
        2294,
        2295
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x0"
    },
    "897": {
      "fn": "Swap.distribute",
      "offset": [
        2274,
        2284
      ],
      "op": "DUP3",
      "path": "2"
    },
    "898": {
      "fn": "Swap.distribute",
      "offset": [
        2274,
        2291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "899": {
      "branch": 28,
      "fn": "Swap.distribute",
      "offset": [
        2274,
        2295
      ],
      "op": "GT",
      "path": "2"
    },
    "900": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C8"
    },
    "903": {
      "branch": 28,
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "904": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "906": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "907": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "911": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "913": {
      "op": "SHL"
    },
    "914": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "DUP2",
      "path": "2"
    },
    "915": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "918": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "920": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "DUP3",
      "path": "2"
    },
    "921": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "ADD",
      "path": "2"
    },
    "922": {
      "op": "MSTORE"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "927": {
      "op": "DUP3"
    },
    "928": {
      "op": "ADD"
    },
    "929": {
      "op": "MSTORE"
    },
    "930": {
      "op": "PUSH22",
      "value": "0x4E6F20726563697069656E7420616464726573736573"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "958": {
      "op": "DUP3"
    },
    "959": {
      "op": "ADD"
    },
    "960": {
      "op": "MSTORE"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "963": {
      "op": "ADD"
    },
    "964": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "967": {
      "op": "JUMP"
    },
    "968": {
      "fn": "Swap.distribute",
      "offset": [
        2266,
        2322
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "969": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2386
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x2"
    },
    "971": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2386
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "972": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "974": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "975": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP2",
      "path": "2"
    },
    "984": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "985": {
      "fn": "Swap.distribute",
      "offset": [
        2405,
        2409
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "986": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "988": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "989": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "ADD",
      "path": "2"
    },
    "990": {
      "op": "MSTORE"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "997": {
      "op": "SHL"
    },
    "998": {
      "op": "SUB"
    },
    "999": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2386
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1000": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2386
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1001": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2386
      ],
      "op": "AND",
      "path": "2"
    },
    "1002": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2386
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1003": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2396
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "1008": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2396
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1011": {
      "op": "ADD"
    },
    "1012": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1014": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1016": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1017": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1018": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1019": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "SUB",
      "path": "2"
    },
    "1020": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1021": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1022": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "GAS",
      "path": "2"
    },
    "1023": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "1024": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1025": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1026": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1027": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x410"
    },
    "1030": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1031": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1032": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1034": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1035": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1036": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1037": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1039": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1040": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1041": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "POP",
      "path": "2"
    },
    "1042": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "POP",
      "path": "2"
    },
    "1043": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "POP",
      "path": "2"
    },
    "1044": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "POP",
      "path": "2"
    },
    "1045": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1047": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1048": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1049": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1051": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "NOT",
      "path": "2"
    },
    "1052": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1054": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1055": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "ADD",
      "path": "2"
    },
    "1056": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "AND",
      "path": "2"
    },
    "1057": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1058": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "ADD",
      "path": "2"
    },
    "1059": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1060": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1062": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1063": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "POP",
      "path": "2"
    },
    "1064": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1065": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "ADD",
      "path": "2"
    },
    "1066": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1067": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x434"
    },
    "1070": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1071": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1072": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF93"
    },
    "1075": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        2372,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1076": {
      "fn": "Swap.distribute",
      "offset": [
        2372,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1077": {
      "fn": "Swap.distribute",
      "offset": [
        2361,
        2367
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1078": {
      "fn": "Swap.distribute",
      "offset": [
        2341,
        2351
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1079": {
      "fn": "Swap.distribute",
      "offset": [
        2341,
        2358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1080": {
      "fn": "Swap.distribute",
      "offset": [
        2341,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x441"
    },
    "1083": {
      "fn": "Swap.distribute",
      "offset": [
        2341,
        2367
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1084": {
      "fn": "Swap.distribute",
      "offset": [
        2341,
        2367
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1085": {
      "fn": "Swap.distribute",
      "offset": [
        2341,
        2367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFC2"
    },
    "1088": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        2341,
        2367
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1089": {
      "fn": "Swap.distribute",
      "offset": [
        2341,
        2367
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1090": {
      "fn": "Swap.distribute",
      "offset": [
        2340,
        2411
      ],
      "op": "GT",
      "path": "2"
    },
    "1091": {
      "branch": 29,
      "fn": "Swap.distribute",
      "offset": [
        2340,
        2411
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1092": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D1"
    },
    "1095": {
      "branch": 29,
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1096": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1098": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1099": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1105": {
      "op": "SHL"
    },
    "1106": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1107": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1110": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1112": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1113": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "ADD",
      "path": "2"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x53"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1119": {
      "op": "DUP3"
    },
    "1120": {
      "op": "ADD"
    },
    "1121": {
      "op": "MSTORE"
    },
    "1122": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768207468616E6B7320746F6B656E732077697468696E20"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1157": {
      "op": "DUP3"
    },
    "1158": {
      "op": "ADD"
    },
    "1159": {
      "op": "MSTORE"
    },
    "1160": {
      "op": "PUSH32",
      "value": "0x74686520636F6E747261637420746F2066756E6420726563697069656E74732E"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1195": {
      "op": "DUP3"
    },
    "1196": {
      "op": "ADD"
    },
    "1197": {
      "op": "MSTORE"
    },
    "1198": {
      "op": "PUSH19",
      "value": "0x101026B4B73A1036B7B932903A37B5B2B73997"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "1220": {
      "op": "SHL"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1223": {
      "op": "DUP3"
    },
    "1224": {
      "op": "ADD"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "1228": {
      "op": "ADD"
    },
    "1229": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "1232": {
      "op": "JUMP"
    },
    "1233": {
      "fn": "Swap.distribute",
      "offset": [
        2332,
        2499
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1234": {
      "fn": "Swap.distribute",
      "offset": [
        2568,
        2585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1236": {
      "fn": "Swap.distribute",
      "offset": [
        2563,
        2710
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1237": {
      "fn": "Swap.distribute",
      "offset": [
        2599,
        2609
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1238": {
      "fn": "Swap.distribute",
      "offset": [
        2599,
        2616
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1239": {
      "fn": "Swap.distribute",
      "offset": [
        2587,
        2596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1240": {
      "fn": "Swap.distribute",
      "offset": [
        2587,
        2616
      ],
      "op": "LT",
      "path": "2"
    },
    "1241": {
      "fn": "Swap.distribute",
      "offset": [
        2563,
        2710
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1242": {
      "fn": "Swap.distribute",
      "offset": [
        2563,
        2710
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x596"
    },
    "1245": {
      "fn": "Swap.distribute",
      "offset": [
        2563,
        2710
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1246": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2659
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 7,
      "value": "0x2"
    },
    "1248": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2659
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1249": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1250": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1257": {
      "op": "SHL"
    },
    "1258": {
      "op": "SUB"
    },
    "1259": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2659
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1260": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2659
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1261": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2659
      ],
      "op": "AND",
      "path": "2"
    },
    "1262": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2659
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1263": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2668
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "1268": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2668
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1269": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2679
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1270": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2679
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1271": {
      "fn": "Swap.distribute",
      "offset": [
        2680,
        2689
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1272": {
      "fn": "Swap.distribute",
      "offset": [
        2680,
        2689
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1273": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1274": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "LT",
      "path": "2"
    },
    "1275": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x506"
    },
    "1278": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1279": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x506"
    },
    "1282": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFE1"
    },
    "1285": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        2669,
        2690
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1286": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1287": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1289": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "MUL",
      "path": "2"
    },
    "1290": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1292": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1293": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "ADD",
      "path": "2"
    },
    "1294": {
      "fn": "Swap.distribute",
      "offset": [
        2669,
        2690
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1295": {
      "fn": "Swap.distribute",
      "offset": [
        2692,
        2698
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1296": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1298": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1299": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1300": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1305": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "AND",
      "path": "2"
    },
    "1306": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "1308": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "SHL",
      "path": "2"
    },
    "1309": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1310": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1311": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1313": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "ADD",
      "path": "2"
    },
    "1314": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x540"
    },
    "1317": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1318": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1319": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "op": "SUB"
    },
    "1328": {
      "op": "SWAP3"
    },
    "1329": {
      "op": "SWAP1"
    },
    "1330": {
      "op": "SWAP3"
    },
    "1331": {
      "op": "AND"
    },
    "1332": {
      "op": "DUP3"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1336": {
      "op": "DUP3"
    },
    "1337": {
      "op": "ADD"
    },
    "1338": {
      "op": "MSTORE"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1341": {
      "op": "ADD"
    },
    "1342": {
      "op": "SWAP1"
    },
    "1343": {
      "op": "JUMP"
    },
    "1344": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1345": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1347": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1349": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1350": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1351": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1352": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "SUB",
      "path": "2"
    },
    "1353": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1354": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1356": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1357": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "GAS",
      "path": "2"
    },
    "1358": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "CALL",
      "path": "2"
    },
    "1359": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1360": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1361": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1362": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55F"
    },
    "1365": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1366": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1367": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1369": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1370": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1371": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1372": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1374": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1375": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1376": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "POP",
      "path": "2"
    },
    "1377": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "POP",
      "path": "2"
    },
    "1378": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "POP",
      "path": "2"
    },
    "1379": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "POP",
      "path": "2"
    },
    "1380": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1382": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1383": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1384": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1386": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "NOT",
      "path": "2"
    },
    "1387": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1389": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1390": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "ADD",
      "path": "2"
    },
    "1391": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "AND",
      "path": "2"
    },
    "1392": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1393": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "ADD",
      "path": "2"
    },
    "1394": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1395": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1397": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1398": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "POP",
      "path": "2"
    },
    "1399": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1400": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "ADD",
      "path": "2"
    },
    "1401": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1402": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x583"
    },
    "1405": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1406": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1407": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF7"
    },
    "1410": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        2645,
        2699
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1411": {
      "fn": "Swap.distribute",
      "offset": [
        2645,
        2699
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1412": {
      "op": "POP"
    },
    "1413": {
      "fn": "Swap.distribute",
      "offset": [
        2618,
        2629
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 8
    },
    "1414": {
      "fn": "Swap.distribute",
      "offset": [
        2618,
        2629
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58E"
    },
    "1417": {
      "fn": "Swap.distribute",
      "offset": [
        2618,
        2629
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1418": {
      "fn": "Swap.distribute",
      "offset": [
        2618,
        2629
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1019"
    },
    "1421": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        2618,
        2629
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1422": {
      "fn": "Swap.distribute",
      "offset": [
        2618,
        2629
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1423": {
      "fn": "Swap.distribute",
      "offset": [
        2618,
        2629
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1424": {
      "fn": "Swap.distribute",
      "offset": [
        2618,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "1425": {
      "fn": "Swap.distribute",
      "offset": [
        2618,
        2629
      ],
      "op": "POP",
      "path": "2"
    },
    "1426": {
      "fn": "Swap.distribute",
      "offset": [
        2563,
        2710
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D4"
    },
    "1429": {
      "fn": "Swap.distribute",
      "offset": [
        2563,
        2710
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1430": {
      "fn": "Swap.distribute",
      "offset": [
        2563,
        2710
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1431": {
      "fn": "Swap.distribute",
      "offset": [
        2563,
        2710
      ],
      "op": "POP",
      "path": "2"
    },
    "1432": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "POP",
      "path": "2"
    },
    "1433": {
      "fn": "Swap.distribute",
      "offset": [
        2132,
        2716
      ],
      "op": "POP",
      "path": "2"
    },
    "1434": {
      "fn": "Swap.distribute",
      "jump": "o",
      "offset": [
        2132,
        2716
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1435": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2802,
        3176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1436": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1438": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1448": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1449": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1450": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C5"
    },
    "1453": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1454": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1456": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1457": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1463": {
      "op": "SHL"
    },
    "1464": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1465": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1466": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1468": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1469": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "1472": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1473": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5E"
    },
    "1476": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1477": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1478": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2916
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "1480": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2916
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1481": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2946,
        2963
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1482": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2946,
        2963
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1492": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2916
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1493": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2916
      ],
      "op": "AND",
      "path": "2"
    },
    "1494": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1495": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2921
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40C10F19"
    },
    "1500": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1501": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2930,
        2934
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "1502": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2930,
        2934
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1503": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2937,
        2963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E8"
    },
    "1506": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2937,
        2963
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1507": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2937,
        2943
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1508": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2937,
        2963
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFC2"
    },
    "1511": {
      "fn": "Swap.mintThanksToUsers",
      "jump": "i",
      "offset": [
        2937,
        2963
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1512": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2937,
        2963
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1513": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1515": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "op": "NOT"
    },
    "1525": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "1527": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1528": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1529": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "SHL",
      "path": "2"
    },
    "1530": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "AND",
      "path": "2"
    },
    "1531": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1532": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1539": {
      "op": "SHL"
    },
    "1540": {
      "op": "SUB"
    },
    "1541": {
      "op": "SWAP1"
    },
    "1542": {
      "op": "SWAP3"
    },
    "1543": {
      "op": "AND"
    },
    "1544": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1546": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1547": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "ADD",
      "path": "2"
    },
    "1548": {
      "op": "MSTORE"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1551": {
      "op": "DUP3"
    },
    "1552": {
      "op": "ADD"
    },
    "1553": {
      "op": "MSTORE"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1559": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1561": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1562": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1563": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1564": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "SUB",
      "path": "2"
    },
    "1565": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1566": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1568": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1569": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1570": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1571": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1572": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1573": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1574": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62E"
    },
    "1577": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1578": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1580": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1581": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1582": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1583": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "POP",
      "path": "2"
    },
    "1584": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "GAS",
      "path": "2"
    },
    "1585": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "CALL",
      "path": "2"
    },
    "1586": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1587": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1588": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1589": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x642"
    },
    "1592": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1593": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1594": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1596": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1597": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1598": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1599": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1601": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1602": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1603": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "POP",
      "path": "2"
    },
    "1604": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "POP",
      "path": "2"
    },
    "1605": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "POP",
      "path": "2"
    },
    "1606": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        2901,
        2964
      ],
      "op": "POP",
      "path": "2"
    },
    "1607": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3032,
        3049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1609": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3027,
        3170
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1610": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3063,
        3073
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1611": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3063,
        3080
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1612": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3051,
        3060
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1613": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3051,
        3080
      ],
      "op": "LT",
      "path": "2"
    },
    "1614": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3027,
        3170
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1615": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3027,
        3170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x596"
    },
    "1618": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3027,
        3170
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1619": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3123
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x2"
    },
    "1621": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3123
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1622": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1623": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1630": {
      "op": "SHL"
    },
    "1631": {
      "op": "SUB"
    },
    "1632": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3123
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1633": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3123
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1634": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3123
      ],
      "op": "AND",
      "path": "2"
    },
    "1635": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3123
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1636": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3128
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x40C10F19"
    },
    "1641": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3128
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1642": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3139
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1643": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3139
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1644": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3140,
        3149
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1645": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3140,
        3149
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1646": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1647": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "LT",
      "path": "2"
    },
    "1648": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67B"
    },
    "1651": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1652": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x67B"
    },
    "1655": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFE1"
    },
    "1658": {
      "fn": "Swap.mintThanksToUsers",
      "jump": "i",
      "offset": [
        3129,
        3150
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1659": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1660": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1662": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "MUL",
      "path": "2"
    },
    "1663": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1665": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "ADD",
      "path": "2"
    },
    "1666": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "ADD",
      "path": "2"
    },
    "1667": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3129,
        3150
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1668": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3152,
        3158
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1669": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1671": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1672": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1673": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "1678": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "AND",
      "path": "2"
    },
    "1679": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "1681": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "SHL",
      "path": "2"
    },
    "1682": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1683": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1684": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1686": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "ADD",
      "path": "2"
    },
    "1687": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6B5"
    },
    "1690": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1691": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1692": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "op": "SWAP3"
    },
    "1702": {
      "op": "SWAP1"
    },
    "1703": {
      "op": "SWAP3"
    },
    "1704": {
      "op": "AND"
    },
    "1705": {
      "op": "DUP3"
    },
    "1706": {
      "op": "MSTORE"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "ADD"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1714": {
      "op": "ADD"
    },
    "1715": {
      "op": "SWAP1"
    },
    "1716": {
      "op": "JUMP"
    },
    "1717": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1718": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1720": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1722": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1723": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1724": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1725": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "SUB",
      "path": "2"
    },
    "1726": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1727": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1729": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1730": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1731": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "1732": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1733": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1734": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1735": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CF"
    },
    "1738": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1739": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1741": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1742": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1743": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1744": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "POP",
      "path": "2"
    },
    "1745": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "GAS",
      "path": "2"
    },
    "1746": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "CALL",
      "path": "2"
    },
    "1747": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1748": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1749": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1750": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E3"
    },
    "1753": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1754": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1755": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1757": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1758": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1759": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1760": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1762": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1763": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1764": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "POP",
      "path": "2"
    },
    "1765": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "POP",
      "path": "2"
    },
    "1766": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "POP",
      "path": "2"
    },
    "1767": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3109,
        3159
      ],
      "op": "POP",
      "path": "2"
    },
    "1768": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 11
    },
    "1769": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1770": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F2"
    },
    "1773": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1774": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1019"
    },
    "1777": {
      "fn": "Swap.mintThanksToUsers",
      "jump": "i",
      "offset": [
        3082,
        3093
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1778": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1779": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1780": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "POP",
      "path": "2"
    },
    "1781": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3082,
        3093
      ],
      "op": "POP",
      "path": "2"
    },
    "1782": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3027,
        3170
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x649"
    },
    "1785": {
      "fn": "Swap.mintThanksToUsers",
      "offset": [
        3027,
        3170
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1787": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1789": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1792": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1796": {
      "op": "SHL"
    },
    "1797": {
      "op": "SUB"
    },
    "1798": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1799": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1800": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1801": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x724"
    },
    "1804": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1805": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1814": {
      "op": "SHL"
    },
    "1815": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1816": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1817": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1819": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1820": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "1823": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1824": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5E"
    },
    "1827": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1828": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1829": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x72E"
    },
    "1832": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD55"
    },
    "1837": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1839": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1840": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1841": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1843": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1850": {
      "op": "SHL"
    },
    "1851": {
      "op": "SUB"
    },
    "1852": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1853": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1854": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1855": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75A"
    },
    "1858": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1859": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1862": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1870": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1871": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1874": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "1877": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5E"
    },
    "1881": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1882": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1883": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 13,
      "value": "0x40"
    },
    "1885": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1886": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1895": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1896": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3894,
        3904
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1897": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1899": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1900": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "ADD",
      "path": "2"
    },
    "1901": {
      "op": "MSTORE"
    },
    "1902": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1904": {
      "op": "DUP2"
    },
    "1905": {
      "op": "ADD"
    },
    "1906": {
      "op": "DUP3"
    },
    "1907": {
      "op": "SWAP1"
    },
    "1908": {
      "op": "MSTORE"
    },
    "1909": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3702,
        3716
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1910": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3702,
        3716
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1917": {
      "op": "SHL"
    },
    "1918": {
      "op": "SUB"
    },
    "1919": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3893
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1920": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3893
      ],
      "op": "AND",
      "path": "2"
    },
    "1921": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1922": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3893
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "1927": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1933": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1935": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1936": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1937": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1938": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "SUB",
      "path": "2"
    },
    "1939": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1940": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1942": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1943": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "GAS",
      "path": "2"
    },
    "1944": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "CALL",
      "path": "2"
    },
    "1945": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1946": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1947": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1948": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A9"
    },
    "1951": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1952": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1953": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1955": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1956": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "1957": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1958": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1960": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1961": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1962": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "POP",
      "path": "2"
    },
    "1963": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "POP",
      "path": "2"
    },
    "1964": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "POP",
      "path": "2"
    },
    "1965": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "POP",
      "path": "2"
    },
    "1966": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1968": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1969": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "1970": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1972": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "NOT",
      "path": "2"
    },
    "1973": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1975": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1976": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "ADD",
      "path": "2"
    },
    "1977": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "AND",
      "path": "2"
    },
    "1978": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1979": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "ADD",
      "path": "2"
    },
    "1980": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1981": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1983": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1984": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "POP",
      "path": "2"
    },
    "1985": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1986": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "ADD",
      "path": "2"
    },
    "1987": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1988": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7CD"
    },
    "1991": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1992": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1993": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF7"
    },
    "1996": {
      "fn": "Swap.withdrawToken",
      "jump": "i",
      "offset": [
        3871,
        3914
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1997": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1998": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3871,
        3914
      ],
      "op": "POP",
      "path": "2"
    },
    "1999": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3650,
        3921
      ],
      "op": "POP",
      "path": "2"
    },
    "2000": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "POP",
      "path": "2"
    },
    "2001": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3569,
        3921
      ],
      "op": "POP",
      "path": "2"
    },
    "2002": {
      "fn": "Swap.withdrawToken",
      "jump": "o",
      "offset": [
        3569,
        3921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2003": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4081,
        4197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2004": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2006": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2013": {
      "op": "SHL"
    },
    "2014": {
      "op": "SUB"
    },
    "2015": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2016": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2017": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2018": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FD"
    },
    "2021": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2022": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2024": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2025": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2031": {
      "op": "SHL"
    },
    "2032": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2033": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2034": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2036": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2037": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "2040": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5E"
    },
    "2044": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2045": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2046": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 14,
      "value": "0x40"
    },
    "2048": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2049": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4147,
        4157
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2050": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4147,
        4157
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2051": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4168,
        4189
      ],
      "op": "SELFBALANCE",
      "path": "2"
    },
    "2052": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2053": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2054": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8FC"
    },
    "2057": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "MUL",
      "path": "2"
    },
    "2058": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2059": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2061": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2062": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2063": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2064": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4168,
        4189
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2065": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4147,
        4157
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2066": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2067": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "CALL",
      "path": "2"
    },
    "2068": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2069": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "POP",
      "path": "2"
    },
    "2070": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "POP",
      "path": "2"
    },
    "2071": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "POP",
      "path": "2"
    },
    "2072": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "POP",
      "path": "2"
    },
    "2073": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2074": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2075": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2076": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x829"
    },
    "2079": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2080": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2081": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2083": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2084": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2085": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2086": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2088": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2089": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2090": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4139,
        4190
      ],
      "op": "POP",
      "path": "2"
    },
    "2091": {
      "fn": "Swap.withdrawEth",
      "jump": "o",
      "offset": [
        4081,
        4197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2092": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2093": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1779
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x1"
    },
    "2095": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1779
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2096": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2098": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2099": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2106": {
      "op": "SHL"
    },
    "2107": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2108": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2109": {
      "fn": "Swap.redeem",
      "offset": [
        1790,
        1800
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2110": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2112": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2113": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "ADD",
      "path": "2"
    },
    "2114": {
      "op": "MSTORE"
    },
    "2115": {
      "fn": "Swap.redeem",
      "offset": [
        1805,
        1811
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2116": {
      "fn": "Swap.redeem",
      "offset": [
        1805,
        1811
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2123": {
      "op": "SHL"
    },
    "2124": {
      "op": "SUB"
    },
    "2125": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1779
      ],
      "op": "AND",
      "path": "2"
    },
    "2126": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1779
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2127": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1789
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "2132": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2135": {
      "op": "ADD"
    },
    "2136": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2138": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2140": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2141": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2142": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2143": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "SUB",
      "path": "2"
    },
    "2144": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2145": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2146": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "GAS",
      "path": "2"
    },
    "2147": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2148": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2149": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2150": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2151": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x874"
    },
    "2154": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2155": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2156": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2158": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2159": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2160": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2161": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2163": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2164": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2165": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "POP",
      "path": "2"
    },
    "2166": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "POP",
      "path": "2"
    },
    "2167": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "POP",
      "path": "2"
    },
    "2168": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "POP",
      "path": "2"
    },
    "2169": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2171": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2172": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2173": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2175": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "NOT",
      "path": "2"
    },
    "2176": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2178": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2179": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "ADD",
      "path": "2"
    },
    "2180": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "AND",
      "path": "2"
    },
    "2181": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2182": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "ADD",
      "path": "2"
    },
    "2183": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2184": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2186": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2187": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "POP",
      "path": "2"
    },
    "2188": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2189": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "ADD",
      "path": "2"
    },
    "2190": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2191": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x898"
    },
    "2194": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2195": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2196": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF93"
    },
    "2199": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        1764,
        1801
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2200": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1801
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2201": {
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1811
      ],
      "op": "LT",
      "path": "2"
    },
    "2202": {
      "branch": 30,
      "fn": "Swap.redeem",
      "offset": [
        1764,
        1811
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2203": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x901"
    },
    "2206": {
      "branch": 30,
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2207": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2209": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2216": {
      "op": "SHL"
    },
    "2217": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2218": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2221": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2223": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2224": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "ADD",
      "path": "2"
    },
    "2225": {
      "op": "MSTORE"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2230": {
      "op": "DUP3"
    },
    "2231": {
      "op": "ADD"
    },
    "2232": {
      "op": "MSTORE"
    },
    "2233": {
      "op": "PUSH32",
      "value": "0x547279696E6720746F2072656465656D206D6F72652072657761726473207468"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2268": {
      "op": "DUP3"
    },
    "2269": {
      "op": "ADD"
    },
    "2270": {
      "op": "MSTORE"
    },
    "2271": {
      "op": "PUSH18",
      "value": "0x616E20796F752061726520686F6C64696E67"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2295": {
      "op": "DUP3"
    },
    "2296": {
      "op": "ADD"
    },
    "2297": {
      "op": "MSTORE"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "2304": {
      "op": "JUMP"
    },
    "2305": {
      "fn": "Swap.redeem",
      "offset": [
        1756,
        1866
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2306": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1892
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 16,
      "value": "0x1"
    },
    "2308": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1892
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2309": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2311": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2312": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2319": {
      "op": "SHL"
    },
    "2320": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2321": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2322": {
      "fn": "Swap.redeem",
      "offset": [
        1906,
        1916
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2323": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2325": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2326": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "ADD",
      "path": "2"
    },
    "2327": {
      "op": "MSTORE"
    },
    "2328": {
      "fn": "Swap.redeem",
      "offset": [
        1926,
        1930
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2331": {
      "op": "DUP3"
    },
    "2332": {
      "op": "ADD"
    },
    "2333": {
      "op": "MSTORE"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2336": {
      "op": "DUP2"
    },
    "2337": {
      "op": "ADD"
    },
    "2338": {
      "op": "DUP4"
    },
    "2339": {
      "op": "SWAP1"
    },
    "2340": {
      "op": "MSTORE"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "op": "SUB"
    },
    "2349": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2350": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1892
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2351": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1892
      ],
      "op": "AND",
      "path": "2"
    },
    "2352": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1892
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2353": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1905
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "2358": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2361": {
      "op": "ADD"
    },
    "2362": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2364": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2366": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2367": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2368": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2369": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "SUB",
      "path": "2"
    },
    "2370": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2371": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2373": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2374": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "GAS",
      "path": "2"
    },
    "2375": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "CALL",
      "path": "2"
    },
    "2376": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2377": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2378": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2379": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x958"
    },
    "2382": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2383": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2384": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2386": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2387": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2388": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2389": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2391": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2392": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2393": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "POP",
      "path": "2"
    },
    "2394": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "POP",
      "path": "2"
    },
    "2395": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "POP",
      "path": "2"
    },
    "2396": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "POP",
      "path": "2"
    },
    "2397": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2399": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2400": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2401": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2403": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "NOT",
      "path": "2"
    },
    "2404": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2406": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2407": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "ADD",
      "path": "2"
    },
    "2408": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "AND",
      "path": "2"
    },
    "2409": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2410": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "ADD",
      "path": "2"
    },
    "2411": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2412": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2414": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2415": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "POP",
      "path": "2"
    },
    "2416": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2417": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "ADD",
      "path": "2"
    },
    "2418": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2419": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97C"
    },
    "2422": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2423": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2424": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF7"
    },
    "2427": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        1877,
        1940
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2428": {
      "fn": "Swap.redeem",
      "offset": [
        1877,
        1940
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2429": {
      "op": "POP"
    },
    "2430": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x40"
    },
    "2432": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2433": {
      "op": "DUP2"
    },
    "2434": {
      "op": "DUP2"
    },
    "2435": {
      "op": "MSTORE"
    },
    "2436": {
      "fn": "Swap.redeem",
      "offset": [
        1964,
        1974
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2437": {
      "fn": "Swap.redeem",
      "offset": [
        1964,
        1974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2438": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDF6A6B38F34402C0BA80B47405008313822040F95ECED1D637852F9EEB08FC82"
    },
    "2471": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2472": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2477": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2478": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2479": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2480": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "SUB",
      "path": "2"
    },
    "2481": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2482": {
      "fn": "Swap.redeem",
      "offset": [
        1955,
        1983
      ],
      "op": "LOG2",
      "path": "2"
    },
    "2483": {
      "fn": "Swap.redeem",
      "offset": [
        1639,
        1990
      ],
      "op": "POP",
      "path": "2"
    },
    "2484": {
      "fn": "Swap.redeem",
      "jump": "o",
      "offset": [
        1639,
        1990
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2485": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2486": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        956
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0x2"
    },
    "2488": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        956
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2489": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2491": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2492": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2499": {
      "op": "SHL"
    },
    "2500": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2501": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2502": {
      "fn": "Swap.sendThanks",
      "offset": [
        967,
        977
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2503": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2505": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2506": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2507": {
      "op": "MSTORE"
    },
    "2508": {
      "fn": "Swap.sendThanks",
      "offset": [
        982,
        988
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2509": {
      "fn": "Swap.sendThanks",
      "offset": [
        982,
        988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2516": {
      "op": "SHL"
    },
    "2517": {
      "op": "SUB"
    },
    "2518": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        956
      ],
      "op": "AND",
      "path": "2"
    },
    "2519": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        956
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2520": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        966
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "2525": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        966
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2531": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2533": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2534": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2535": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2536": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "SUB",
      "path": "2"
    },
    "2537": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2538": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2539": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "GAS",
      "path": "2"
    },
    "2540": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2541": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2542": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2543": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2544": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9FD"
    },
    "2547": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2548": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2549": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2551": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2552": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2553": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2554": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2556": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2557": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2558": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "POP",
      "path": "2"
    },
    "2559": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "POP",
      "path": "2"
    },
    "2560": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "POP",
      "path": "2"
    },
    "2561": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "POP",
      "path": "2"
    },
    "2562": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2564": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2565": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2566": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2568": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "NOT",
      "path": "2"
    },
    "2569": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2571": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2572": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2573": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "AND",
      "path": "2"
    },
    "2574": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2575": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2576": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2577": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2579": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2580": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "POP",
      "path": "2"
    },
    "2581": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2582": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "ADD",
      "path": "2"
    },
    "2583": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2584": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA21"
    },
    "2587": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2588": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2589": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF93"
    },
    "2592": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        942,
        978
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2593": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        978
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2594": {
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        988
      ],
      "op": "LT",
      "path": "2"
    },
    "2595": {
      "branch": 31,
      "fn": "Swap.sendThanks",
      "offset": [
        942,
        988
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2596": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6F"
    },
    "2599": {
      "branch": 31,
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2600": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2602": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2603": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2607": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2609": {
      "op": "SHL"
    },
    "2610": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2611": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2614": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2616": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2617": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "ADD",
      "path": "2"
    },
    "2618": {
      "op": "MSTORE"
    },
    "2619": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2623": {
      "op": "DUP3"
    },
    "2624": {
      "op": "ADD"
    },
    "2625": {
      "op": "MSTORE"
    },
    "2626": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768207468616E6B20796F757320746F2073656E64000000"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2661": {
      "op": "DUP3"
    },
    "2662": {
      "op": "ADD"
    },
    "2663": {
      "op": "MSTORE"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2666": {
      "op": "ADD"
    },
    "2667": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "2670": {
      "op": "JUMP"
    },
    "2671": {
      "fn": "Swap.sendThanks",
      "offset": [
        934,
        1022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2672": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1055
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x1"
    },
    "2674": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1055
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2675": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2677": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2678": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2685": {
      "op": "SHL"
    },
    "2686": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2687": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2688": {
      "fn": "Swap.sendThanks",
      "offset": [
        1074,
        1078
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2689": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2691": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2692": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "ADD",
      "path": "2"
    },
    "2693": {
      "op": "MSTORE"
    },
    "2694": {
      "fn": "Swap.sendThanks",
      "offset": [
        1084,
        1090
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2695": {
      "fn": "Swap.sendThanks",
      "offset": [
        1084,
        1090
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2702": {
      "op": "SHL"
    },
    "2703": {
      "op": "SUB"
    },
    "2704": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1055
      ],
      "op": "AND",
      "path": "2"
    },
    "2705": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1055
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2706": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1065
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "2711": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1065
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2714": {
      "op": "ADD"
    },
    "2715": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2717": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2719": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2720": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2721": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2722": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "SUB",
      "path": "2"
    },
    "2723": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2724": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2725": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "GAS",
      "path": "2"
    },
    "2726": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "2727": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2728": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2729": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2730": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAB7"
    },
    "2733": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2734": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2735": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2737": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2738": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2739": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2740": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2742": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2743": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2744": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "POP",
      "path": "2"
    },
    "2745": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "POP",
      "path": "2"
    },
    "2746": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "POP",
      "path": "2"
    },
    "2747": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "POP",
      "path": "2"
    },
    "2748": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2750": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2751": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2752": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2754": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "NOT",
      "path": "2"
    },
    "2755": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2757": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2758": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "ADD",
      "path": "2"
    },
    "2759": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "AND",
      "path": "2"
    },
    "2760": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2761": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "ADD",
      "path": "2"
    },
    "2762": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2763": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2765": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2766": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "POP",
      "path": "2"
    },
    "2767": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2768": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "ADD",
      "path": "2"
    },
    "2769": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2770": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xADB"
    },
    "2773": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2774": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2775": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF93"
    },
    "2778": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1040,
        1080
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2779": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2780": {
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1090
      ],
      "op": "LT",
      "path": "2"
    },
    "2781": {
      "branch": 32,
      "fn": "Swap.sendThanks",
      "offset": [
        1040,
        1090
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2782": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB29"
    },
    "2785": {
      "branch": 32,
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2786": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2788": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2795": {
      "op": "SHL"
    },
    "2796": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2797": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2800": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2802": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2803": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "ADD",
      "path": "2"
    },
    "2804": {
      "op": "MSTORE"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2809": {
      "op": "DUP3"
    },
    "2810": {
      "op": "ADD"
    },
    "2811": {
      "op": "MSTORE"
    },
    "2812": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768207265776172647320746F2067697665206F75740000"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2847": {
      "op": "DUP3"
    },
    "2848": {
      "op": "ADD"
    },
    "2849": {
      "op": "MSTORE"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2852": {
      "op": "ADD"
    },
    "2853": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "2856": {
      "op": "JUMP"
    },
    "2857": {
      "fn": "Swap.sendThanks",
      "offset": [
        1032,
        1125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2858": {
      "fn": "Swap.sendThanks",
      "offset": [
        1218,
        1228
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 20
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2865": {
      "op": "SHL"
    },
    "2866": {
      "op": "SUB"
    },
    "2867": {
      "fn": "Swap.sendThanks",
      "offset": [
        1218,
        1241
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2868": {
      "fn": "Swap.sendThanks",
      "offset": [
        1218,
        1241
      ],
      "op": "AND",
      "path": "2"
    },
    "2869": {
      "fn": "Swap.sendThanks",
      "offset": [
        1218,
        1241
      ],
      "op": "EQ",
      "path": "2"
    },
    "2870": {
      "branch": 33,
      "fn": "Swap.sendThanks",
      "offset": [
        1218,
        1241
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2871": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB82"
    },
    "2874": {
      "branch": 33,
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2875": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2877": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2878": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2882": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2884": {
      "op": "SHL"
    },
    "2885": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2886": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2889": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2891": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2892": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "ADD",
      "path": "2"
    },
    "2893": {
      "op": "MSTORE"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2898": {
      "op": "DUP3"
    },
    "2899": {
      "op": "ADD"
    },
    "2900": {
      "op": "MSTORE"
    },
    "2901": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F74207468616E6B20796F757273656C6600000000000000"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2936": {
      "op": "DUP3"
    },
    "2937": {
      "op": "ADD"
    },
    "2938": {
      "op": "MSTORE"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2941": {
      "op": "ADD"
    },
    "2942": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F"
    },
    "2945": {
      "op": "JUMP"
    },
    "2946": {
      "fn": "Swap.sendThanks",
      "offset": [
        1210,
        1271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2947": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1352
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x2"
    },
    "2949": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1352
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2950": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2952": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2953": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2960": {
      "op": "SHL"
    },
    "2961": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2962": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2963": {
      "fn": "Swap.sendThanks",
      "offset": [
        1366,
        1376
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2964": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2966": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2967": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "ADD",
      "path": "2"
    },
    "2968": {
      "op": "MSTORE"
    },
    "2969": {
      "fn": "Swap.sendThanks",
      "offset": [
        1386,
        1390
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2972": {
      "op": "DUP3"
    },
    "2973": {
      "op": "ADD"
    },
    "2974": {
      "op": "MSTORE"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2977": {
      "op": "DUP2"
    },
    "2978": {
      "op": "ADD"
    },
    "2979": {
      "op": "DUP6"
    },
    "2980": {
      "op": "SWAP1"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2988": {
      "op": "SHL"
    },
    "2989": {
      "op": "SUB"
    },
    "2990": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1352
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2991": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1352
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2992": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1352
      ],
      "op": "AND",
      "path": "2"
    },
    "2993": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1352
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2994": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1365
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "2999": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1365
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3002": {
      "op": "ADD"
    },
    "3003": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3005": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3007": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3008": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3009": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3010": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "SUB",
      "path": "2"
    },
    "3011": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3012": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3014": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3015": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "GAS",
      "path": "2"
    },
    "3016": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "CALL",
      "path": "2"
    },
    "3017": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3018": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3019": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3020": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD9"
    },
    "3023": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3024": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3025": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3027": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3028": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3029": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3030": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3032": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3033": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3034": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "POP",
      "path": "2"
    },
    "3035": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "POP",
      "path": "2"
    },
    "3036": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "POP",
      "path": "2"
    },
    "3037": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "POP",
      "path": "2"
    },
    "3038": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3040": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3041": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3042": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3044": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "NOT",
      "path": "2"
    },
    "3045": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3047": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3048": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "ADD",
      "path": "2"
    },
    "3049": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "AND",
      "path": "2"
    },
    "3050": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3051": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "ADD",
      "path": "2"
    },
    "3052": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3053": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3055": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3056": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "POP",
      "path": "2"
    },
    "3057": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3058": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "ADD",
      "path": "2"
    },
    "3059": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3060": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBFD"
    },
    "3063": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3064": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3065": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF7"
    },
    "3068": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1338,
        1400
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3069": {
      "fn": "Swap.sendThanks",
      "offset": [
        1338,
        1400
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3070": {
      "op": "POP"
    },
    "3071": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1482
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x1"
    },
    "3073": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1482
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3074": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3076": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3077": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3084": {
      "op": "SHL"
    },
    "3085": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3086": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3093": {
      "op": "SHL"
    },
    "3094": {
      "op": "SUB"
    },
    "3095": {
      "op": "DUP5"
    },
    "3096": {
      "op": "DUP2"
    },
    "3097": {
      "op": "AND"
    },
    "3098": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3100": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3101": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "ADD",
      "path": "2"
    },
    "3102": {
      "op": "MSTORE"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3105": {
      "op": "DUP3"
    },
    "3106": {
      "op": "ADD"
    },
    "3107": {
      "op": "DUP7"
    },
    "3108": {
      "op": "SWAP1"
    },
    "3109": {
      "op": "MSTORE"
    },
    "3110": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3111": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1482
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3112": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1482
      ],
      "op": "AND",
      "path": "2"
    },
    "3113": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3114": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1491
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "3119": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3125": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3127": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3128": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3129": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3130": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "SUB",
      "path": "2"
    },
    "3131": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3132": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3134": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3135": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "GAS",
      "path": "2"
    },
    "3136": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "CALL",
      "path": "2"
    },
    "3137": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3138": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3139": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3140": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC51"
    },
    "3143": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3144": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3145": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3147": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3148": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3149": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3150": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3152": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3153": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3154": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "POP",
      "path": "2"
    },
    "3155": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "POP",
      "path": "2"
    },
    "3156": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "POP",
      "path": "2"
    },
    "3157": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "POP",
      "path": "2"
    },
    "3158": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3160": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3161": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3162": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3164": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "NOT",
      "path": "2"
    },
    "3165": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3167": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3168": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "ADD",
      "path": "2"
    },
    "3169": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "AND",
      "path": "2"
    },
    "3170": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3171": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "ADD",
      "path": "2"
    },
    "3172": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3173": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3175": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3176": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "POP",
      "path": "2"
    },
    "3177": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3178": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "ADD",
      "path": "2"
    },
    "3179": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3180": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC75"
    },
    "3183": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3184": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3185": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFF7"
    },
    "3188": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1467,
        1510
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3189": {
      "fn": "Swap.sendThanks",
      "offset": [
        1467,
        1510
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3190": {
      "op": "POP"
    },
    "3191": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x40"
    },
    "3193": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3194": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3195": {
      "op": "DUP5"
    },
    "3196": {
      "op": "DUP2"
    },
    "3197": {
      "op": "MSTORE"
    },
    "3198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3200": {
      "op": "DUP2"
    },
    "3201": {
      "op": "ADD"
    },
    "3202": {
      "op": "DUP4"
    },
    "3203": {
      "op": "SWAP1"
    },
    "3204": {
      "op": "MSTORE"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3211": {
      "op": "SHL"
    },
    "3212": {
      "op": "SUB"
    },
    "3213": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3214": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "AND",
      "path": "2"
    },
    "3215": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3216": {
      "fn": "Swap.sendThanks",
      "offset": [
        1531,
        1541
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3217": {
      "fn": "Swap.sendThanks",
      "offset": [
        1531,
        1541
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3218": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x34355B4C5DFF25F21B90975D65F648EDF2C50BEA228323BB74333BFE5F015F3C"
    },
    "3251": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3252": {
      "op": "ADD"
    },
    "3253": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3255": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3256": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3257": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3258": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "SUB",
      "path": "2"
    },
    "3259": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3260": {
      "fn": "Swap.sendThanks",
      "offset": [
        1526,
        1570
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3261": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "POP",
      "path": "2"
    },
    "3262": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "POP",
      "path": "2"
    },
    "3263": {
      "fn": "Swap.sendThanks",
      "offset": [
        718,
        1577
      ],
      "op": "POP",
      "path": "2"
    },
    "3264": {
      "fn": "Swap.sendThanks",
      "jump": "o",
      "offset": [
        718,
        1577
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3266": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3268": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "op": "SUB"
    },
    "3277": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3278": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3279": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3280": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCEB"
    },
    "3283": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3284": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3286": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3293": {
      "op": "SHL"
    },
    "3294": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3295": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3296": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3298": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3299": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "3302": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3303": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5E"
    },
    "3306": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3307": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3314": {
      "op": "SHL"
    },
    "3315": {
      "op": "SUB"
    },
    "3316": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 24
    },
    "3317": {
      "branch": 34,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "3318": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD50"
    },
    "3321": {
      "branch": 34,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3325": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3331": {
      "op": "SHL"
    },
    "3332": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3333": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3336": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3338": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3339": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "3340": {
      "op": "MSTORE"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3345": {
      "op": "DUP3"
    },
    "3346": {
      "op": "ADD"
    },
    "3347": {
      "op": "MSTORE"
    },
    "3348": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3383": {
      "op": "DUP3"
    },
    "3384": {
      "op": "ADD"
    },
    "3385": {
      "op": "MSTORE"
    },
    "3386": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3393": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3395": {
      "op": "SHL"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3398": {
      "op": "DUP3"
    },
    "3399": {
      "op": "ADD"
    },
    "3400": {
      "op": "MSTORE"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3403": {
      "op": "ADD"
    },
    "3404": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27F"
    },
    "3407": {
      "op": "JUMP"
    },
    "3408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0x829"
    },
    "3412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3413": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3414": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3416": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3417": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3424": {
      "op": "SHL"
    },
    "3425": {
      "op": "SUB"
    },
    "3426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 26
    },
    "3427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3435": {
      "op": "SHL"
    },
    "3436": {
      "op": "SUB"
    },
    "3437": {
      "op": "NOT"
    },
    "3438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3439": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3441": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3442": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3443": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3444": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x40"
    },
    "3446": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3447": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3448": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3449": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3452": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3453": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3454": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3487": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3488": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3489": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3490": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3491": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3492": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3493": {
      "op": "JUMPDEST"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3496": {
      "op": "DUP1"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3499": {
      "op": "DUP4"
    },
    "3500": {
      "op": "DUP6"
    },
    "3501": {
      "op": "SUB"
    },
    "3502": {
      "op": "SLT"
    },
    "3503": {
      "op": "ISZERO"
    },
    "3504": {
      "op": "PUSH2",
      "value": "0xDB8"
    },
    "3507": {
      "op": "JUMPI"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3510": {
      "op": "DUP1"
    },
    "3511": {
      "op": "REVERT"
    },
    "3512": {
      "op": "JUMPDEST"
    },
    "3513": {
      "op": "POP"
    },
    "3514": {
      "op": "POP"
    },
    "3515": {
      "op": "DUP1"
    },
    "3516": {
      "op": "CALLDATALOAD"
    },
    "3517": {
      "op": "SWAP3"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3520": {
      "op": "SWAP1"
    },
    "3521": {
      "op": "SWAP2"
    },
    "3522": {
      "op": "ADD"
    },
    "3523": {
      "op": "CALLDATALOAD"
    },
    "3524": {
      "op": "SWAP2"
    },
    "3525": {
      "op": "POP"
    },
    "3526": {
      "jump": "o",
      "op": "JUMP"
    },
    "3527": {
      "op": "JUMPDEST"
    },
    "3528": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3535": {
      "op": "SHL"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3538": {
      "op": "MSTORE"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3543": {
      "op": "MSTORE"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3548": {
      "op": "REVERT"
    },
    "3549": {
      "op": "JUMPDEST"
    },
    "3550": {
      "op": "DUP1"
    },
    "3551": {
      "op": "CALLDATALOAD"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3558": {
      "op": "SHL"
    },
    "3559": {
      "op": "SUB"
    },
    "3560": {
      "op": "DUP2"
    },
    "3561": {
      "op": "AND"
    },
    "3562": {
      "op": "DUP2"
    },
    "3563": {
      "op": "EQ"
    },
    "3564": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3567": {
      "op": "JUMPI"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3570": {
      "op": "DUP1"
    },
    "3571": {
      "op": "REVERT"
    },
    "3572": {
      "op": "JUMPDEST"
    },
    "3573": {
      "op": "SWAP2"
    },
    "3574": {
      "op": "SWAP1"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "jump": "o",
      "op": "JUMP"
    },
    "3577": {
      "op": "JUMPDEST"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "DUP1"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3583": {
      "op": "DUP4"
    },
    "3584": {
      "op": "DUP6"
    },
    "3585": {
      "op": "SUB"
    },
    "3586": {
      "op": "SLT"
    },
    "3587": {
      "op": "ISZERO"
    },
    "3588": {
      "op": "PUSH2",
      "value": "0xE0C"
    },
    "3591": {
      "op": "JUMPI"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3594": {
      "op": "DUP1"
    },
    "3595": {
      "op": "REVERT"
    },
    "3596": {
      "op": "JUMPDEST"
    },
    "3597": {
      "op": "DUP3"
    },
    "3598": {
      "op": "CALLDATALOAD"
    },
    "3599": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3608": {
      "op": "DUP1"
    },
    "3609": {
      "op": "DUP3"
    },
    "3610": {
      "op": "GT"
    },
    "3611": {
      "op": "ISZERO"
    },
    "3612": {
      "op": "PUSH2",
      "value": "0xE24"
    },
    "3615": {
      "op": "JUMPI"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3618": {
      "op": "DUP1"
    },
    "3619": {
      "op": "REVERT"
    },
    "3620": {
      "op": "JUMPDEST"
    },
    "3621": {
      "op": "DUP2"
    },
    "3622": {
      "op": "DUP6"
    },
    "3623": {
      "op": "ADD"
    },
    "3624": {
      "op": "SWAP2"
    },
    "3625": {
      "op": "POP"
    },
    "3626": {
      "op": "DUP6"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3629": {
      "op": "DUP4"
    },
    "3630": {
      "op": "ADD"
    },
    "3631": {
      "op": "SLT"
    },
    "3632": {
      "op": "PUSH2",
      "value": "0xE38"
    },
    "3635": {
      "op": "JUMPI"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3638": {
      "op": "DUP1"
    },
    "3639": {
      "op": "REVERT"
    },
    "3640": {
      "op": "JUMPDEST"
    },
    "3641": {
      "op": "DUP2"
    },
    "3642": {
      "op": "CALLDATALOAD"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3645": {
      "op": "DUP3"
    },
    "3646": {
      "op": "DUP3"
    },
    "3647": {
      "op": "GT"
    },
    "3648": {
      "op": "ISZERO"
    },
    "3649": {
      "op": "PUSH2",
      "value": "0xE4C"
    },
    "3652": {
      "op": "JUMPI"
    },
    "3653": {
      "op": "PUSH2",
      "value": "0xE4C"
    },
    "3656": {
      "op": "PUSH2",
      "value": "0xDC7"
    },
    "3659": {
      "jump": "i",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "DUP2"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3664": {
      "op": "SHL"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3667": {
      "op": "MLOAD"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3670": {
      "op": "NOT"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3673": {
      "op": "DUP4"
    },
    "3674": {
      "op": "ADD"
    },
    "3675": {
      "op": "AND"
    },
    "3676": {
      "op": "DUP2"
    },
    "3677": {
      "op": "ADD"
    },
    "3678": {
      "op": "DUP2"
    },
    "3679": {
      "op": "DUP2"
    },
    "3680": {
      "op": "LT"
    },
    "3681": {
      "op": "DUP7"
    },
    "3682": {
      "op": "DUP3"
    },
    "3683": {
      "op": "GT"
    },
    "3684": {
      "op": "OR"
    },
    "3685": {
      "op": "ISZERO"
    },
    "3686": {
      "op": "PUSH2",
      "value": "0xE71"
    },
    "3689": {
      "op": "JUMPI"
    },
    "3690": {
      "op": "PUSH2",
      "value": "0xE71"
    },
    "3693": {
      "op": "PUSH2",
      "value": "0xDC7"
    },
    "3696": {
      "jump": "i",
      "op": "JUMP"
    },
    "3697": {
      "op": "JUMPDEST"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3700": {
      "op": "MSTORE"
    },
    "3701": {
      "op": "SWAP3"
    },
    "3702": {
      "op": "DUP4"
    },
    "3703": {
      "op": "MSTORE"
    },
    "3704": {
      "op": "DUP2"
    },
    "3705": {
      "op": "DUP4"
    },
    "3706": {
      "op": "ADD"
    },
    "3707": {
      "op": "SWAP4"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "DUP5"
    },
    "3710": {
      "op": "DUP2"
    },
    "3711": {
      "op": "ADD"
    },
    "3712": {
      "op": "DUP3"
    },
    "3713": {
      "op": "ADD"
    },
    "3714": {
      "op": "SWAP3"
    },
    "3715": {
      "op": "DUP10"
    },
    "3716": {
      "op": "DUP5"
    },
    "3717": {
      "op": "GT"
    },
    "3718": {
      "op": "ISZERO"
    },
    "3719": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3722": {
      "op": "JUMPI"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3725": {
      "op": "DUP1"
    },
    "3726": {
      "op": "REVERT"
    },
    "3727": {
      "op": "JUMPDEST"
    },
    "3728": {
      "op": "SWAP5"
    },
    "3729": {
      "op": "DUP3"
    },
    "3730": {
      "op": "ADD"
    },
    "3731": {
      "op": "SWAP5"
    },
    "3732": {
      "op": "JUMPDEST"
    },
    "3733": {
      "op": "DUP4"
    },
    "3734": {
      "op": "DUP7"
    },
    "3735": {
      "op": "LT"
    },
    "3736": {
      "op": "ISZERO"
    },
    "3737": {
      "op": "PUSH2",
      "value": "0xEB4"
    },
    "3740": {
      "op": "JUMPI"
    },
    "3741": {
      "op": "PUSH2",
      "value": "0xEA5"
    },
    "3744": {
      "op": "DUP7"
    },
    "3745": {
      "op": "PUSH2",
      "value": "0xDDD"
    },
    "3748": {
      "jump": "i",
      "op": "JUMP"
    },
    "3749": {
      "op": "JUMPDEST"
    },
    "3750": {
      "op": "DUP6"
    },
    "3751": {
      "op": "MSTORE"
    },
    "3752": {
      "op": "SWAP5"
    },
    "3753": {
      "op": "DUP3"
    },
    "3754": {
      "op": "ADD"
    },
    "3755": {
      "op": "SWAP5"
    },
    "3756": {
      "op": "SWAP4"
    },
    "3757": {
      "op": "DUP3"
    },
    "3758": {
      "op": "ADD"
    },
    "3759": {
      "op": "SWAP4"
    },
    "3760": {
      "op": "PUSH2",
      "value": "0xE94"
    },
    "3763": {
      "op": "JUMP"
    },
    "3764": {
      "op": "JUMPDEST"
    },
    "3765": {
      "op": "SWAP10"
    },
    "3766": {
      "op": "SWAP8"
    },
    "3767": {
      "op": "SWAP1"
    },
    "3768": {
      "op": "SWAP2"
    },
    "3769": {
      "op": "ADD"
    },
    "3770": {
      "op": "CALLDATALOAD"
    },
    "3771": {
      "op": "SWAP8"
    },
    "3772": {
      "op": "POP"
    },
    "3773": {
      "op": "POP"
    },
    "3774": {
      "op": "POP"
    },
    "3775": {
      "op": "POP"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "POP"
    },
    "3778": {
      "op": "POP"
    },
    "3779": {
      "jump": "o",
      "op": "JUMP"
    },
    "3780": {
      "op": "JUMPDEST"
    },
    "3781": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3783": {
      "op": "DUP1"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3786": {
      "op": "DUP4"
    },
    "3787": {
      "op": "DUP6"
    },
    "3788": {
      "op": "SUB"
    },
    "3789": {
      "op": "SLT"
    },
    "3790": {
      "op": "ISZERO"
    },
    "3791": {
      "op": "PUSH2",
      "value": "0xED7"
    },
    "3794": {
      "op": "JUMPI"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3797": {
      "op": "DUP1"
    },
    "3798": {
      "op": "REVERT"
    },
    "3799": {
      "op": "JUMPDEST"
    },
    "3800": {
      "op": "PUSH2",
      "value": "0xEE0"
    },
    "3803": {
      "op": "DUP4"
    },
    "3804": {
      "op": "PUSH2",
      "value": "0xDDD"
    },
    "3807": {
      "jump": "i",
      "op": "JUMP"
    },
    "3808": {
      "op": "JUMPDEST"
    },
    "3809": {
      "op": "SWAP5"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3812": {
      "op": "SWAP4"
    },
    "3813": {
      "op": "SWAP1"
    },
    "3814": {
      "op": "SWAP4"
    },
    "3815": {
      "op": "ADD"
    },
    "3816": {
      "op": "CALLDATALOAD"
    },
    "3817": {
      "op": "SWAP4"
    },
    "3818": {
      "op": "POP"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "op": "POP"
    },
    "3821": {
      "jump": "o",
      "op": "JUMP"
    },
    "3822": {
      "op": "JUMPDEST"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3827": {
      "op": "DUP3"
    },
    "3828": {
      "op": "DUP5"
    },
    "3829": {
      "op": "SUB"
    },
    "3830": {
      "op": "SLT"
    },
    "3831": {
      "op": "ISZERO"
    },
    "3832": {
      "op": "PUSH2",
      "value": "0xF00"
    },
    "3835": {
      "op": "JUMPI"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3838": {
      "op": "DUP1"
    },
    "3839": {
      "op": "REVERT"
    },
    "3840": {
      "op": "JUMPDEST"
    },
    "3841": {
      "op": "POP"
    },
    "3842": {
      "op": "CALLDATALOAD"
    },
    "3843": {
      "op": "SWAP2"
    },
    "3844": {
      "op": "SWAP1"
    },
    "3845": {
      "op": "POP"
    },
    "3846": {
      "jump": "o",
      "op": "JUMP"
    },
    "3847": {
      "op": "JUMPDEST"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3850": {
      "op": "DUP1"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3855": {
      "op": "DUP5"
    },
    "3856": {
      "op": "DUP7"
    },
    "3857": {
      "op": "SUB"
    },
    "3858": {
      "op": "SLT"
    },
    "3859": {
      "op": "ISZERO"
    },
    "3860": {
      "op": "PUSH2",
      "value": "0xF1C"
    },
    "3863": {
      "op": "JUMPI"
    },
    "3864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3866": {
      "op": "DUP1"
    },
    "3867": {
      "op": "REVERT"
    },
    "3868": {
      "op": "JUMPDEST"
    },
    "3869": {
      "op": "DUP4"
    },
    "3870": {
      "op": "CALLDATALOAD"
    },
    "3871": {
      "op": "SWAP3"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "op": "PUSH2",
      "value": "0xF2C"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3878": {
      "op": "DUP6"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "PUSH2",
      "value": "0xDDD"
    },
    "3883": {
      "jump": "i",
      "op": "JUMP"
    },
    "3884": {
      "op": "JUMPDEST"
    },
    "3885": {
      "op": "SWAP2"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3889": {
      "op": "DUP5"
    },
    "3890": {
      "op": "ADD"
    },
    "3891": {
      "op": "CALLDATALOAD"
    },
    "3892": {
      "op": "SWAP1"
    },
    "3893": {
      "op": "POP"
    },
    "3894": {
      "op": "SWAP3"
    },
    "3895": {
      "op": "POP"
    },
    "3896": {
      "op": "SWAP3"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "op": "SWAP3"
    },
    "3899": {
      "jump": "o",
      "op": "JUMP"
    },
    "3900": {
      "op": "JUMPDEST"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3905": {
      "op": "DUP3"
    },
    "3906": {
      "op": "DUP5"
    },
    "3907": {
      "op": "SUB"
    },
    "3908": {
      "op": "SLT"
    },
    "3909": {
      "op": "ISZERO"
    },
    "3910": {
      "op": "PUSH2",
      "value": "0xF4E"
    },
    "3913": {
      "op": "JUMPI"
    },
    "3914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3916": {
      "op": "DUP1"
    },
    "3917": {
      "op": "REVERT"
    },
    "3918": {
      "op": "JUMPDEST"
    },
    "3919": {
      "op": "PUSH2",
      "value": "0xF57"
    },
    "3922": {
      "op": "DUP3"
    },
    "3923": {
      "op": "PUSH2",
      "value": "0xDDD"
    },
    "3926": {
      "jump": "i",
      "op": "JUMP"
    },
    "3927": {
      "op": "JUMPDEST"
    },
    "3928": {
      "op": "SWAP4"
    },
    "3929": {
      "op": "SWAP3"
    },
    "3930": {
      "op": "POP"
    },
    "3931": {
      "op": "POP"
    },
    "3932": {
      "op": "POP"
    },
    "3933": {
      "jump": "o",
      "op": "JUMP"
    },
    "3934": {
      "op": "JUMPDEST"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3937": {
      "op": "DUP1"
    },
    "3938": {
      "op": "DUP3"
    },
    "3939": {
      "op": "MSTORE"
    },
    "3940": {
      "op": "DUP2"
    },
    "3941": {
      "op": "DUP2"
    },
    "3942": {
      "op": "ADD"
    },
    "3943": {
      "op": "MSTORE"
    },
    "3944": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3979": {
      "op": "DUP3"
    },
    "3980": {
      "op": "ADD"
    },
    "3981": {
      "op": "MSTORE"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3984": {
      "op": "ADD"
    },
    "3985": {
      "op": "SWAP1"
    },
    "3986": {
      "jump": "o",
      "op": "JUMP"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3992": {
      "op": "DUP3"
    },
    "3993": {
      "op": "DUP5"
    },
    "3994": {
      "op": "SUB"
    },
    "3995": {
      "op": "SLT"
    },
    "3996": {
      "op": "ISZERO"
    },
    "3997": {
      "op": "PUSH2",
      "value": "0xFA5"
    },
    "4000": {
      "op": "JUMPI"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4003": {
      "op": "DUP1"
    },
    "4004": {
      "op": "REVERT"
    },
    "4005": {
      "op": "JUMPDEST"
    },
    "4006": {
      "op": "POP"
    },
    "4007": {
      "op": "MLOAD"
    },
    "4008": {
      "op": "SWAP2"
    },
    "4009": {
      "op": "SWAP1"
    },
    "4010": {
      "op": "POP"
    },
    "4011": {
      "jump": "o",
      "op": "JUMP"
    },
    "4012": {
      "op": "JUMPDEST"
    },
    "4013": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4020": {
      "op": "SHL"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4023": {
      "op": "MSTORE"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4026": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4028": {
      "op": "MSTORE"
    },
    "4029": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4033": {
      "op": "REVERT"
    },
    "4034": {
      "op": "JUMPDEST"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4037": {
      "op": "DUP2"
    },
    "4038": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4040": {
      "op": "NOT"
    },
    "4041": {
      "op": "DIV"
    },
    "4042": {
      "op": "DUP4"
    },
    "4043": {
      "op": "GT"
    },
    "4044": {
      "op": "DUP3"
    },
    "4045": {
      "op": "ISZERO"
    },
    "4046": {
      "op": "ISZERO"
    },
    "4047": {
      "op": "AND"
    },
    "4048": {
      "op": "ISZERO"
    },
    "4049": {
      "op": "PUSH2",
      "value": "0xFDC"
    },
    "4052": {
      "op": "JUMPI"
    },
    "4053": {
      "op": "PUSH2",
      "value": "0xFDC"
    },
    "4056": {
      "op": "PUSH2",
      "value": "0xFAC"
    },
    "4059": {
      "jump": "i",
      "op": "JUMP"
    },
    "4060": {
      "op": "JUMPDEST"
    },
    "4061": {
      "op": "POP"
    },
    "4062": {
      "op": "MUL"
    },
    "4063": {
      "op": "SWAP1"
    },
    "4064": {
      "jump": "o",
      "op": "JUMP"
    },
    "4065": {
      "op": "JUMPDEST"
    },
    "4066": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4071": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4073": {
      "op": "SHL"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4076": {
      "op": "MSTORE"
    },
    "4077": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4079": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4081": {
      "op": "MSTORE"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4086": {
      "op": "REVERT"
    },
    "4087": {
      "op": "JUMPDEST"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4092": {
      "op": "DUP3"
    },
    "4093": {
      "op": "DUP5"
    },
    "4094": {
      "op": "SUB"
    },
    "4095": {
      "op": "SLT"
    },
    "4096": {
      "op": "ISZERO"
    },
    "4097": {
      "op": "PUSH2",
      "value": "0x1009"
    },
    "4100": {
      "op": "JUMPI"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4103": {
      "op": "DUP1"
    },
    "4104": {
      "op": "REVERT"
    },
    "4105": {
      "op": "JUMPDEST"
    },
    "4106": {
      "op": "DUP2"
    },
    "4107": {
      "op": "MLOAD"
    },
    "4108": {
      "op": "DUP1"
    },
    "4109": {
      "op": "ISZERO"
    },
    "4110": {
      "op": "ISZERO"
    },
    "4111": {
      "op": "DUP2"
    },
    "4112": {
      "op": "EQ"
    },
    "4113": {
      "op": "PUSH2",
      "value": "0xF57"
    },
    "4116": {
      "op": "JUMPI"
    },
    "4117": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4119": {
      "op": "DUP1"
    },
    "4120": {
      "op": "REVERT"
    },
    "4121": {
      "op": "JUMPDEST"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4126": {
      "op": "NOT"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "EQ"
    },
    "4129": {
      "op": "ISZERO"
    },
    "4130": {
      "op": "PUSH2",
      "value": "0x102D"
    },
    "4133": {
      "op": "JUMPI"
    },
    "4134": {
      "op": "PUSH2",
      "value": "0x102D"
    },
    "4137": {
      "op": "PUSH2",
      "value": "0xFAC"
    },
    "4140": {
      "jump": "i",
      "op": "JUMP"
    },
    "4141": {
      "op": "JUMPDEST"
    },
    "4142": {
      "op": "POP"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4145": {
      "op": "ADD"
    },
    "4146": {
      "op": "SWAP1"
    },
    "4147": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "29e9a526cd227d6f96c6fb99038cbac0274dfdf9",
  "source": "// SPDX-License-Identifier: AGPL 3.0\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../interfaces/IERC20Custom.sol\";\n\ncontract Swap is Ownable {\n    IERC20Custom public RewardsContract;\n    IERC20Custom public ThanksContract;\n\n    event Sent(address indexed _from, address indexed _to, uint256 _amount, uint256 _message);\n    event redeemed(address indexed _redeemer, uint256 _amount);\n\n    constructor(address _rewardsAddress, address _thanksAddress) public {\n        RewardsContract = IERC20Custom(_rewardsAddress);\n        ThanksContract = IERC20Custom(_thanksAddress);\n    }\n\n    // Function which takes in a thank you token and send a reward token to the user indicated\n    function sendThanks(uint256 amount, address toAddress, uint256 message) public {\n        // Make sure there are enough coins in both the senders address and within the contract to send\n        // and convert\n        require(ThanksContract.balanceOf(msg.sender) >= amount, \"Not enough thank yous to send\");\n        require(RewardsContract.balanceOf(address(this)) >= amount, \"Not enough rewards to give out\");\n        // Make sure the sender is not sending a thank you to him/her self\n        require(msg.sender != toAddress, \"You cannot thank yourself\");\n\n        // Transfer the thank you token to the contract\n        ThanksContract.transferFrom(msg.sender, address(this), amount);\n        // Transfer the reward token to the thanked user\n        RewardsContract.transfer(toAddress, amount);\n\n        emit Sent(msg.sender, toAddress, amount, message);\n    }\n\n    // Redeem tokens for awards.  This still needs work\n    function redeem(uint256 amount) public {\n        // require(addressSetup(msg.sender), \"User not yet setup\");\n        require(RewardsContract.balanceOf(msg.sender) >= amount, \"Trying to redeem more rewards than you are holding\");\n\n        RewardsContract.transferFrom(msg.sender, address(this), amount);\n        emit redeemed(msg.sender, amount);\n    }\n\n    // Distribute the thank you tokens contained within the contract.  This equally distributes\n    // any tokens to all added users.  \n    function distribute(address[] memory recipients, uint256 amount) public onlyOwner {\n        // Make sure there are recepients\n        require(recipients.length > 0, \"No recipient addresses\");\n        require((recipients.length * amount) <= ThanksContract.balanceOf(address(this)), \"Not enough thanks tokens within the contract to fund recipients.  Mint more tokens.\");\n\n        // Send the thank you tokens to each address\n        for (uint256 userIndex; userIndex < recipients.length; userIndex++) {\n            ThanksContract.transfer(recipients[userIndex], amount);\n        }\n    }\n\n    // Directly send minted thanks tokens to users.  This is more gas efficient\n    function mintThanksToUsers(address[] memory recipients, uint256 amount) public onlyOwner {\n        RewardsContract.mint(address(this), amount * recipients.length);\n        // mint the thank you tokens to each address\n        for (uint256 userIndex; userIndex < recipients.length; userIndex++) {\n            ThanksContract.mint(recipients[userIndex], amount);\n        }\n    }\n\n    // Mint tokens to the contract to replenish or increase the rewards/thanks tokens\n    function addMintedTokens(uint256 amountThanks, uint256 amountRewards) public onlyOwner {\n        RewardsContract.mint(address(this), amountRewards);\n        ThanksContract.mint(address(this), amountThanks);\n    }\n\n    // Allow the ability to withdraw tokens that were not supposed to be deposited\n    function withdrawToken(address _tokenContract, uint256 _amount) public onlyOwner {\n        IERC20Custom tokenContract = IERC20Custom(_tokenContract);\n        \n        // transfer the token from address of this contract\n        // to address of the user (executing the withdrawToken() function)\n        tokenContract.transfer(msg.sender, _amount);\n    }\n\n    // Below functions are meant to allow funding of the contract in order to pay for gas etc.\n    // Allow any crypto sent to the contract to be removed\n    function withdrawEth() public payable onlyOwner {\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    // Function to receive Ether. msg.data must be empty\n    receive() external payable {}\n\n    // Fallback function is called when msg.data is not empty\n    fallback() external payable {}\n\n    // Get the balance of ether contained within the contract\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n",
  "sourceMap": "157:4394:2:-:0;;;430:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:1;921:18:0;:32::i;:::-;508:15:2;:47;;-1:-1:-1;;;;;508:47:2;;;-1:-1:-1;;;;;;508:47:2;;;;;;;565:14;:45;;;;;;;;;;;157:4394;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:4:-;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;157:4394:2;;;;;;",
  "sourcePath": "contracts/Swap.sol",
  "type": "contract"
}