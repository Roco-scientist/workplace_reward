{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_thanksAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "RewardsContract",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ThanksContract",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRecipientAddress",
          "type": "address"
        }
      ],
      "name": "addAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "addressSetup",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "toAddress",
          "type": "address"
        }
      ],
      "name": "sendThanks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validRecipientAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/rorycoffey/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
    "1": "/Users/rorycoffey/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/rorycoffey/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/utils/Context.sol",
    "3": "contracts/Swap.sol"
  },
  "ast": {
    "absolutePath": "contracts/Swap.sol",
    "exportedSymbols": {
      "Context": [
        524
      ],
      "IERC20": [
        502
      ],
      "Ownable": [
        424
      ],
      "Swap": [
        319
      ]
    },
    "id": 320,
    "license": "AGPL 3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:3"
      },
      {
        "absolutePath": "/Users/rorycoffey/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 425,
        "src": "62:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/rorycoffey/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.2/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 320,
        "sourceUnit": 503,
        "src": "115:56:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 424,
              "src": "190:7:3"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "190:7:3"
          }
        ],
        "canonicalName": "Swap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 319,
        "linearizedBaseContracts": [
          319,
          424,
          524
        ],
        "name": "Swap",
        "nameLocation": "182:4:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ce2734cc",
            "id": 8,
            "mutability": "mutable",
            "name": "RewardsContract",
            "nameLocation": "218:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "204:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$502",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 502,
                "src": "204:6:3"
              },
              "referencedDeclaration": 502,
              "src": "204:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$502",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f00830e5",
            "id": 11,
            "mutability": "mutable",
            "name": "ThanksContract",
            "nameLocation": "253:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "239:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$502",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 502,
                "src": "239:6:3"
              },
              "referencedDeclaration": 502,
              "src": "239:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$502",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c186563b",
            "id": 14,
            "mutability": "mutable",
            "name": "validRecipientAddresses",
            "nameLocation": "290:23:3",
            "nodeType": "VariableDeclaration",
            "scope": 319,
            "src": "273:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "273:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 13,
              "nodeType": "ArrayTypeName",
              "src": "273:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 22,
            "name": "Sent",
            "nameLocation": "326:4:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "347:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "331:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "370:3:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "354:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "354:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "383:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "375:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "375:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "330:61:3"
            },
            "src": "320:72:3"
          },
          {
            "body": {
              "id": 41,
              "nodeType": "Block",
              "src": "466:107:3",
              "statements": [
                {
                  "expression": {
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29,
                      "name": "RewardsContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "476:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$502",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 31,
                          "name": "_rewardsAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "501:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 30,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "494:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$502_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "494:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$502",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "476:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$502",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "476:41:3"
                },
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 35,
                      "name": "ThanksContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "527:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$502",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 37,
                          "name": "_thanksAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26,
                          "src": "551:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 36,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "544:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$502_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 38,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "544:22:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$502",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "527:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$502",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "527:39:3"
                }
              ]
            },
            "id": 42,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_rewardsAddress",
                  "nameLocation": "418:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "410:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_thanksAddress",
                  "nameLocation": "443:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "435:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "435:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:49:3"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:0:3"
            },
            "scope": 319,
            "src": "398:175:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "823:66:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 52,
                        "name": "newRecipientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "862:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49,
                        "name": "validRecipientAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "833:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "833:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "833:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "833:49:3"
                }
              ]
            },
            "functionSelector": "38eada1c",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 366,
                  "src": "814:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "814:9:3"
              }
            ],
            "name": "addAddress",
            "nameLocation": "767:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "newRecipientAddress",
                  "nameLocation": "786:19:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "778:27:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "777:29:3"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:0:3"
            },
            "scope": 319,
            "src": "758:131:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "1050:209:3",
              "statements": [
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1116:115:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 74,
                              "name": "validRecipientAddresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14,
                              "src": "1134:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 76,
                            "indexExpression": {
                              "id": 75,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 64,
                              "src": "1158:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1134:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 77,
                            "name": "userAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "1164:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1134:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1130:91:3",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1177:44:3",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1202:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 62,
                              "id": 80,
                              "nodeType": "Return",
                              "src": "1195:11:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64,
                      "src": "1075:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 68,
                        "name": "validRecipientAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "1079:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1079:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1075:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84,
                  "initializationExpression": {
                    "assignments": [
                      64
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1070:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 84,
                        "src": "1065:6:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1065:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 66,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1072:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1065:8:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1111:3:3",
                      "subExpression": {
                        "id": 71,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1111:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 73,
                    "nodeType": "ExpressionStatement",
                    "src": "1111:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "1060:171:3"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1247:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 62,
                  "id": 86,
                  "nodeType": "Return",
                  "src": "1240:12:3"
                }
              ]
            },
            "functionSelector": "e5a74b07",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addressSetup",
            "nameLocation": "990:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "1011:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1003:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:21:3"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "1044:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1044:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1043:6:3"
            },
            "scope": 319,
            "src": "981:278:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1422:986:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 97,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1534:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1534:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 96,
                          "name": "addressSetup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "1521:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1521:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f7420796574207365747570",
                        "id": 100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1547:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76e41537926619d7832b83ad51c12b507828299aaba381fcf8397ebba79f309f",
                          "typeString": "literal_string \"User not yet setup\""
                        },
                        "value": "User not yet setup"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76e41537926619d7832b83ad51c12b507828299aaba381fcf8397ebba79f309f",
                          "typeString": "literal_string \"User not yet setup\""
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1513:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 105,
                            "name": "toAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 92,
                            "src": "1599:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 104,
                          "name": "addressSetup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "1586:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1586:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526563697069656e74206e6f7420796574207365747570",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1611:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1e4c1fe3f5a3b428017f91f4ab748f2f7b41938f70de18f5c30b47b88fce273",
                          "typeString": "literal_string \"Recipient not yet setup\""
                        },
                        "value": "Recipient not yet setup"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1e4c1fe3f5a3b428017f91f4ab748f2f7b41938f70de18f5c30b47b88fce273",
                          "typeString": "literal_string \"Recipient not yet setup\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1578:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1578:59:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 113,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1807:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1807:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 111,
                              "name": "ThanksContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "1782:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$502",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 441,
                            "src": "1782:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1782:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 116,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1822:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1782:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207468616e6b20796f757320746f2073656e64",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1830:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dd168ac8a5aabac9079b3b1bf7cc494f8aaa93931bba085770793dd2b40ff47",
                          "typeString": "literal_string \"Not enough thank yous to send\""
                        },
                        "value": "Not enough thank yous to send"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dd168ac8a5aabac9079b3b1bf7cc494f8aaa93931bba085770793dd2b40ff47",
                          "typeString": "literal_string \"Not enough thank yous to send\""
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1774:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1774:88:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 126,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1914:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Swap_$319",
                                    "typeString": "contract Swap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Swap_$319",
                                    "typeString": "contract Swap"
                                  }
                                ],
                                "id": 125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1906:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 124,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1906:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1906:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 122,
                              "name": "RewardsContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1880:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$502",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 441,
                            "src": "1880:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1880:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 129,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1924:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1880:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768207265776172647320746f2067697665206f7574",
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076a789f61ef64e17606f5dfd8df3829be7391ab2d64f6df547c81a4f1f96238",
                          "typeString": "literal_string \"Not enough rewards to give out\""
                        },
                        "value": "Not enough rewards to give out"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076a789f61ef64e17606f5dfd8df3829be7391ab2d64f6df547c81a4f1f96238",
                          "typeString": "literal_string \"Not enough rewards to give out\""
                        }
                      ],
                      "id": 121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1872:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1872:93:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "1872:93:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 135,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2058:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2058:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 137,
                          "name": "toAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "2072:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2058:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f74207468616e6b20796f757273656c66",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2083:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc9398ac66e35df13c63453f7b6d2b639afa571d7e0148ee3b830b46d9f39120",
                          "typeString": "literal_string \"You cannot thank yourself\""
                        },
                        "value": "You cannot thank yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc9398ac66e35df13c63453f7b6d2b639afa571d7e0148ee3b830b46d9f39120",
                          "typeString": "literal_string \"You cannot thank yourself\""
                        }
                      ],
                      "id": 134,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2050:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "2050:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 145,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2206:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2206:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 149,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2226:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap_$319",
                              "typeString": "contract Swap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap_$319",
                              "typeString": "contract Swap"
                            }
                          ],
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2218:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 147,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2218:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2218:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 151,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "2233:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 142,
                        "name": "ThanksContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "2178:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$502",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 483,
                      "src": "2178:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2178:62:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2178:62:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 157,
                        "name": "toAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2332:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 158,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "2343:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 154,
                        "name": "RewardsContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2307:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$502",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 451,
                      "src": "2307:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2307:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2307:43:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2371:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2371:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 164,
                        "name": "toAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "2383:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 165,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 90,
                        "src": "2394:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 161,
                      "name": "Sent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2366:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2366:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "EmitStatement",
                  "src": "2361:40:3"
                }
              ]
            },
            "functionSelector": "bcfb9e89",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendThanks",
            "nameLocation": "1369:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1388:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1380:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1380:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "toAddress",
                  "nameLocation": "1404:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1396:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1379:35:3"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1422:0:3"
            },
            "scope": 319,
            "src": "1360:1048:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "2509:266:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 176,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2540:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2540:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 175,
                          "name": "addressSetup",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "2527:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2527:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206e6f7420796574207365747570",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2553:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76e41537926619d7832b83ad51c12b507828299aaba381fcf8397ebba79f309f",
                          "typeString": "literal_string \"User not yet setup\""
                        },
                        "value": "User not yet setup"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76e41537926619d7832b83ad51c12b507828299aaba381fcf8397ebba79f309f",
                          "typeString": "literal_string \"User not yet setup\""
                        }
                      ],
                      "id": 174,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2519:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2519:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 185,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2618:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2618:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 183,
                              "name": "RewardsContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "2592:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$502",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 441,
                            "src": "2592:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2592:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 188,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2633:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2592:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547279696e6720746f2072656465656d206d6f72652072657761726473207468616e20796f752061726520686f6c64696e67",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2641:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76b3a46326b58b25b8625bf6b0949a42e727d2a3b2c6bd2357000929561851c2",
                          "typeString": "literal_string \"Trying to redeem more rewards than you are holding\""
                        },
                        "value": "Trying to redeem more rewards than you are holding"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76b3a46326b58b25b8625bf6b0949a42e727d2a3b2c6bd2357000929561851c2",
                          "typeString": "literal_string \"Trying to redeem more rewards than you are holding\""
                        }
                      ],
                      "id": 182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2584:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:110:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:110:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 196,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2734:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2734:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 200,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2754:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Swap_$319",
                              "typeString": "contract Swap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Swap_$319",
                              "typeString": "contract Swap"
                            }
                          ],
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2746:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 198,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2746:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2746:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 202,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2761:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 193,
                        "name": "RewardsContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "2705:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$502",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 483,
                      "src": "2705:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2705:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:63:3"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "2479:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2494:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2486:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2485:16:3"
            },
            "returnParameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2509:0:3"
            },
            "scope": 319,
            "src": "2470:305:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "3001:515:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 212,
                            "name": "validRecipientAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "3062:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3062:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3095:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3062:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20726563697069656e742061646472657373657320616464656420796574",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3098:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c48082c97c5c1334f0084fbe75cc0099b5a1beacd3dd87957fe42e42f4b419dc",
                          "typeString": "literal_string \"No recipient addresses added yet\""
                        },
                        "value": "No recipient addresses added yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c48082c97c5c1334f0084fbe75cc0099b5a1beacd3dd87957fe42e42f4b419dc",
                          "typeString": "literal_string \"No recipient addresses added yet\""
                        }
                      ],
                      "id": 211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3054:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3054:79:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:79:3"
                },
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "eachShare",
                      "nameLocation": "3240:9:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 253,
                      "src": "3235:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3235:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 225,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3285:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$319",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$319",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3277:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 223,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3277:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3277:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 221,
                          "name": "ThanksContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "3252:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$502",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 441,
                        "src": "3252:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3252:39:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "expression": {
                        "id": 228,
                        "name": "validRecipientAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3294:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3294:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3252:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3235:89:3"
                },
                {
                  "body": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "3415:95:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 245,
                                "name": "validRecipientAddresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14,
                                "src": "3453:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 247,
                              "indexExpression": {
                                "id": 246,
                                "name": "userIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 233,
                                "src": "3477:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3453:34:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 248,
                              "name": "eachShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 220,
                              "src": "3489:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 242,
                              "name": "ThanksContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11,
                              "src": "3429:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$502",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 451,
                            "src": "3429:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3429:70:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "3429:70:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 235,
                      "name": "userIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 233,
                      "src": "3358:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 236,
                        "name": "validRecipientAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3370:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3370:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3358:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 252,
                  "initializationExpression": {
                    "assignments": [
                      233
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 233,
                        "mutability": "mutable",
                        "name": "userIndex",
                        "nameLocation": "3347:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "3339:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 232,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3339:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 234,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3339:17:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3402:11:3",
                      "subExpression": {
                        "id": 239,
                        "name": "userIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "3402:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 241,
                    "nodeType": "ExpressionStatement",
                    "src": "3402:11:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "3334:176:3"
                }
              ]
            },
            "functionSelector": "e4fc6b6d",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 209,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 208,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 366,
                  "src": "2991:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "2991:9:3"
              }
            ],
            "name": "distribute",
            "nameLocation": "2971:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2981:2:3"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3001:0:3"
            },
            "scope": 319,
            "src": "2962:554:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 278,
              "nodeType": "Block",
              "src": "3686:259:3",
              "statements": [
                {
                  "assignments": [
                    265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 265,
                      "mutability": "mutable",
                      "name": "tokenContract",
                      "nameLocation": "3703:13:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 278,
                      "src": "3696:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$502",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 264,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 263,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 502,
                          "src": "3696:6:3"
                        },
                        "referencedDeclaration": 502,
                        "src": "3696:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$502",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 267,
                        "name": "_tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "3726:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 266,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "3719:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$502_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$502",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3696:45:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 273,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3918:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3918:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 275,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 258,
                        "src": "3930:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 270,
                        "name": "tokenContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "3895:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$502",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 451,
                      "src": "3895:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 277,
                  "nodeType": "ExpressionStatement",
                  "src": "3895:43:3"
                }
              ]
            },
            "functionSelector": "9e281a98",
            "id": 279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 260,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 366,
                  "src": "3676:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3676:9:3"
              }
            ],
            "name": "withdrawToken",
            "nameLocation": "3614:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "_tokenContract",
                  "nameLocation": "3636:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "3628:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3628:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 258,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3660:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 279,
                  "src": "3652:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3652:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3627:41:3"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3686:0:3"
            },
            "scope": 319,
            "src": "3605:340:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 297,
              "nodeType": "Block",
              "src": "4153:68:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 292,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4200:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Swap_$319",
                                "typeString": "contract Swap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Swap_$319",
                                "typeString": "contract Swap"
                              }
                            ],
                            "id": 291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4192:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 290,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4192:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4192:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4192:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 286,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4171:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4171:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4163:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 284,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4163:8:3",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4163:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4163:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4163:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "4163:51:3"
                }
              ]
            },
            "functionSelector": "a0ef91df",
            "id": 298,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 282,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 281,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 366,
                  "src": "4143:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "4143:9:3"
              }
            ],
            "name": "withdrawEth",
            "nameLocation": "4114:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4125:2:3"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4153:0:3"
            },
            "scope": 319,
            "src": "4105:116:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 301,
              "nodeType": "Block",
              "src": "4311:2:3",
              "statements": []
            },
            "id": 302,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 299,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4291:2:3"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4311:0:3"
            },
            "scope": 319,
            "src": "4284:29:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "4409:2:3",
              "statements": []
            },
            "id": 306,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4389:2:3"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4409:0:3"
            },
            "scope": 319,
            "src": "4381:30:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 317,
              "nodeType": "Block",
              "src": "4528:45:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 313,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4553:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Swap_$319",
                            "typeString": "contract Swap"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Swap_$319",
                            "typeString": "contract Swap"
                          }
                        ],
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4545:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4545:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4545:13:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4545:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 310,
                  "id": 316,
                  "nodeType": "Return",
                  "src": "4538:28:3"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 318,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "4488:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4498:2:3"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 318,
                  "src": "4522:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4522:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4521:6:3"
            },
            "scope": 319,
            "src": "4479:94:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 320,
        "src": "173:4402:3",
        "usedErrors": []
      }
    ],
    "src": "37:4539:3"
  },
  "bytecode": "608060405234801561001057600080fd5b50604051610f8b380380610f8b83398101604081905261002f916100d5565b61003833610069565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610108565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100d057600080fd5b919050565b600080604083850312156100e857600080fd5b6100f1836100b9565b91506100ff602084016100b9565b90509250929050565b610e74806101176000396000f3fe6080604052600436106100d55760003560e01c8063c186563b11610079578063e4fc6b6d11610056578063e4fc6b6d1461020d578063e5a74b0714610222578063f00830e514610252578063f2fde38b1461027257005b8063c186563b146101ad578063ce2734cc146101cd578063db006a75146101ed57005b80638da5cb5b116100b25780638da5cb5b146101335780639e281a9814610165578063a0ef91df14610185578063bcfb9e891461018d57005b806312065fe0146100de57806338eada1c146100fe578063715018a61461011e57005b366100dc57005b005b3480156100ea57600080fd5b506040514781526020015b60405180910390f35b34801561010a57600080fd5b506100dc610119366004610cdc565b610292565b34801561012a57600080fd5b506100dc610317565b34801561013f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100f5565b34801561017157600080fd5b506100dc610180366004610cfe565b61034d565b6100dc6103f0565b34801561019957600080fd5b506100dc6101a8366004610d28565b610449565b3480156101b957600080fd5b5061014d6101c8366004610d54565b6107ed565b3480156101d957600080fd5b5060015461014d906001600160a01b031681565b3480156101f957600080fd5b506100dc610208366004610d54565b610817565b34801561021957600080fd5b506100dc6109b5565b34801561022e57600080fd5b5061024261023d366004610cdc565b610b72565b60405190151581526020016100f5565b34801561025e57600080fd5b5060025461014d906001600160a01b031681565b34801561027e57600080fd5b506100dc61028d366004610cdc565b610bdc565b6000546001600160a01b031633146102c55760405162461bcd60e51b81526004016102bc90610d6d565b60405180910390fd5b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103415760405162461bcd60e51b81526004016102bc90610d6d565b61034b6000610c70565b565b6000546001600160a01b031633146103775760405162461bcd60e51b81526004016102bc90610d6d565b60405163a9059cbb60e01b81523360048201526024810182905282906001600160a01b0382169063a9059cbb906044016020604051808303816000875af11580156103c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ea9190610da2565b50505050565b6000546001600160a01b0316331461041a5760405162461bcd60e51b81526004016102bc90610d6d565b60405133904780156108fc02916000818181858888f19350505050158015610446573d6000803e3d6000fd5b50565b61045233610b72565b6104935760405162461bcd60e51b8152602060048201526012602482015271055736572206e6f74207965742073657475760741b60448201526064016102bc565b61049c81610b72565b6104e85760405162461bcd60e51b815260206004820152601760248201527f526563697069656e74206e6f742079657420736574757000000000000000000060448201526064016102bc565b6002546040516370a0823160e01b815233600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015610530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105549190610dc4565b10156105a25760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207468616e6b20796f757320746f2073656e6400000060448201526064016102bc565b6001546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060e9190610dc4565b101561065c5760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f756768207265776172647320746f2067697665206f7574000060448201526064016102bc565b336001600160a01b03821614156106b55760405162461bcd60e51b815260206004820152601960248201527f596f752063616e6e6f74207468616e6b20796f757273656c660000000000000060448201526064016102bc565b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107309190610da2565b5060015460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190610da2565b506040518281526001600160a01b0382169033907f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33459060200160405180910390a35050565b600381815481106107fd57600080fd5b6000918252602090912001546001600160a01b0316905081565b61082033610b72565b6108615760405162461bcd60e51b8152602060048201526012602482015271055736572206e6f74207965742073657475760741b60448201526064016102bc565b6001546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190610dc4565b10156109365760405162461bcd60e51b815260206004820152603260248201527f547279696e6720746f2072656465656d206d6f72652072657761726473207468604482015271616e20796f752061726520686f6c64696e6760701b60648201526084016102bc565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190610da2565b5050565b6000546001600160a01b031633146109df5760405162461bcd60e51b81526004016102bc90610d6d565b600354610a2e5760405162461bcd60e51b815260206004820181905260248201527f4e6f20726563697069656e74206164647265737365732061646465642079657460448201526064016102bc565b6003546002546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f9190610dc4565b610aa99190610ddd565b905060005b6003548110156109b157600254600380546001600160a01b039092169163a9059cbb919084908110610ae257610ae2610dff565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f9190610da2565b5080610b6a81610e15565b915050610aae565b6000805b600354811015610bd357826001600160a01b031660038281548110610b9d57610b9d610dff565b6000918252602090912001546001600160a01b03161415610bc15750600192915050565b80610bcb81610e15565b915050610b76565b50600092915050565b6000546001600160a01b03163314610c065760405162461bcd60e51b81526004016102bc90610d6d565b6001600160a01b038116610c6b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bc565b610446815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610cd757600080fd5b919050565b600060208284031215610cee57600080fd5b610cf782610cc0565b9392505050565b60008060408385031215610d1157600080fd5b610d1a83610cc0565b946020939093013593505050565b60008060408385031215610d3b57600080fd5b82359150610d4b60208401610cc0565b90509250929050565b600060208284031215610d6657600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610db457600080fd5b81518015158114610cf757600080fd5b600060208284031215610dd657600080fd5b5051919050565b600082610dfa57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e3757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220a30c615f613b8fada57379964474ac693fe5a05f4a64a86d09b455173e3e7e6f64736f6c634300080b0033",
  "bytecodeSha1": "66b82778e071fb386ff859a0067ab4da462b1cc5",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Swap",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "36": [
            2006,
            2028,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {
        "Swap.addressSetup": {
          "35": [
            1134,
            1175,
            false
          ]
        },
        "Swap.redeem": {
          "33": [
            2527,
            2551,
            true
          ],
          "34": [
            2592,
            2639,
            true
          ]
        },
        "Swap.sendThanks": {
          "28": [
            1521,
            1545,
            true
          ],
          "29": [
            1586,
            1609,
            true
          ],
          "30": [
            1782,
            1828,
            true
          ],
          "31": [
            1880,
            1930,
            true
          ],
          "32": [
            2058,
            2081,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "26": [
            2378,
            2395
          ],
          "27": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "4": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "24": [
            1998,
            2071
          ],
          "25": [
            2081,
            2109
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      },
      "3": {
        "Swap.addAddress": {
          "3": [
            833,
            882
          ]
        },
        "Swap.addressSetup": {
          "21": [
            1195,
            1206
          ],
          "22": [
            1111,
            1114
          ],
          "23": [
            1240,
            1252
          ]
        },
        "Swap.distribute": {
          "18": [
            3054,
            3133
          ],
          "19": [
            3429,
            3499
          ],
          "20": [
            3402,
            3413
          ]
        },
        "Swap.getBalance": {
          "0": [
            4538,
            4566
          ]
        },
        "Swap.redeem": {
          "15": [
            2519,
            2574
          ],
          "16": [
            2584,
            2694
          ],
          "17": [
            2705,
            2768
          ]
        },
        "Swap.sendThanks": {
          "7": [
            1513,
            1568
          ],
          "8": [
            1578,
            1637
          ],
          "9": [
            1774,
            1862
          ],
          "10": [
            1872,
            1965
          ],
          "11": [
            2050,
            2111
          ],
          "12": [
            2178,
            2240
          ],
          "13": [
            2307,
            2350
          ],
          "14": [
            2361,
            2401
          ]
        },
        "Swap.withdrawEth": {
          "6": [
            4163,
            4214
          ]
        },
        "Swap.withdrawToken": {
          "5": [
            3895,
            3938
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.4.2/Ownable"
  ],
  "deployedBytecode": "6080604052600436106100d55760003560e01c8063c186563b11610079578063e4fc6b6d11610056578063e4fc6b6d1461020d578063e5a74b0714610222578063f00830e514610252578063f2fde38b1461027257005b8063c186563b146101ad578063ce2734cc146101cd578063db006a75146101ed57005b80638da5cb5b116100b25780638da5cb5b146101335780639e281a9814610165578063a0ef91df14610185578063bcfb9e891461018d57005b806312065fe0146100de57806338eada1c146100fe578063715018a61461011e57005b366100dc57005b005b3480156100ea57600080fd5b506040514781526020015b60405180910390f35b34801561010a57600080fd5b506100dc610119366004610cdc565b610292565b34801561012a57600080fd5b506100dc610317565b34801561013f57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016100f5565b34801561017157600080fd5b506100dc610180366004610cfe565b61034d565b6100dc6103f0565b34801561019957600080fd5b506100dc6101a8366004610d28565b610449565b3480156101b957600080fd5b5061014d6101c8366004610d54565b6107ed565b3480156101d957600080fd5b5060015461014d906001600160a01b031681565b3480156101f957600080fd5b506100dc610208366004610d54565b610817565b34801561021957600080fd5b506100dc6109b5565b34801561022e57600080fd5b5061024261023d366004610cdc565b610b72565b60405190151581526020016100f5565b34801561025e57600080fd5b5060025461014d906001600160a01b031681565b34801561027e57600080fd5b506100dc61028d366004610cdc565b610bdc565b6000546001600160a01b031633146102c55760405162461bcd60e51b81526004016102bc90610d6d565b60405180910390fd5b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103415760405162461bcd60e51b81526004016102bc90610d6d565b61034b6000610c70565b565b6000546001600160a01b031633146103775760405162461bcd60e51b81526004016102bc90610d6d565b60405163a9059cbb60e01b81523360048201526024810182905282906001600160a01b0382169063a9059cbb906044016020604051808303816000875af11580156103c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ea9190610da2565b50505050565b6000546001600160a01b0316331461041a5760405162461bcd60e51b81526004016102bc90610d6d565b60405133904780156108fc02916000818181858888f19350505050158015610446573d6000803e3d6000fd5b50565b61045233610b72565b6104935760405162461bcd60e51b8152602060048201526012602482015271055736572206e6f74207965742073657475760741b60448201526064016102bc565b61049c81610b72565b6104e85760405162461bcd60e51b815260206004820152601760248201527f526563697069656e74206e6f742079657420736574757000000000000000000060448201526064016102bc565b6002546040516370a0823160e01b815233600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015610530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105549190610dc4565b10156105a25760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f756768207468616e6b20796f757320746f2073656e6400000060448201526064016102bc565b6001546040516370a0823160e01b815230600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060e9190610dc4565b101561065c5760405162461bcd60e51b815260206004820152601e60248201527f4e6f7420656e6f756768207265776172647320746f2067697665206f7574000060448201526064016102bc565b336001600160a01b03821614156106b55760405162461bcd60e51b815260206004820152601960248201527f596f752063616e6e6f74207468616e6b20796f757273656c660000000000000060448201526064016102bc565b6002546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561070c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107309190610da2565b5060015460405163a9059cbb60e01b81526001600160a01b038381166004830152602482018590529091169063a9059cbb906044016020604051808303816000875af1158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190610da2565b506040518281526001600160a01b0382169033907f3990db2d31862302a685e8086b5755072a6e2b5b780af1ee81ece35ee3cd33459060200160405180910390a35050565b600381815481106107fd57600080fd5b6000918252602090912001546001600160a01b0316905081565b61082033610b72565b6108615760405162461bcd60e51b8152602060048201526012602482015271055736572206e6f74207965742073657475760741b60448201526064016102bc565b6001546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cd9190610dc4565b10156109365760405162461bcd60e51b815260206004820152603260248201527f547279696e6720746f2072656465656d206d6f72652072657761726473207468604482015271616e20796f752061726520686f6c64696e6760701b60648201526084016102bc565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561098d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b19190610da2565b5050565b6000546001600160a01b031633146109df5760405162461bcd60e51b81526004016102bc90610d6d565b600354610a2e5760405162461bcd60e51b815260206004820181905260248201527f4e6f20726563697069656e74206164647265737365732061646465642079657460448201526064016102bc565b6003546002546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f9190610dc4565b610aa99190610ddd565b905060005b6003548110156109b157600254600380546001600160a01b039092169163a9059cbb919084908110610ae257610ae2610dff565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af1158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f9190610da2565b5080610b6a81610e15565b915050610aae565b6000805b600354811015610bd357826001600160a01b031660038281548110610b9d57610b9d610dff565b6000918252602090912001546001600160a01b03161415610bc15750600192915050565b80610bcb81610e15565b915050610b76565b50600092915050565b6000546001600160a01b03163314610c065760405162461bcd60e51b81526004016102bc90610d6d565b6001600160a01b038116610c6b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bc565b610446815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610cd757600080fd5b919050565b600060208284031215610cee57600080fd5b610cf782610cc0565b9392505050565b60008060408385031215610d1157600080fd5b610d1a83610cc0565b946020939093013593505050565b60008060408385031215610d3b57600080fd5b82359150610d4b60208401610cc0565b90509250929050565b600060208284031215610d6657600080fd5b5035919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060208284031215610db457600080fd5b81518015158114610cf757600080fd5b600060208284031215610dd657600080fd5b5051919050565b600082610dfa57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610e3757634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220a30c615f613b8fada57379964474ac693fe5a05f4a64a86d09b455173e3e7e6f64736f6c634300080b0033",
  "deployedSourceMap": "173:4402:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4479:94;;;;;;;;;;-1:-1:-1;4479:94:3;;4545:21;160:25:4;;148:2;133:18;4479:94:3;;;;;;;;758:131;;;;;;;;;;-1:-1:-1;758:131:3;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;;-1:-1:-1;;;;;729:32:4;;;711:51;;699:2;684:18;1036:85:0;565:203:4;3605:340:3;;;;;;;;;;-1:-1:-1;3605:340:3;;;;;:::i;:::-;;:::i;4105:116::-;;;:::i;1360:1048::-;;;;;;;;;;-1:-1:-1;1360:1048:3;;;;;:::i;:::-;;:::i;273:40::-;;;;;;;;;;-1:-1:-1;273:40:3;;;;;:::i;:::-;;:::i;204:29::-;;;;;;;;;;-1:-1:-1;204:29:3;;;;-1:-1:-1;;;;;204:29:3;;;2470:305;;;;;;;;;;-1:-1:-1;2470:305:3;;;;;:::i;:::-;;:::i;2962:554::-;;;;;;;;;;;;;:::i;981:278::-;;;;;;;;;;-1:-1:-1;981:278:3;;;;;:::i;:::-;;:::i;:::-;;;1863:14:4;;1856:22;1838:41;;1826:2;1811:18;981:278:3;1698:187:4;239:28:3;;;;;;;;;;-1:-1:-1;239:28:3;;;;-1:-1:-1;;;;;239:28:3;;;1918:198:0;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;758:131:3:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;833:23:3::1;:49:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;833:49:3;;;;;::::1;::::0;;-1:-1:-1;;;;;;833:49:3::1;-1:-1:-1::0;;;;;833:49:3;;;::::1;::::0;;;::::1;::::0;;758:131::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;3605:340:3:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3895:43:3::1;::::0;-1:-1:-1;;;3895:43:3;;3918:10:::1;3895:43;::::0;::::1;2425:51:4::0;2492:18;;;2485:34;;;3726:14:3;;-1:-1:-1;;;;;3895:22:3;::::1;::::0;::::1;::::0;2398:18:4;;3895:43:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3686:259;3605:340:::0;;:::o;4105:116::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4163:51:3::1;::::0;4171:10:::1;::::0;4192:21:::1;4163:51:::0;::::1;;;::::0;::::1;::::0;;;4192:21;4171:10;4163:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;4105:116::o:0;1360:1048::-;1521:24;1534:10;1521:12;:24::i;:::-;1513:55;;;;-1:-1:-1;;;1513:55:3;;3014:2:4;1513:55:3;;;2996:21:4;3053:2;3033:18;;;3026:30;-1:-1:-1;;;3072:18:4;;;3065:48;3130:18;;1513:55:3;2812:342:4;1513:55:3;1586:23;1599:9;1586:12;:23::i;:::-;1578:59;;;;-1:-1:-1;;;1578:59:3;;3361:2:4;1578:59:3;;;3343:21:4;3400:2;3380:18;;;3373:30;3439:25;3419:18;;;3412:53;3482:18;;1578:59:3;3159:347:4;1578:59:3;1782:14;;:36;;-1:-1:-1;;;1782:36:3;;1807:10;1782:36;;;711:51:4;1822:6:3;;-1:-1:-1;;;;;1782:14:3;;:24;;684:18:4;;1782:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;1774:88;;;;-1:-1:-1;;;1774:88:3;;3902:2:4;1774:88:3;;;3884:21:4;3941:2;3921:18;;;3914:30;3980:31;3960:18;;;3953:59;4029:18;;1774:88:3;3700:353:4;1774:88:3;1880:15;;:40;;-1:-1:-1;;;1880:40:3;;1914:4;1880:40;;;711:51:4;1924:6:3;;-1:-1:-1;;;;;1880:15:3;;:25;;684:18:4;;1880:40:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;1872:93;;;;-1:-1:-1;;;1872:93:3;;4260:2:4;1872:93:3;;;4242:21:4;4299:2;4279:18;;;4272:30;4338:32;4318:18;;;4311:60;4388:18;;1872:93:3;4058:354:4;1872:93:3;2058:10;-1:-1:-1;;;;;2058:23:3;;;;2050:61;;;;-1:-1:-1;;;2050:61:3;;4619:2:4;2050:61:3;;;4601:21:4;4658:2;4638:18;;;4631:30;4697:27;4677:18;;;4670:55;4742:18;;2050:61:3;4417:349:4;2050:61:3;2178:14;;:62;;-1:-1:-1;;;2178:62:3;;2206:10;2178:62;;;5011:34:4;2226:4:3;5061:18:4;;;5054:43;5113:18;;;5106:34;;;-1:-1:-1;;;;;2178:14:3;;;;:27;;4946:18:4;;2178:62:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2307:15:3;;:43;;-1:-1:-1;;;2307:43:3;;-1:-1:-1;;;;;2443:32:4;;;2307:43:3;;;2425:51:4;2492:18;;;2485:34;;;2307:15:3;;;;:24;;2398:18:4;;2307:43:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2366:35:3;;160:25:4;;;-1:-1:-1;;;;;2366:35:3;;;2371:10;;2366:35;;148:2:4;133:18;2366:35:3;;;;;;;1360:1048;;:::o;273:40::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;273:40:3;;-1:-1:-1;273:40:3;:::o;2470:305::-;2527:24;2540:10;2527:12;:24::i;:::-;2519:55;;;;-1:-1:-1;;;2519:55:3;;3014:2:4;2519:55:3;;;2996:21:4;3053:2;3033:18;;;3026:30;-1:-1:-1;;;3072:18:4;;;3065:48;3130:18;;2519:55:3;2812:342:4;2519:55:3;2592:15;;:37;;-1:-1:-1;;;2592:37:3;;2618:10;2592:37;;;711:51:4;2633:6:3;;-1:-1:-1;;;;;2592:15:3;;:25;;684:18:4;;2592:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;2584:110;;;;-1:-1:-1;;;2584:110:3;;5353:2:4;2584:110:3;;;5335:21:4;5392:2;5372:18;;;5365:30;5431:34;5411:18;;;5404:62;-1:-1:-1;;;5482:18:4;;;5475:48;5540:19;;2584:110:3;5151:414:4;2584:110:3;2705:15;;:63;;-1:-1:-1;;;2705:63:3;;2734:10;2705:63;;;5011:34:4;2754:4:3;5061:18:4;;;5054:43;5113:18;;;5106:34;;;-1:-1:-1;;;;;2705:15:3;;;;:28;;4946:18:4;;2705:63:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2470:305;:::o;2962:554::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3062:23:3::1;:30:::0;3054:79:::1;;;::::0;-1:-1:-1;;;3054:79:3;;5772:2:4;3054:79:3::1;::::0;::::1;5754:21:4::0;;;5791:18;;;5784:30;5850:34;5830:18;;;5823:62;5902:18;;3054:79:3::1;5570:356:4::0;3054:79:3::1;3294:23;:30:::0;3252:14:::1;::::0;:39:::1;::::0;-1:-1:-1;;;3252:39:3;;3285:4:::1;3252:39;::::0;::::1;711:51:4::0;3235:14:3::1;::::0;3294:30;-1:-1:-1;;;;;3252:14:3::1;::::0;:24:::1;::::0;684:18:4;;3252:39:3::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;;;:::i;:::-;3235:89;;3339:17;3334:176;3370:23;:30:::0;3358:42;::::1;3334:176;;;3429:14;::::0;3453:23:::1;:34:::0;;-1:-1:-1;;;;;3429:14:3;;::::1;::::0;:23:::1;::::0;3453;3477:9;;3453:34;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;3429:70:::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;;3429:70:3;;;-1:-1:-1;;;;;3453:34:3;;::::1;3429:70;::::0;::::1;2425:51:4::0;2492:18;;;2485:34;;;2398:18;;3429:70:3::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3402:11:3;::::1;::::0;::::1;:::i;:::-;;;;3334:176;;981:278:::0;1044:4;;1060:171;1079:23;:30;1075:34;;1060:171;;;1164:11;-1:-1:-1;;;;;1134:41:3;:23;1158:1;1134:26;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;1134:26:3;:41;1130:91;;;-1:-1:-1;1202:4:3;;981:278;-1:-1:-1;;981:278:3:o;1130:91::-;1111:3;;;;:::i;:::-;;;;1060:171;;;-1:-1:-1;1247:5:3;;981:278;-1:-1:-1;;981:278:3:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:2;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;6724:2:4;1998:73:0::1;::::0;::::1;6706:21:4::0;6763:2;6743:18;;;6736:30;6802:34;6782:18;;;6775:62;-1:-1:-1;;;6853:18:4;;;6846:36;6899:19;;1998:73:0::1;6522:402:4::0;1998:73:0::1;2081:28;2100:8;2270:187:::0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:173:4:-;264:20;;-1:-1:-1;;;;;313:31:4;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:4:o;773:254::-;841:6;849;902:2;890:9;881:7;877:23;873:32;870:52;;;918:1;915;908:12;870:52;941:29;960:9;941:29;:::i;:::-;931:39;1017:2;1002:18;;;;989:32;;-1:-1:-1;;;773:254:4:o;1032:::-;1100:6;1108;1161:2;1149:9;1140:7;1136:23;1132:32;1129:52;;;1177:1;1174;1167:12;1129:52;1213:9;1200:23;1190:33;;1242:38;1276:2;1265:9;1261:18;1242:38;:::i;:::-;1232:48;;1032:254;;;;;:::o;1291:180::-;1350:6;1403:2;1391:9;1382:7;1378:23;1374:32;1371:52;;;1419:1;1416;1409:12;1371:52;-1:-1:-1;1442:23:4;;1291:180;-1:-1:-1;1291:180:4:o;1890:356::-;2092:2;2074:21;;;2111:18;;;2104:30;2170:34;2165:2;2150:18;;2143:62;2237:2;2222:18;;1890:356::o;2530:277::-;2597:6;2650:2;2638:9;2629:7;2625:23;2621:32;2618:52;;;2666:1;2663;2656:12;2618:52;2698:9;2692:16;2751:5;2744:13;2737:21;2730:5;2727:32;2717:60;;2773:1;2770;2763:12;3511:184;3581:6;3634:2;3622:9;3613:7;3609:23;3605:32;3602:52;;;3650:1;3647;3640:12;3602:52;-1:-1:-1;3673:16:4;;3511:184;-1:-1:-1;3511:184:4:o;5931:217::-;5971:1;5997;5987:132;;6041:10;6036:3;6032:20;6029:1;6022:31;6076:4;6073:1;6066:15;6104:4;6101:1;6094:15;5987:132;-1:-1:-1;6133:9:4;;5931:217::o;6153:127::-;6214:10;6209:3;6205:20;6202:1;6195:31;6245:4;6242:1;6235:15;6269:4;6266:1;6259:15;6285:232;6324:3;-1:-1:-1;;6345:17:4;;6342:140;;;6404:10;6399:3;6395:20;6392:1;6385:31;6439:4;6436:1;6429:15;6467:4;6464:1;6457:15;6342:140;-1:-1:-1;6509:1:4;6498:13;;6285:232::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    173,
    4575
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC186563B GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xE4FC6B6D GT PUSH2 0x56 JUMPI DUP1 PUSH4 0xE4FC6B6D EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xE5A74B07 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xF00830E5 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x272 JUMPI STOP JUMPDEST DUP1 PUSH4 0xC186563B EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xCE2734CC EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x1ED JUMPI STOP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0xA0EF91DF EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xBCFB9E89 EQ PUSH2 0x18D JUMPI STOP JUMPDEST DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x38EADA1C EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x11E JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0xDC JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SELFBALANCE DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x119 CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x317 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH2 0xDC PUSH2 0x3F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x1A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x449 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x7ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x14D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x9B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x242 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x14D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0xCDC JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH2 0x34B PUSH1 0x0 PUSH2 0xC70 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x377 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x452 CALLER PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x493 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x55736572206E6F742079657420736574757 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x49C DUP2 PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563697069656E74206E6F7420796574207365747570000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x530 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x554 SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST LT ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207468616E6B20796F757320746F2073656E64000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x60E SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207265776172647320746F2067697665206F75740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x6B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F74207468616E6B20796F757273656C6600000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x70C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x730 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER SWAP1 PUSH32 0x3990DB2D31862302A685E8086B5755072A6E2B5B780AF1EE81ECE35EE3CD3345 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x820 CALLER PUSH2 0xB72 JUMP JUMPDEST PUSH2 0x861 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x55736572206E6F742079657420736574757 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CD SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST LT ISZERO PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547279696E6720746F2072656465656D206D6F72652072657761726473207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x616E20796F752061726520686F6C64696E67 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726563697069656E742061646472657373657320616464656420796574 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0xDC4 JUMP JUMPDEST PUSH2 0xAA9 SWAP2 SWAP1 PUSH2 0xDDD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x2 SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0xAE2 JUMPI PUSH2 0xAE2 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP4 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST POP DUP1 PUSH2 0xB6A DUP2 PUSH2 0xE15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xBD3 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB9D JUMPI PUSH2 0xB9D PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xBC1 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xBCB DUP2 PUSH2 0xE15 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB76 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP1 PUSH2 0xD6D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2BC JUMP JUMPDEST PUSH2 0x446 DUP2 JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF7 DUP3 PUSH2 0xCC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD1A DUP4 PUSH2 0xCC0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xD4B PUSH1 0x20 DUP5 ADD PUSH2 0xCC0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDFA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xE37 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xC PUSH2 0x5F61 EXTCODESIZE DUP16 0xAD 0xA5 PUSH20 0x79964474AC693FE5A05F4A64A86D09B455173E3E PUSH31 0x6F64736F6C634300080B003300000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        173,
        4575
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5"
    },
    "12": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC186563B"
    },
    "25": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79"
    },
    "29": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE4FC6B6D"
    },
    "36": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "GT",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x56"
    },
    "40": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE4FC6B6D"
    },
    "47": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20D"
    },
    "51": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE5A74B07"
    },
    "58": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x222"
    },
    "62": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF00830E5"
    },
    "69": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x252"
    },
    "73": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x272"
    },
    "84": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "STOP",
      "path": "3"
    },
    "86": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC186563B"
    },
    "93": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AD"
    },
    "97": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCE2734CC"
    },
    "104": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CD"
    },
    "108": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDB006A75"
    },
    "115": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "116": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ED"
    },
    "119": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "120": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "STOP",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "122": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "128": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "GT",
      "path": "3"
    },
    "129": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB2"
    },
    "132": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "133": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "139": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x133"
    },
    "143": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "144": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "145": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9E281A98"
    },
    "150": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "151": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x165"
    },
    "154": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "155": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "156": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA0EF91DF"
    },
    "161": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "162": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185"
    },
    "165": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "166": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "167": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBCFB9E89"
    },
    "172": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "173": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18D"
    },
    "176": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "177": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "STOP",
      "path": "3"
    },
    "178": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "179": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "180": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x12065FE0"
    },
    "185": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE"
    },
    "189": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "190": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "191": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x38EADA1C"
    },
    "196": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFE"
    },
    "200": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "201": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "DUP1",
      "path": "3"
    },
    "202": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "207": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "EQ",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11E"
    },
    "211": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "212": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "STOP",
      "path": "3"
    },
    "213": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "215": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "218": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "219": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "STOP",
      "path": "3"
    },
    "220": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "221": {
      "fn": null,
      "offset": [
        173,
        4575
      ],
      "op": "STOP",
      "path": "3"
    },
    "222": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "223": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "224": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "225": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "226": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA"
    },
    "229": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "230": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "232": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "233": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "REVERT",
      "path": "3"
    },
    "234": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "235": {
      "op": "POP"
    },
    "236": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "238": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "239": {
      "fn": "Swap.getBalance",
      "offset": [
        4545,
        4566
      ],
      "op": "SELFBALANCE",
      "path": "3",
      "statement": 0
    },
    "240": {
      "op": "DUP2"
    },
    "241": {
      "op": "MSTORE"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "244": {
      "op": "ADD"
    },
    "245": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "246": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "248": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "249": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "DUP1",
      "path": "3"
    },
    "250": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "251": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "SUB",
      "path": "3"
    },
    "252": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "253": {
      "fn": "Swap.getBalance",
      "offset": [
        4479,
        4573
      ],
      "op": "RETURN",
      "path": "3"
    },
    "254": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "255": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "256": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "258": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A"
    },
    "261": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "262": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "264": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "DUP1",
      "path": "3"
    },
    "265": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "REVERT",
      "path": "3"
    },
    "266": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "267": {
      "op": "POP"
    },
    "268": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "271": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x119"
    },
    "274": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "275": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "277": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCDC"
    },
    "280": {
      "fn": "Swap.addAddress",
      "jump": "i",
      "offset": [
        758,
        889
      ],
      "op": "JUMP",
      "path": "3"
    },
    "281": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "282": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x292"
    },
    "285": {
      "fn": "Swap.addAddress",
      "jump": "i",
      "offset": [
        758,
        889
      ],
      "op": "JUMP",
      "path": "3"
    },
    "286": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "287": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "288": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "290": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A"
    },
    "293": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "294": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "296": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "297": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "298": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "299": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "300": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC"
    },
    "303": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x317"
    },
    "306": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "307": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "308": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "309": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "310": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "311": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F"
    },
    "314": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "315": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "317": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "318": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "319": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "320": {
      "op": "POP"
    },
    "321": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "323": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "328": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "330": {
      "op": "SHL"
    },
    "331": {
      "op": "SUB"
    },
    "332": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "333": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "334": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "336": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "343": {
      "op": "SHL"
    },
    "344": {
      "op": "SUB"
    },
    "345": {
      "op": "SWAP1"
    },
    "346": {
      "op": "SWAP2"
    },
    "347": {
      "op": "AND"
    },
    "348": {
      "op": "DUP2"
    },
    "349": {
      "op": "MSTORE"
    },
    "350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "352": {
      "op": "ADD"
    },
    "353": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF5"
    },
    "356": {
      "op": "JUMP"
    },
    "357": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "358": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "359": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "DUP1",
      "path": "3"
    },
    "360": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "361": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171"
    },
    "364": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "365": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "367": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "DUP1",
      "path": "3"
    },
    "368": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "REVERT",
      "path": "3"
    },
    "369": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "370": {
      "op": "POP"
    },
    "371": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "374": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x180"
    },
    "377": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "378": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "380": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCFE"
    },
    "383": {
      "fn": "Swap.withdrawToken",
      "jump": "i",
      "offset": [
        3605,
        3945
      ],
      "op": "JUMP",
      "path": "3"
    },
    "384": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "385": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34D"
    },
    "388": {
      "fn": "Swap.withdrawToken",
      "jump": "i",
      "offset": [
        3605,
        3945
      ],
      "op": "JUMP",
      "path": "3"
    },
    "389": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4105,
        4221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "390": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4105,
        4221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "393": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4105,
        4221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F0"
    },
    "396": {
      "fn": "Swap.withdrawEth",
      "jump": "i",
      "offset": [
        4105,
        4221
      ],
      "op": "JUMP",
      "path": "3"
    },
    "397": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "398": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "399": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "DUP1",
      "path": "3"
    },
    "400": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "401": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x199"
    },
    "404": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "405": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "407": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "DUP1",
      "path": "3"
    },
    "408": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "REVERT",
      "path": "3"
    },
    "409": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "410": {
      "op": "POP"
    },
    "411": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "414": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A8"
    },
    "417": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "418": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "420": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD28"
    },
    "423": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1360,
        2408
      ],
      "op": "JUMP",
      "path": "3"
    },
    "424": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "425": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x449"
    },
    "428": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1360,
        2408
      ],
      "op": "JUMP",
      "path": "3"
    },
    "429": {
      "offset": [
        273,
        313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "430": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "431": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "432": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "433": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B9"
    },
    "436": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "437": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "439": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "440": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "REVERT",
      "path": "3"
    },
    "441": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "offset": [
        273,
        313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14D"
    },
    "446": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C8"
    },
    "449": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "450": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "452": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD54"
    },
    "455": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        273,
        313
      ],
      "op": "JUMP",
      "path": "3"
    },
    "456": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "457": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7ED"
    },
    "460": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        273,
        313
      ],
      "op": "JUMP",
      "path": "3"
    },
    "461": {
      "offset": [
        204,
        233
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "462": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "463": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "DUP1",
      "path": "3"
    },
    "464": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "465": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D9"
    },
    "468": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "469": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "471": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "DUP1",
      "path": "3"
    },
    "472": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "REVERT",
      "path": "3"
    },
    "473": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "474": {
      "op": "POP"
    },
    "475": {
      "offset": [
        204,
        233
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "477": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "478": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14D"
    },
    "481": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "488": {
      "op": "SHL"
    },
    "489": {
      "op": "SUB"
    },
    "490": {
      "offset": [
        204,
        233
      ],
      "op": "AND",
      "path": "3"
    },
    "491": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "DUP2",
      "path": "3"
    },
    "492": {
      "fn": "Swap.sendThanks",
      "offset": [
        204,
        233
      ],
      "op": "JUMP",
      "path": "3"
    },
    "493": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "494": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "495": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "DUP1",
      "path": "3"
    },
    "496": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "497": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F9"
    },
    "500": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "501": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "503": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "DUP1",
      "path": "3"
    },
    "504": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "REVERT",
      "path": "3"
    },
    "505": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "506": {
      "op": "POP"
    },
    "507": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "510": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "513": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "514": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "516": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD54"
    },
    "519": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        2470,
        2775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "520": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "521": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x817"
    },
    "524": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        2470,
        2775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "525": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "526": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "527": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "DUP1",
      "path": "3"
    },
    "528": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "529": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x219"
    },
    "532": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "533": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "535": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "DUP1",
      "path": "3"
    },
    "536": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "REVERT",
      "path": "3"
    },
    "537": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "538": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "POP",
      "path": "3"
    },
    "539": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC"
    },
    "542": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B5"
    },
    "545": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        2962,
        3516
      ],
      "op": "JUMP",
      "path": "3"
    },
    "546": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "547": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "548": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "DUP1",
      "path": "3"
    },
    "549": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "550": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x22E"
    },
    "553": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "554": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "556": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "DUP1",
      "path": "3"
    },
    "557": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "REVERT",
      "path": "3"
    },
    "558": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "559": {
      "op": "POP"
    },
    "560": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x242"
    },
    "563": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23D"
    },
    "566": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "567": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "569": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCDC"
    },
    "572": {
      "fn": "Swap.addressSetup",
      "jump": "i",
      "offset": [
        981,
        1259
      ],
      "op": "JUMP",
      "path": "3"
    },
    "573": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "574": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB72"
    },
    "577": {
      "fn": "Swap.addressSetup",
      "jump": "i",
      "offset": [
        981,
        1259
      ],
      "op": "JUMP",
      "path": "3"
    },
    "578": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "579": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "581": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "582": {
      "op": "SWAP1"
    },
    "583": {
      "op": "ISZERO"
    },
    "584": {
      "op": "ISZERO"
    },
    "585": {
      "op": "DUP2"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF5"
    },
    "593": {
      "op": "JUMP"
    },
    "594": {
      "offset": [
        239,
        267
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "595": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "596": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "597": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "598": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25E"
    },
    "601": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "602": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "604": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "DUP1",
      "path": "3"
    },
    "605": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "REVERT",
      "path": "3"
    },
    "606": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "offset": [
        239,
        267
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "610": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "611": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14D"
    },
    "614": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "619": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "621": {
      "op": "SHL"
    },
    "622": {
      "op": "SUB"
    },
    "623": {
      "offset": [
        239,
        267
      ],
      "op": "AND",
      "path": "3"
    },
    "624": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "625": {
      "fn": "Swap.addressSetup",
      "offset": [
        239,
        267
      ],
      "op": "JUMP",
      "path": "3"
    },
    "626": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "627": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "628": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "630": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27E"
    },
    "633": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "634": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "636": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "637": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "638": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "639": {
      "op": "POP"
    },
    "640": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDC"
    },
    "643": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28D"
    },
    "646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "647": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "649": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDC"
    },
    "652": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "653": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "654": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBDC"
    },
    "657": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "658": {
      "fn": "Swap.addAddress",
      "offset": [
        758,
        889
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "659": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "661": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "op": "SUB"
    },
    "670": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "671": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 2
    },
    "672": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "673": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C5"
    },
    "676": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "677": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "679": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "680": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "684": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "686": {
      "op": "SHL"
    },
    "687": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "688": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "689": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "691": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "692": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "695": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "696": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6D"
    },
    "699": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "700": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "703": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "704": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "706": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "707": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "708": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "710": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        856
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x3"
    },
    "712": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "DUP1",
      "path": "3"
    },
    "713": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "714": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "716": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "DUP2",
      "path": "3"
    },
    "717": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "ADD",
      "path": "3"
    },
    "718": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "DUP3",
      "path": "3"
    },
    "719": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "722": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "723": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "724": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "725": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "726": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
    },
    "759": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "ADD",
      "path": "3"
    },
    "760": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "DUP1",
      "path": "3"
    },
    "761": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "762": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "768": {
      "op": "SHL"
    },
    "769": {
      "op": "SUB"
    },
    "770": {
      "op": "NOT"
    },
    "771": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "AND",
      "path": "3"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "op": "SUB"
    },
    "780": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "781": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "782": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "783": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "AND",
      "path": "3"
    },
    "784": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "785": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "786": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "787": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "OR",
      "path": "3"
    },
    "788": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "789": {
      "fn": "Swap.addAddress",
      "offset": [
        833,
        882
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "790": {
      "fn": "Swap.addAddress",
      "jump": "o",
      "offset": [
        758,
        889
      ],
      "op": "JUMP",
      "path": "3"
    },
    "791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "792": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "794": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "801": {
      "op": "SHL"
    },
    "802": {
      "op": "SUB"
    },
    "803": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "804": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "805": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "806": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "809": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "810": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "812": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "821": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "822": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "824": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "825": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "828": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "829": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6D"
    },
    "832": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "833": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x34B"
    },
    "837": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "839": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC70"
    },
    "842": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "843": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "844": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "845": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "846": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "848": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "855": {
      "op": "SHL"
    },
    "856": {
      "op": "SUB"
    },
    "857": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "858": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "859": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "860": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x377"
    },
    "863": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "864": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "866": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "873": {
      "op": "SHL"
    },
    "874": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "875": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "876": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "878": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "879": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "882": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "883": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6D"
    },
    "886": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "887": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "888": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x40"
    },
    "890": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "891": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "898": {
      "op": "SHL"
    },
    "899": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP2",
      "path": "3"
    },
    "900": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "901": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3918,
        3928
      ],
      "op": "CALLER",
      "path": "3"
    },
    "902": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "904": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP3",
      "path": "3"
    },
    "905": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "ADD",
      "path": "3"
    },
    "906": {
      "op": "MSTORE"
    },
    "907": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "909": {
      "op": "DUP2"
    },
    "910": {
      "op": "ADD"
    },
    "911": {
      "op": "DUP3"
    },
    "912": {
      "op": "SWAP1"
    },
    "913": {
      "op": "MSTORE"
    },
    "914": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3726,
        3740
      ],
      "op": "DUP3",
      "path": "3"
    },
    "915": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3726,
        3740
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "922": {
      "op": "SHL"
    },
    "923": {
      "op": "SUB"
    },
    "924": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3917
      ],
      "op": "DUP3",
      "path": "3"
    },
    "925": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3917
      ],
      "op": "AND",
      "path": "3"
    },
    "926": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "927": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3917
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "932": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3917
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "935": {
      "op": "ADD"
    },
    "936": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "938": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "940": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "941": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "942": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP4",
      "path": "3"
    },
    "943": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "SUB",
      "path": "3"
    },
    "944": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP2",
      "path": "3"
    },
    "945": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "947": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP8",
      "path": "3"
    },
    "948": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "GAS",
      "path": "3"
    },
    "949": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "CALL",
      "path": "3"
    },
    "950": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "951": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "952": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "953": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C6"
    },
    "956": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "957": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "958": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "960": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "961": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "962": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "963": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "965": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "REVERT",
      "path": "3"
    },
    "966": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "967": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "968": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "969": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "970": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "971": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "973": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "974": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "975": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "977": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "NOT",
      "path": "3"
    },
    "978": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "980": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP3",
      "path": "3"
    },
    "981": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "ADD",
      "path": "3"
    },
    "982": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "AND",
      "path": "3"
    },
    "983": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP3",
      "path": "3"
    },
    "984": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "ADD",
      "path": "3"
    },
    "985": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP1",
      "path": "3"
    },
    "986": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "988": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "989": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "990": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "DUP2",
      "path": "3"
    },
    "991": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "ADD",
      "path": "3"
    },
    "992": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "993": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3EA"
    },
    "996": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "997": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "998": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA2"
    },
    "1001": {
      "fn": "Swap.withdrawToken",
      "jump": "i",
      "offset": [
        3895,
        3938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1002": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1003": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3895,
        3938
      ],
      "op": "POP",
      "path": "3"
    },
    "1004": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3686,
        3945
      ],
      "op": "POP",
      "path": "3"
    },
    "1005": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "POP",
      "path": "3"
    },
    "1006": {
      "fn": "Swap.withdrawToken",
      "offset": [
        3605,
        3945
      ],
      "op": "POP",
      "path": "3"
    },
    "1007": {
      "fn": "Swap.withdrawToken",
      "jump": "o",
      "offset": [
        3605,
        3945
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1008": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4105,
        4221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1009": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1011": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1021": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1022": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1023": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41A"
    },
    "1026": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1027": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1030": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1038": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1039": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1042": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "1045": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1046": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6D"
    },
    "1049": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1050": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1051": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x40"
    },
    "1053": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1054": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4171,
        4181
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1055": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4171,
        4181
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1056": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4192,
        4213
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "1057": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1058": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1059": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FC"
    },
    "1062": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "MUL",
      "path": "3"
    },
    "1063": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1064": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1066": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1067": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1068": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1069": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4192,
        4213
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1070": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4171,
        4181
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1071": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1072": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "CALL",
      "path": "3"
    },
    "1073": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1074": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "POP",
      "path": "3"
    },
    "1075": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "POP",
      "path": "3"
    },
    "1076": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "POP",
      "path": "3"
    },
    "1077": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "POP",
      "path": "3"
    },
    "1078": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1079": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1080": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1081": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x446"
    },
    "1084": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1085": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1086": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1088": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1089": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1090": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1091": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1093": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1094": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1095": {
      "fn": "Swap.withdrawEth",
      "offset": [
        4163,
        4214
      ],
      "op": "POP",
      "path": "3"
    },
    "1096": {
      "fn": "Swap.withdrawEth",
      "jump": "o",
      "offset": [
        4105,
        4221
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1097": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1098": {
      "fn": "Swap.sendThanks",
      "offset": [
        1521,
        1545
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0x452"
    },
    "1101": {
      "fn": "Swap.sendThanks",
      "offset": [
        1534,
        1544
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1102": {
      "fn": "Swap.sendThanks",
      "offset": [
        1521,
        1533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB72"
    },
    "1105": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1521,
        1545
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1106": {
      "branch": 28,
      "fn": "Swap.sendThanks",
      "offset": [
        1521,
        1545
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1107": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x493"
    },
    "1110": {
      "branch": 28,
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1111": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1113": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1114": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1120": {
      "op": "SHL"
    },
    "1121": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1122": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1125": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1127": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1128": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "ADD",
      "path": "3"
    },
    "1129": {
      "op": "MSTORE"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1134": {
      "op": "DUP3"
    },
    "1135": {
      "op": "ADD"
    },
    "1136": {
      "op": "MSTORE"
    },
    "1137": {
      "op": "PUSH18",
      "value": "0x55736572206E6F742079657420736574757"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1161": {
      "op": "DUP3"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1166": {
      "op": "ADD"
    },
    "1167": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "1170": {
      "op": "JUMP"
    },
    "1171": {
      "fn": "Swap.sendThanks",
      "offset": [
        1513,
        1568
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1172": {
      "fn": "Swap.sendThanks",
      "offset": [
        1586,
        1609
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 8,
      "value": "0x49C"
    },
    "1175": {
      "fn": "Swap.sendThanks",
      "offset": [
        1599,
        1608
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1176": {
      "fn": "Swap.sendThanks",
      "offset": [
        1586,
        1598
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB72"
    },
    "1179": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1586,
        1609
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1180": {
      "branch": 29,
      "fn": "Swap.sendThanks",
      "offset": [
        1586,
        1609
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1181": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E8"
    },
    "1184": {
      "branch": 29,
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1185": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1187": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1196": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1199": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1201": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1202": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "ADD",
      "path": "3"
    },
    "1203": {
      "op": "MSTORE"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1208": {
      "op": "DUP3"
    },
    "1209": {
      "op": "ADD"
    },
    "1210": {
      "op": "MSTORE"
    },
    "1211": {
      "op": "PUSH32",
      "value": "0x526563697069656E74206E6F7420796574207365747570000000000000000000"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1246": {
      "op": "DUP3"
    },
    "1247": {
      "op": "ADD"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1251": {
      "op": "ADD"
    },
    "1252": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "1255": {
      "op": "JUMP"
    },
    "1256": {
      "fn": "Swap.sendThanks",
      "offset": [
        1578,
        1637
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1257": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1796
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x2"
    },
    "1259": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1796
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1260": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1262": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1263": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1270": {
      "op": "SHL"
    },
    "1271": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1272": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1273": {
      "fn": "Swap.sendThanks",
      "offset": [
        1807,
        1817
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1274": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1276": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1277": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "ADD",
      "path": "3"
    },
    "1278": {
      "op": "MSTORE"
    },
    "1279": {
      "fn": "Swap.sendThanks",
      "offset": [
        1822,
        1828
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1280": {
      "fn": "Swap.sendThanks",
      "offset": [
        1822,
        1828
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1287": {
      "op": "SHL"
    },
    "1288": {
      "op": "SUB"
    },
    "1289": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1796
      ],
      "op": "AND",
      "path": "3"
    },
    "1290": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1291": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1806
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "1296": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1806
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1302": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1304": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1305": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1306": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1307": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "SUB",
      "path": "3"
    },
    "1308": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1309": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1310": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "GAS",
      "path": "3"
    },
    "1311": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1312": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1313": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1314": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1315": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x530"
    },
    "1318": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1319": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1320": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1322": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1323": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1324": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1325": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1327": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1328": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1329": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "POP",
      "path": "3"
    },
    "1330": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "POP",
      "path": "3"
    },
    "1331": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "POP",
      "path": "3"
    },
    "1332": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "POP",
      "path": "3"
    },
    "1333": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1335": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1336": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1337": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1339": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "NOT",
      "path": "3"
    },
    "1340": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1342": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1343": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "ADD",
      "path": "3"
    },
    "1344": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "AND",
      "path": "3"
    },
    "1345": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1346": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "ADD",
      "path": "3"
    },
    "1347": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1348": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1350": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1351": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "POP",
      "path": "3"
    },
    "1352": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1353": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "ADD",
      "path": "3"
    },
    "1354": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1355": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x554"
    },
    "1358": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1359": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1360": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC4"
    },
    "1363": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1782,
        1818
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1364": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1818
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1365": {
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1828
      ],
      "op": "LT",
      "path": "3"
    },
    "1366": {
      "branch": 30,
      "fn": "Swap.sendThanks",
      "offset": [
        1782,
        1828
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1367": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5A2"
    },
    "1370": {
      "branch": 30,
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1371": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1373": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1374": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1382": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1385": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1387": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1388": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "ADD",
      "path": "3"
    },
    "1389": {
      "op": "MSTORE"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1394": {
      "op": "DUP3"
    },
    "1395": {
      "op": "ADD"
    },
    "1396": {
      "op": "MSTORE"
    },
    "1397": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768207468616E6B20796F757320746F2073656E64000000"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1432": {
      "op": "DUP3"
    },
    "1433": {
      "op": "ADD"
    },
    "1434": {
      "op": "MSTORE"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1437": {
      "op": "ADD"
    },
    "1438": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "1441": {
      "op": "JUMP"
    },
    "1442": {
      "fn": "Swap.sendThanks",
      "offset": [
        1774,
        1862
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1443": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1895
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x1"
    },
    "1445": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1895
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1446": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1448": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1449": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1456": {
      "op": "SHL"
    },
    "1457": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1458": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1459": {
      "fn": "Swap.sendThanks",
      "offset": [
        1914,
        1918
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1460": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1462": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1463": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "ADD",
      "path": "3"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "fn": "Swap.sendThanks",
      "offset": [
        1924,
        1930
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1466": {
      "fn": "Swap.sendThanks",
      "offset": [
        1924,
        1930
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1473": {
      "op": "SHL"
    },
    "1474": {
      "op": "SUB"
    },
    "1475": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1895
      ],
      "op": "AND",
      "path": "3"
    },
    "1476": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1895
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1477": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "1482": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1905
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1488": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1490": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1491": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1492": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1493": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "SUB",
      "path": "3"
    },
    "1494": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1495": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1496": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "GAS",
      "path": "3"
    },
    "1497": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1498": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1499": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1500": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1501": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5EA"
    },
    "1504": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1505": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1506": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1508": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1509": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1510": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1511": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1513": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1514": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1515": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "POP",
      "path": "3"
    },
    "1516": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "POP",
      "path": "3"
    },
    "1517": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "POP",
      "path": "3"
    },
    "1518": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "POP",
      "path": "3"
    },
    "1519": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1521": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1522": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1523": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1525": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "NOT",
      "path": "3"
    },
    "1526": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1528": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1529": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "ADD",
      "path": "3"
    },
    "1530": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "AND",
      "path": "3"
    },
    "1531": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1532": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "ADD",
      "path": "3"
    },
    "1533": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1534": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1536": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1537": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "POP",
      "path": "3"
    },
    "1538": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1539": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "ADD",
      "path": "3"
    },
    "1540": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1541": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x60E"
    },
    "1544": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1545": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1546": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC4"
    },
    "1549": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        1880,
        1920
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1550": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1920
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1551": {
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1930
      ],
      "op": "LT",
      "path": "3"
    },
    "1552": {
      "branch": 31,
      "fn": "Swap.sendThanks",
      "offset": [
        1880,
        1930
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1553": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65C"
    },
    "1556": {
      "branch": 31,
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1557": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1559": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1566": {
      "op": "SHL"
    },
    "1567": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1568": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1571": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1573": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1574": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "ADD",
      "path": "3"
    },
    "1575": {
      "op": "MSTORE"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1580": {
      "op": "DUP3"
    },
    "1581": {
      "op": "ADD"
    },
    "1582": {
      "op": "MSTORE"
    },
    "1583": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768207265776172647320746F2067697665206F75740000"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1618": {
      "op": "DUP3"
    },
    "1619": {
      "op": "ADD"
    },
    "1620": {
      "op": "MSTORE"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "1627": {
      "op": "JUMP"
    },
    "1628": {
      "fn": "Swap.sendThanks",
      "offset": [
        1872,
        1965
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1629": {
      "fn": "Swap.sendThanks",
      "offset": [
        2058,
        2068
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 11
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "op": "SUB"
    },
    "1638": {
      "fn": "Swap.sendThanks",
      "offset": [
        2058,
        2081
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1639": {
      "fn": "Swap.sendThanks",
      "offset": [
        2058,
        2081
      ],
      "op": "AND",
      "path": "3"
    },
    "1640": {
      "fn": "Swap.sendThanks",
      "offset": [
        2058,
        2081
      ],
      "op": "EQ",
      "path": "3"
    },
    "1641": {
      "branch": 32,
      "fn": "Swap.sendThanks",
      "offset": [
        2058,
        2081
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1642": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6B5"
    },
    "1645": {
      "branch": 32,
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1646": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1648": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1649": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1655": {
      "op": "SHL"
    },
    "1656": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1657": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1660": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1662": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1663": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "ADD",
      "path": "3"
    },
    "1664": {
      "op": "MSTORE"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1669": {
      "op": "DUP3"
    },
    "1670": {
      "op": "ADD"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F74207468616E6B20796F757273656C6600000000000000"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1707": {
      "op": "DUP3"
    },
    "1708": {
      "op": "ADD"
    },
    "1709": {
      "op": "MSTORE"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1712": {
      "op": "ADD"
    },
    "1713": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "1716": {
      "op": "JUMP"
    },
    "1717": {
      "fn": "Swap.sendThanks",
      "offset": [
        2050,
        2111
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1718": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2192
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x2"
    },
    "1720": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2192
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1721": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1723": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1724": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1731": {
      "op": "SHL"
    },
    "1732": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1733": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1734": {
      "fn": "Swap.sendThanks",
      "offset": [
        2206,
        2216
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1735": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1737": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1738": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1739": {
      "op": "MSTORE"
    },
    "1740": {
      "fn": "Swap.sendThanks",
      "offset": [
        2226,
        2230
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1743": {
      "op": "DUP3"
    },
    "1744": {
      "op": "ADD"
    },
    "1745": {
      "op": "MSTORE"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1748": {
      "op": "DUP2"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "op": "DUP5"
    },
    "1751": {
      "op": "SWAP1"
    },
    "1752": {
      "op": "MSTORE"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1757": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1759": {
      "op": "SHL"
    },
    "1760": {
      "op": "SUB"
    },
    "1761": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2192
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1762": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2192
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1763": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2192
      ],
      "op": "AND",
      "path": "3"
    },
    "1764": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2192
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1765": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2205
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "1770": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2205
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1773": {
      "op": "ADD"
    },
    "1774": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1776": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1778": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1779": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1780": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1781": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "SUB",
      "path": "3"
    },
    "1782": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1783": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1785": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1786": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "GAS",
      "path": "3"
    },
    "1787": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "CALL",
      "path": "3"
    },
    "1788": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1789": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1790": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1791": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x70C"
    },
    "1794": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1795": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1796": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1798": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1799": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1800": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1801": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1803": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1804": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1805": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1806": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1807": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1808": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1809": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1811": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1812": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1813": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1815": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "NOT",
      "path": "3"
    },
    "1816": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1818": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1819": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1820": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "AND",
      "path": "3"
    },
    "1821": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1822": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1823": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1824": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1826": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1827": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "POP",
      "path": "3"
    },
    "1828": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1829": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "ADD",
      "path": "3"
    },
    "1830": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1831": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x730"
    },
    "1834": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1835": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1836": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA2"
    },
    "1839": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        2178,
        2240
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1840": {
      "fn": "Swap.sendThanks",
      "offset": [
        2178,
        2240
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2322
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x1"
    },
    "1844": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2322
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1845": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1847": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1848": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1857": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1864": {
      "op": "SHL"
    },
    "1865": {
      "op": "SUB"
    },
    "1866": {
      "op": "DUP4"
    },
    "1867": {
      "op": "DUP2"
    },
    "1868": {
      "op": "AND"
    },
    "1869": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1871": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1872": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "ADD",
      "path": "3"
    },
    "1873": {
      "op": "MSTORE"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1876": {
      "op": "DUP3"
    },
    "1877": {
      "op": "ADD"
    },
    "1878": {
      "op": "DUP6"
    },
    "1879": {
      "op": "SWAP1"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2322
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1882": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2322
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1883": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2322
      ],
      "op": "AND",
      "path": "3"
    },
    "1884": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2322
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1885": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2331
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "1890": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2331
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1896": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1898": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1899": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1900": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1901": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "SUB",
      "path": "3"
    },
    "1902": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1903": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1905": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1906": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "GAS",
      "path": "3"
    },
    "1907": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "CALL",
      "path": "3"
    },
    "1908": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1909": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1910": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1911": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x784"
    },
    "1914": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1915": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1916": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1918": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1919": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1920": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1921": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1923": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1924": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1925": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "POP",
      "path": "3"
    },
    "1926": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "POP",
      "path": "3"
    },
    "1927": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "POP",
      "path": "3"
    },
    "1928": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "POP",
      "path": "3"
    },
    "1929": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1931": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1932": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1933": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1935": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "NOT",
      "path": "3"
    },
    "1936": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "1938": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1939": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "ADD",
      "path": "3"
    },
    "1940": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "AND",
      "path": "3"
    },
    "1941": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1942": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "ADD",
      "path": "3"
    },
    "1943": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1944": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1946": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1947": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "POP",
      "path": "3"
    },
    "1948": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1949": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "ADD",
      "path": "3"
    },
    "1950": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1951": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A8"
    },
    "1954": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1955": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1956": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA2"
    },
    "1959": {
      "fn": "Swap.sendThanks",
      "jump": "i",
      "offset": [
        2307,
        2350
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1960": {
      "fn": "Swap.sendThanks",
      "offset": [
        2307,
        2350
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1961": {
      "op": "POP"
    },
    "1962": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x40"
    },
    "1964": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1965": {
      "op": "DUP3"
    },
    "1966": {
      "op": "DUP2"
    },
    "1967": {
      "op": "MSTORE"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1974": {
      "op": "SHL"
    },
    "1975": {
      "op": "SUB"
    },
    "1976": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1977": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "AND",
      "path": "3"
    },
    "1978": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1979": {
      "fn": "Swap.sendThanks",
      "offset": [
        2371,
        2381
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1980": {
      "fn": "Swap.sendThanks",
      "offset": [
        2371,
        2381
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1981": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x3990DB2D31862302A685E8086B5755072A6E2B5B780AF1EE81ECE35EE3CD3345"
    },
    "2014": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2017": {
      "op": "ADD"
    },
    "2018": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2020": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2021": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2022": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2023": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "SUB",
      "path": "3"
    },
    "2024": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2025": {
      "fn": "Swap.sendThanks",
      "offset": [
        2366,
        2401
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2026": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "POP",
      "path": "3"
    },
    "2027": {
      "fn": "Swap.sendThanks",
      "offset": [
        1360,
        2408
      ],
      "op": "POP",
      "path": "3"
    },
    "2028": {
      "fn": "Swap.sendThanks",
      "jump": "o",
      "offset": [
        1360,
        2408
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2029": {
      "offset": [
        273,
        313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2030": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2032": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2033": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2034": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2035": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2036": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "LT",
      "path": "3"
    },
    "2037": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7FD"
    },
    "2040": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2041": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2043": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2044": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2045": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2046": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2048": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2049": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2050": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2051": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2053": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2054": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2055": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2056": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "ADD",
      "path": "3"
    },
    "2057": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2064": {
      "op": "SHL"
    },
    "2065": {
      "op": "SUB"
    },
    "2066": {
      "offset": [
        273,
        313
      ],
      "op": "AND",
      "path": "3"
    },
    "2067": {
      "fn": "Swap.sendThanks",
      "offset": [
        273,
        313
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2068": {
      "op": "POP"
    },
    "2069": {
      "offset": [
        273,
        313
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2070": {
      "fn": "Swap.sendThanks",
      "jump": "o",
      "offset": [
        273,
        313
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2071": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2072": {
      "fn": "Swap.redeem",
      "offset": [
        2527,
        2551
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 15,
      "value": "0x820"
    },
    "2075": {
      "fn": "Swap.redeem",
      "offset": [
        2540,
        2550
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2076": {
      "fn": "Swap.redeem",
      "offset": [
        2527,
        2539
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB72"
    },
    "2079": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        2527,
        2551
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2080": {
      "branch": 33,
      "fn": "Swap.redeem",
      "offset": [
        2527,
        2551
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2081": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x861"
    },
    "2084": {
      "branch": 33,
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2085": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2087": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2094": {
      "op": "SHL"
    },
    "2095": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2096": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2099": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2101": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2102": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "ADD",
      "path": "3"
    },
    "2103": {
      "op": "MSTORE"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2108": {
      "op": "DUP3"
    },
    "2109": {
      "op": "ADD"
    },
    "2110": {
      "op": "MSTORE"
    },
    "2111": {
      "op": "PUSH18",
      "value": "0x55736572206E6F742079657420736574757"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x74"
    },
    "2132": {
      "op": "SHL"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2135": {
      "op": "DUP3"
    },
    "2136": {
      "op": "ADD"
    },
    "2137": {
      "op": "MSTORE"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2140": {
      "op": "ADD"
    },
    "2141": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "2144": {
      "op": "JUMP"
    },
    "2145": {
      "fn": "Swap.redeem",
      "offset": [
        2519,
        2574
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2146": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2607
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 16,
      "value": "0x1"
    },
    "2148": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2607
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2149": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2151": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2152": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2161": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2162": {
      "fn": "Swap.redeem",
      "offset": [
        2618,
        2628
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2163": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2165": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2166": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "ADD",
      "path": "3"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "fn": "Swap.redeem",
      "offset": [
        2633,
        2639
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2169": {
      "fn": "Swap.redeem",
      "offset": [
        2633,
        2639
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2176": {
      "op": "SHL"
    },
    "2177": {
      "op": "SUB"
    },
    "2178": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2607
      ],
      "op": "AND",
      "path": "3"
    },
    "2179": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2607
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2180": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2617
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2185": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2188": {
      "op": "ADD"
    },
    "2189": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2191": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2193": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2194": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2195": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2196": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "SUB",
      "path": "3"
    },
    "2197": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2198": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2199": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "GAS",
      "path": "3"
    },
    "2200": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2201": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2202": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2203": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2204": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A9"
    },
    "2207": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2208": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2209": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2211": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2212": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2213": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2214": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2216": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2217": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2218": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "2219": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "2220": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "2221": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "2222": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2224": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2225": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2226": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2228": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "NOT",
      "path": "3"
    },
    "2229": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2231": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2232": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "ADD",
      "path": "3"
    },
    "2233": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "AND",
      "path": "3"
    },
    "2234": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2235": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "ADD",
      "path": "3"
    },
    "2236": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2237": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2239": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2240": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "POP",
      "path": "3"
    },
    "2241": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2242": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "ADD",
      "path": "3"
    },
    "2243": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2244": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8CD"
    },
    "2247": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2248": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2249": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC4"
    },
    "2252": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        2592,
        2629
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2253": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2629
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2254": {
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2639
      ],
      "op": "LT",
      "path": "3"
    },
    "2255": {
      "branch": 34,
      "fn": "Swap.redeem",
      "offset": [
        2592,
        2639
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2256": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x936"
    },
    "2259": {
      "branch": 34,
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2260": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2262": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2263": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2269": {
      "op": "SHL"
    },
    "2270": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2271": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2274": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2276": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2277": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "ADD",
      "path": "3"
    },
    "2278": {
      "op": "MSTORE"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2283": {
      "op": "DUP3"
    },
    "2284": {
      "op": "ADD"
    },
    "2285": {
      "op": "MSTORE"
    },
    "2286": {
      "op": "PUSH32",
      "value": "0x547279696E6720746F2072656465656D206D6F72652072657761726473207468"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2321": {
      "op": "DUP3"
    },
    "2322": {
      "op": "ADD"
    },
    "2323": {
      "op": "MSTORE"
    },
    "2324": {
      "op": "PUSH18",
      "value": "0x616E20796F752061726520686F6C64696E67"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "2345": {
      "op": "SHL"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2348": {
      "op": "DUP3"
    },
    "2349": {
      "op": "ADD"
    },
    "2350": {
      "op": "MSTORE"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2353": {
      "op": "ADD"
    },
    "2354": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "2357": {
      "op": "JUMP"
    },
    "2358": {
      "fn": "Swap.redeem",
      "offset": [
        2584,
        2694
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2359": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2720
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x1"
    },
    "2361": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2720
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2362": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2364": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2365": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2372": {
      "op": "SHL"
    },
    "2373": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2374": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2375": {
      "fn": "Swap.redeem",
      "offset": [
        2734,
        2744
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2376": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2378": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2379": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "ADD",
      "path": "3"
    },
    "2380": {
      "op": "MSTORE"
    },
    "2381": {
      "fn": "Swap.redeem",
      "offset": [
        2754,
        2758
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2384": {
      "op": "DUP3"
    },
    "2385": {
      "op": "ADD"
    },
    "2386": {
      "op": "MSTORE"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2389": {
      "op": "DUP2"
    },
    "2390": {
      "op": "ADD"
    },
    "2391": {
      "op": "DUP4"
    },
    "2392": {
      "op": "SWAP1"
    },
    "2393": {
      "op": "MSTORE"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2400": {
      "op": "SHL"
    },
    "2401": {
      "op": "SUB"
    },
    "2402": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2403": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2720
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2404": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2720
      ],
      "op": "AND",
      "path": "3"
    },
    "2405": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2406": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2733
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "2411": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2733
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2414": {
      "op": "ADD"
    },
    "2415": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2417": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2419": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2420": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2421": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2422": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "SUB",
      "path": "3"
    },
    "2423": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2424": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2426": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2427": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "GAS",
      "path": "3"
    },
    "2428": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "CALL",
      "path": "3"
    },
    "2429": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2430": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2431": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2432": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x98D"
    },
    "2435": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2436": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2437": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2439": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2440": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2441": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2442": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2444": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2445": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2446": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "POP",
      "path": "3"
    },
    "2447": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "POP",
      "path": "3"
    },
    "2448": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "POP",
      "path": "3"
    },
    "2449": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "POP",
      "path": "3"
    },
    "2450": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2452": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2453": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2454": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2456": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "NOT",
      "path": "3"
    },
    "2457": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2459": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2460": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "ADD",
      "path": "3"
    },
    "2461": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "AND",
      "path": "3"
    },
    "2462": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2463": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "ADD",
      "path": "3"
    },
    "2464": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2465": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2467": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2468": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "POP",
      "path": "3"
    },
    "2469": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2470": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "ADD",
      "path": "3"
    },
    "2471": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2472": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B1"
    },
    "2475": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2476": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2477": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA2"
    },
    "2480": {
      "fn": "Swap.redeem",
      "jump": "i",
      "offset": [
        2705,
        2768
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2481": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2482": {
      "fn": "Swap.redeem",
      "offset": [
        2705,
        2768
      ],
      "op": "POP",
      "path": "3"
    },
    "2483": {
      "fn": "Swap.redeem",
      "offset": [
        2470,
        2775
      ],
      "op": "POP",
      "path": "3"
    },
    "2484": {
      "fn": "Swap.redeem",
      "jump": "o",
      "offset": [
        2470,
        2775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2485": {
      "fn": "Swap.distribute",
      "offset": [
        2962,
        3516
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2486": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2488": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2495": {
      "op": "SHL"
    },
    "2496": {
      "op": "SUB"
    },
    "2497": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2498": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2499": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2500": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DF"
    },
    "2503": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2504": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2506": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2507": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2513": {
      "op": "SHL"
    },
    "2514": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2515": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2516": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2518": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2519": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "2522": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2523": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6D"
    },
    "2526": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2527": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2528": {
      "fn": "Swap.distribute",
      "offset": [
        3062,
        3085
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 18,
      "value": "0x3"
    },
    "2530": {
      "fn": "Swap.distribute",
      "offset": [
        3062,
        3092
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2531": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2E"
    },
    "2534": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2535": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2537": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2538": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2544": {
      "op": "SHL"
    },
    "2545": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2546": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2549": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2551": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2552": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "ADD",
      "path": "3"
    },
    "2553": {
      "op": "DUP2"
    },
    "2554": {
      "op": "SWAP1"
    },
    "2555": {
      "op": "MSTORE"
    },
    "2556": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2558": {
      "op": "DUP3"
    },
    "2559": {
      "op": "ADD"
    },
    "2560": {
      "op": "MSTORE"
    },
    "2561": {
      "op": "PUSH32",
      "value": "0x4E6F20726563697069656E742061646472657373657320616464656420796574"
    },
    "2594": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2596": {
      "op": "DUP3"
    },
    "2597": {
      "op": "ADD"
    },
    "2598": {
      "op": "MSTORE"
    },
    "2599": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2601": {
      "op": "ADD"
    },
    "2602": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BC"
    },
    "2605": {
      "op": "JUMP"
    },
    "2606": {
      "fn": "Swap.distribute",
      "offset": [
        3054,
        3133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2607": {
      "fn": "Swap.distribute",
      "offset": [
        3294,
        3317
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2609": {
      "fn": "Swap.distribute",
      "offset": [
        3294,
        3324
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2610": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3266
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2612": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3266
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2613": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2615": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2616": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2623": {
      "op": "SHL"
    },
    "2624": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2625": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2626": {
      "fn": "Swap.distribute",
      "offset": [
        3285,
        3289
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2627": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2629": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2630": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "ADD",
      "path": "3"
    },
    "2631": {
      "op": "MSTORE"
    },
    "2632": {
      "fn": "Swap.distribute",
      "offset": [
        3235,
        3249
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2634": {
      "fn": "Swap.distribute",
      "offset": [
        3235,
        3249
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2635": {
      "fn": "Swap.distribute",
      "offset": [
        3294,
        3324
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2642": {
      "op": "SHL"
    },
    "2643": {
      "op": "SUB"
    },
    "2644": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3266
      ],
      "op": "AND",
      "path": "3"
    },
    "2645": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2646": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3276
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2651": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3276
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2654": {
      "op": "ADD"
    },
    "2655": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2657": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2659": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2660": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2661": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2662": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "SUB",
      "path": "3"
    },
    "2663": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2664": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2665": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "GAS",
      "path": "3"
    },
    "2666": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2667": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2668": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2669": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2670": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "2673": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2674": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2675": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2677": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2678": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2679": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2680": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2682": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2683": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2684": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "POP",
      "path": "3"
    },
    "2685": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "POP",
      "path": "3"
    },
    "2686": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "POP",
      "path": "3"
    },
    "2687": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "POP",
      "path": "3"
    },
    "2688": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2690": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2691": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2692": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2694": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "NOT",
      "path": "3"
    },
    "2695": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2697": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2698": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "ADD",
      "path": "3"
    },
    "2699": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "AND",
      "path": "3"
    },
    "2700": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2701": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "ADD",
      "path": "3"
    },
    "2702": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2703": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2705": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2706": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "POP",
      "path": "3"
    },
    "2707": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2708": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "ADD",
      "path": "3"
    },
    "2709": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2710": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9F"
    },
    "2713": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2714": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2715": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC4"
    },
    "2718": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        3252,
        3291
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2719": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2720": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA9"
    },
    "2723": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3324
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2724": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3324
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2725": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDD"
    },
    "2728": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        3252,
        3324
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2729": {
      "fn": "Swap.distribute",
      "offset": [
        3252,
        3324
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2730": {
      "fn": "Swap.distribute",
      "offset": [
        3235,
        3324
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2731": {
      "fn": "Swap.distribute",
      "offset": [
        3235,
        3324
      ],
      "op": "POP",
      "path": "3"
    },
    "2732": {
      "fn": "Swap.distribute",
      "offset": [
        3339,
        3356
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2734": {
      "fn": "Swap.distribute",
      "offset": [
        3334,
        3510
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2735": {
      "fn": "Swap.distribute",
      "offset": [
        3370,
        3393
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2737": {
      "fn": "Swap.distribute",
      "offset": [
        3370,
        3400
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2738": {
      "fn": "Swap.distribute",
      "offset": [
        3358,
        3400
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2739": {
      "fn": "Swap.distribute",
      "offset": [
        3358,
        3400
      ],
      "op": "LT",
      "path": "3"
    },
    "2740": {
      "fn": "Swap.distribute",
      "offset": [
        3334,
        3510
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2741": {
      "fn": "Swap.distribute",
      "offset": [
        3334,
        3510
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B1"
    },
    "2744": {
      "fn": "Swap.distribute",
      "offset": [
        3334,
        3510
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2745": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3443
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x2"
    },
    "2747": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3443
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2748": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3476
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2750": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2751": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "op": "SUB"
    },
    "2760": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3443
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2761": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3443
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2762": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3443
      ],
      "op": "AND",
      "path": "3"
    },
    "2763": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3443
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2764": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3452
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "2769": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3452
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2770": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3476
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2771": {
      "fn": "Swap.distribute",
      "offset": [
        3477,
        3486
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2772": {
      "fn": "Swap.distribute",
      "offset": [
        3477,
        3486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2773": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2774": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "LT",
      "path": "3"
    },
    "2775": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE2"
    },
    "2778": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2779": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE2"
    },
    "2782": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDFF"
    },
    "2785": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        3453,
        3487
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2786": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2787": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2789": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2790": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2791": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2792": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2794": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2795": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2796": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2797": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "ADD",
      "path": "3"
    },
    "2798": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2799": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2801": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2802": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2804": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2805": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2806": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "SHL",
      "path": "3"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2813": {
      "op": "SHL"
    },
    "2814": {
      "op": "SUB"
    },
    "2815": {
      "op": "NOT"
    },
    "2816": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "AND",
      "path": "3"
    },
    "2817": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2818": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2825": {
      "op": "SHL"
    },
    "2826": {
      "op": "SUB"
    },
    "2827": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2828": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2829": {
      "fn": "Swap.distribute",
      "offset": [
        3453,
        3487
      ],
      "op": "AND",
      "path": "3"
    },
    "2830": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2832": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2833": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "ADD",
      "path": "3"
    },
    "2834": {
      "op": "MSTORE"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2837": {
      "op": "DUP2"
    },
    "2838": {
      "op": "ADD"
    },
    "2839": {
      "op": "DUP6"
    },
    "2840": {
      "op": "SWAP1"
    },
    "2841": {
      "op": "MSTORE"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2844": {
      "op": "ADD"
    },
    "2845": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2847": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2849": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2850": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2851": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2852": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "SUB",
      "path": "3"
    },
    "2853": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2854": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2856": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2857": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "GAS",
      "path": "3"
    },
    "2858": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "CALL",
      "path": "3"
    },
    "2859": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2860": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2861": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2862": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB3B"
    },
    "2865": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2866": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2867": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2869": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2870": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2871": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2872": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2874": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2875": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2876": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "POP",
      "path": "3"
    },
    "2877": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "POP",
      "path": "3"
    },
    "2878": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "POP",
      "path": "3"
    },
    "2879": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "POP",
      "path": "3"
    },
    "2880": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2882": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2883": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2884": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2886": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "NOT",
      "path": "3"
    },
    "2887": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2889": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2890": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "ADD",
      "path": "3"
    },
    "2891": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "AND",
      "path": "3"
    },
    "2892": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2893": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "ADD",
      "path": "3"
    },
    "2894": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2895": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2897": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2898": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "POP",
      "path": "3"
    },
    "2899": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2900": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "ADD",
      "path": "3"
    },
    "2901": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2902": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5F"
    },
    "2905": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2906": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2907": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDA2"
    },
    "2910": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        3429,
        3499
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2911": {
      "fn": "Swap.distribute",
      "offset": [
        3429,
        3499
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "fn": "Swap.distribute",
      "offset": [
        3402,
        3413
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 20
    },
    "2914": {
      "fn": "Swap.distribute",
      "offset": [
        3402,
        3413
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6A"
    },
    "2917": {
      "fn": "Swap.distribute",
      "offset": [
        3402,
        3413
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2918": {
      "fn": "Swap.distribute",
      "offset": [
        3402,
        3413
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE15"
    },
    "2921": {
      "fn": "Swap.distribute",
      "jump": "i",
      "offset": [
        3402,
        3413
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2922": {
      "fn": "Swap.distribute",
      "offset": [
        3402,
        3413
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2923": {
      "fn": "Swap.distribute",
      "offset": [
        3402,
        3413
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2924": {
      "fn": "Swap.distribute",
      "offset": [
        3402,
        3413
      ],
      "op": "POP",
      "path": "3"
    },
    "2925": {
      "fn": "Swap.distribute",
      "offset": [
        3402,
        3413
      ],
      "op": "POP",
      "path": "3"
    },
    "2926": {
      "fn": "Swap.distribute",
      "offset": [
        3334,
        3510
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAE"
    },
    "2929": {
      "fn": "Swap.distribute",
      "offset": [
        3334,
        3510
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2930": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2931": {
      "fn": "Swap.addressSetup",
      "offset": [
        1044,
        1048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2933": {
      "fn": "Swap.addressSetup",
      "offset": [
        1044,
        1048
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2934": {
      "fn": "Swap.addressSetup",
      "offset": [
        1060,
        1231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2935": {
      "fn": "Swap.addressSetup",
      "offset": [
        1079,
        1102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2937": {
      "fn": "Swap.addressSetup",
      "offset": [
        1079,
        1109
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2938": {
      "fn": "Swap.addressSetup",
      "offset": [
        1075,
        1109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2939": {
      "fn": "Swap.addressSetup",
      "offset": [
        1075,
        1109
      ],
      "op": "LT",
      "path": "3"
    },
    "2940": {
      "fn": "Swap.addressSetup",
      "offset": [
        1060,
        1231
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2941": {
      "fn": "Swap.addressSetup",
      "offset": [
        1060,
        1231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD3"
    },
    "2944": {
      "fn": "Swap.addressSetup",
      "offset": [
        1060,
        1231
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2945": {
      "fn": "Swap.addressSetup",
      "offset": [
        1164,
        1175
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2952": {
      "op": "SHL"
    },
    "2953": {
      "op": "SUB"
    },
    "2954": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1175
      ],
      "op": "AND",
      "path": "3"
    },
    "2955": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1157
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2957": {
      "fn": "Swap.addressSetup",
      "offset": [
        1158,
        1159
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2958": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2959": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2960": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2961": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "LT",
      "path": "3"
    },
    "2962": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9D"
    },
    "2965": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2966": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9D"
    },
    "2969": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDFF"
    },
    "2972": {
      "fn": "Swap.addressSetup",
      "jump": "i",
      "offset": [
        1134,
        1160
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2973": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2974": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2976": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2977": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2978": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2979": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2981": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2982": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2983": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2984": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "ADD",
      "path": "3"
    },
    "2985": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2992": {
      "op": "SHL"
    },
    "2993": {
      "op": "SUB"
    },
    "2994": {
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1160
      ],
      "op": "AND",
      "path": "3"
    },
    "2995": {
      "branch": 35,
      "fn": "Swap.addressSetup",
      "offset": [
        1134,
        1175
      ],
      "op": "EQ",
      "path": "3"
    },
    "2996": {
      "fn": "Swap.addressSetup",
      "offset": [
        1130,
        1221
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2997": {
      "fn": "Swap.addressSetup",
      "offset": [
        1130,
        1221
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBC1"
    },
    "3000": {
      "branch": 35,
      "fn": "Swap.addressSetup",
      "offset": [
        1130,
        1221
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3001": {
      "op": "POP"
    },
    "3002": {
      "fn": "Swap.addressSetup",
      "offset": [
        1202,
        1206
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 21,
      "value": "0x1"
    },
    "3004": {
      "fn": "Swap.addressSetup",
      "offset": [
        1202,
        1206
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3005": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3006": {
      "op": "POP"
    },
    "3007": {
      "op": "POP"
    },
    "3008": {
      "fn": "Swap.addressSetup",
      "jump": "o",
      "offset": [
        981,
        1259
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3009": {
      "fn": "Swap.addressSetup",
      "offset": [
        1130,
        1221
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3010": {
      "fn": "Swap.addressSetup",
      "offset": [
        1111,
        1114
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 22
    },
    "3011": {
      "fn": "Swap.addressSetup",
      "offset": [
        1111,
        1114
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBCB"
    },
    "3014": {
      "fn": "Swap.addressSetup",
      "offset": [
        1111,
        1114
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3015": {
      "fn": "Swap.addressSetup",
      "offset": [
        1111,
        1114
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE15"
    },
    "3018": {
      "fn": "Swap.addressSetup",
      "jump": "i",
      "offset": [
        1111,
        1114
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3019": {
      "fn": "Swap.addressSetup",
      "offset": [
        1111,
        1114
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3020": {
      "fn": "Swap.addressSetup",
      "offset": [
        1111,
        1114
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3021": {
      "fn": "Swap.addressSetup",
      "offset": [
        1111,
        1114
      ],
      "op": "POP",
      "path": "3"
    },
    "3022": {
      "fn": "Swap.addressSetup",
      "offset": [
        1111,
        1114
      ],
      "op": "POP",
      "path": "3"
    },
    "3023": {
      "fn": "Swap.addressSetup",
      "offset": [
        1060,
        1231
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB76"
    },
    "3026": {
      "fn": "Swap.addressSetup",
      "offset": [
        1060,
        1231
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3027": {
      "fn": "Swap.addressSetup",
      "offset": [
        1060,
        1231
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "fn": "Swap.addressSetup",
      "offset": [
        1247,
        1252
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 23,
      "value": "0x0"
    },
    "3031": {
      "fn": "Swap.addressSetup",
      "offset": [
        1247,
        1252
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3032": {
      "fn": "Swap.addressSetup",
      "offset": [
        981,
        1259
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3033": {
      "op": "POP"
    },
    "3034": {
      "op": "POP"
    },
    "3035": {
      "fn": "Swap.addressSetup",
      "jump": "o",
      "offset": [
        981,
        1259
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3037": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3039": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3046": {
      "op": "SHL"
    },
    "3047": {
      "op": "SUB"
    },
    "3048": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3049": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3050": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3051": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC06"
    },
    "3054": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3055": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3057": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3066": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3067": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3069": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3070": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "3073": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3074": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD6D"
    },
    "3077": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3078": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3085": {
      "op": "SHL"
    },
    "3086": {
      "op": "SUB"
    },
    "3087": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 24
    },
    "3088": {
      "branch": 36,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "3089": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6B"
    },
    "3092": {
      "branch": 36,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3093": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3095": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3102": {
      "op": "SHL"
    },
    "3103": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3104": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3110": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "3111": {
      "op": "MSTORE"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3116": {
      "op": "DUP3"
    },
    "3117": {
      "op": "ADD"
    },
    "3118": {
      "op": "MSTORE"
    },
    "3119": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3154": {
      "op": "DUP3"
    },
    "3155": {
      "op": "ADD"
    },
    "3156": {
      "op": "MSTORE"
    },
    "3157": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3169": {
      "op": "DUP3"
    },
    "3170": {
      "op": "ADD"
    },
    "3171": {
      "op": "MSTORE"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3174": {
      "op": "ADD"
    },
    "3175": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BC"
    },
    "3178": {
      "op": "JUMP"
    },
    "3179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3180": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0x446"
    },
    "3183": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3184": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3185": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3187": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3188": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3195": {
      "op": "SHL"
    },
    "3196": {
      "op": "SUB"
    },
    "3197": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 26
    },
    "3198": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3199": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3206": {
      "op": "SHL"
    },
    "3207": {
      "op": "SUB"
    },
    "3208": {
      "op": "NOT"
    },
    "3209": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3210": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3211": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3212": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3213": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3214": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3215": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x40"
    },
    "3217": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3218": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3219": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3220": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3221": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3222": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3223": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3224": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3225": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3258": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3259": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3260": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3261": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3262": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3263": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3264": {
      "op": "JUMPDEST"
    },
    "3265": {
      "op": "DUP1"
    },
    "3266": {
      "op": "CALLDATALOAD"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3273": {
      "op": "SHL"
    },
    "3274": {
      "op": "SUB"
    },
    "3275": {
      "op": "DUP2"
    },
    "3276": {
      "op": "AND"
    },
    "3277": {
      "op": "DUP2"
    },
    "3278": {
      "op": "EQ"
    },
    "3279": {
      "op": "PUSH2",
      "value": "0xCD7"
    },
    "3282": {
      "op": "JUMPI"
    },
    "3283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3285": {
      "op": "DUP1"
    },
    "3286": {
      "op": "REVERT"
    },
    "3287": {
      "op": "JUMPDEST"
    },
    "3288": {
      "op": "SWAP2"
    },
    "3289": {
      "op": "SWAP1"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "jump": "o",
      "op": "JUMP"
    },
    "3292": {
      "op": "JUMPDEST"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3297": {
      "op": "DUP3"
    },
    "3298": {
      "op": "DUP5"
    },
    "3299": {
      "op": "SUB"
    },
    "3300": {
      "op": "SLT"
    },
    "3301": {
      "op": "ISZERO"
    },
    "3302": {
      "op": "PUSH2",
      "value": "0xCEE"
    },
    "3305": {
      "op": "JUMPI"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3308": {
      "op": "DUP1"
    },
    "3309": {
      "op": "REVERT"
    },
    "3310": {
      "op": "JUMPDEST"
    },
    "3311": {
      "op": "PUSH2",
      "value": "0xCF7"
    },
    "3314": {
      "op": "DUP3"
    },
    "3315": {
      "op": "PUSH2",
      "value": "0xCC0"
    },
    "3318": {
      "jump": "i",
      "op": "JUMP"
    },
    "3319": {
      "op": "JUMPDEST"
    },
    "3320": {
      "op": "SWAP4"
    },
    "3321": {
      "op": "SWAP3"
    },
    "3322": {
      "op": "POP"
    },
    "3323": {
      "op": "POP"
    },
    "3324": {
      "op": "POP"
    },
    "3325": {
      "jump": "o",
      "op": "JUMP"
    },
    "3326": {
      "op": "JUMPDEST"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3329": {
      "op": "DUP1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3332": {
      "op": "DUP4"
    },
    "3333": {
      "op": "DUP6"
    },
    "3334": {
      "op": "SUB"
    },
    "3335": {
      "op": "SLT"
    },
    "3336": {
      "op": "ISZERO"
    },
    "3337": {
      "op": "PUSH2",
      "value": "0xD11"
    },
    "3340": {
      "op": "JUMPI"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "op": "DUP1"
    },
    "3344": {
      "op": "REVERT"
    },
    "3345": {
      "op": "JUMPDEST"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0xD1A"
    },
    "3349": {
      "op": "DUP4"
    },
    "3350": {
      "op": "PUSH2",
      "value": "0xCC0"
    },
    "3353": {
      "jump": "i",
      "op": "JUMP"
    },
    "3354": {
      "op": "JUMPDEST"
    },
    "3355": {
      "op": "SWAP5"
    },
    "3356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3358": {
      "op": "SWAP4"
    },
    "3359": {
      "op": "SWAP1"
    },
    "3360": {
      "op": "SWAP4"
    },
    "3361": {
      "op": "ADD"
    },
    "3362": {
      "op": "CALLDATALOAD"
    },
    "3363": {
      "op": "SWAP4"
    },
    "3364": {
      "op": "POP"
    },
    "3365": {
      "op": "POP"
    },
    "3366": {
      "op": "POP"
    },
    "3367": {
      "jump": "o",
      "op": "JUMP"
    },
    "3368": {
      "op": "JUMPDEST"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3371": {
      "op": "DUP1"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3374": {
      "op": "DUP4"
    },
    "3375": {
      "op": "DUP6"
    },
    "3376": {
      "op": "SUB"
    },
    "3377": {
      "op": "SLT"
    },
    "3378": {
      "op": "ISZERO"
    },
    "3379": {
      "op": "PUSH2",
      "value": "0xD3B"
    },
    "3382": {
      "op": "JUMPI"
    },
    "3383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3385": {
      "op": "DUP1"
    },
    "3386": {
      "op": "REVERT"
    },
    "3387": {
      "op": "JUMPDEST"
    },
    "3388": {
      "op": "DUP3"
    },
    "3389": {
      "op": "CALLDATALOAD"
    },
    "3390": {
      "op": "SWAP2"
    },
    "3391": {
      "op": "POP"
    },
    "3392": {
      "op": "PUSH2",
      "value": "0xD4B"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3397": {
      "op": "DUP5"
    },
    "3398": {
      "op": "ADD"
    },
    "3399": {
      "op": "PUSH2",
      "value": "0xCC0"
    },
    "3402": {
      "jump": "i",
      "op": "JUMP"
    },
    "3403": {
      "op": "JUMPDEST"
    },
    "3404": {
      "op": "SWAP1"
    },
    "3405": {
      "op": "POP"
    },
    "3406": {
      "op": "SWAP3"
    },
    "3407": {
      "op": "POP"
    },
    "3408": {
      "op": "SWAP3"
    },
    "3409": {
      "op": "SWAP1"
    },
    "3410": {
      "op": "POP"
    },
    "3411": {
      "jump": "o",
      "op": "JUMP"
    },
    "3412": {
      "op": "JUMPDEST"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3417": {
      "op": "DUP3"
    },
    "3418": {
      "op": "DUP5"
    },
    "3419": {
      "op": "SUB"
    },
    "3420": {
      "op": "SLT"
    },
    "3421": {
      "op": "ISZERO"
    },
    "3422": {
      "op": "PUSH2",
      "value": "0xD66"
    },
    "3425": {
      "op": "JUMPI"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3428": {
      "op": "DUP1"
    },
    "3429": {
      "op": "REVERT"
    },
    "3430": {
      "op": "JUMPDEST"
    },
    "3431": {
      "op": "POP"
    },
    "3432": {
      "op": "CALLDATALOAD"
    },
    "3433": {
      "op": "SWAP2"
    },
    "3434": {
      "op": "SWAP1"
    },
    "3435": {
      "op": "POP"
    },
    "3436": {
      "jump": "o",
      "op": "JUMP"
    },
    "3437": {
      "op": "JUMPDEST"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3440": {
      "op": "DUP1"
    },
    "3441": {
      "op": "DUP3"
    },
    "3442": {
      "op": "MSTORE"
    },
    "3443": {
      "op": "DUP2"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "ADD"
    },
    "3446": {
      "op": "MSTORE"
    },
    "3447": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3480": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3482": {
      "op": "DUP3"
    },
    "3483": {
      "op": "ADD"
    },
    "3484": {
      "op": "MSTORE"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3487": {
      "op": "ADD"
    },
    "3488": {
      "op": "SWAP1"
    },
    "3489": {
      "jump": "o",
      "op": "JUMP"
    },
    "3490": {
      "op": "JUMPDEST"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3495": {
      "op": "DUP3"
    },
    "3496": {
      "op": "DUP5"
    },
    "3497": {
      "op": "SUB"
    },
    "3498": {
      "op": "SLT"
    },
    "3499": {
      "op": "ISZERO"
    },
    "3500": {
      "op": "PUSH2",
      "value": "0xDB4"
    },
    "3503": {
      "op": "JUMPI"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3506": {
      "op": "DUP1"
    },
    "3507": {
      "op": "REVERT"
    },
    "3508": {
      "op": "JUMPDEST"
    },
    "3509": {
      "op": "DUP2"
    },
    "3510": {
      "op": "MLOAD"
    },
    "3511": {
      "op": "DUP1"
    },
    "3512": {
      "op": "ISZERO"
    },
    "3513": {
      "op": "ISZERO"
    },
    "3514": {
      "op": "DUP2"
    },
    "3515": {
      "op": "EQ"
    },
    "3516": {
      "op": "PUSH2",
      "value": "0xCF7"
    },
    "3519": {
      "op": "JUMPI"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3522": {
      "op": "DUP1"
    },
    "3523": {
      "op": "REVERT"
    },
    "3524": {
      "op": "JUMPDEST"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3529": {
      "op": "DUP3"
    },
    "3530": {
      "op": "DUP5"
    },
    "3531": {
      "op": "SUB"
    },
    "3532": {
      "op": "SLT"
    },
    "3533": {
      "op": "ISZERO"
    },
    "3534": {
      "op": "PUSH2",
      "value": "0xDD6"
    },
    "3537": {
      "op": "JUMPI"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3540": {
      "op": "DUP1"
    },
    "3541": {
      "op": "REVERT"
    },
    "3542": {
      "op": "JUMPDEST"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "op": "MLOAD"
    },
    "3545": {
      "op": "SWAP2"
    },
    "3546": {
      "op": "SWAP1"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "jump": "o",
      "op": "JUMP"
    },
    "3549": {
      "op": "JUMPDEST"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3552": {
      "op": "DUP3"
    },
    "3553": {
      "op": "PUSH2",
      "value": "0xDFA"
    },
    "3556": {
      "op": "JUMPI"
    },
    "3557": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3564": {
      "op": "SHL"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3567": {
      "op": "MSTORE"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3572": {
      "op": "MSTORE"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3577": {
      "op": "REVERT"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "op": "DIV"
    },
    "3581": {
      "op": "SWAP1"
    },
    "3582": {
      "jump": "o",
      "op": "JUMP"
    },
    "3583": {
      "op": "JUMPDEST"
    },
    "3584": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3591": {
      "op": "SHL"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3594": {
      "op": "MSTORE"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3599": {
      "op": "MSTORE"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3604": {
      "op": "REVERT"
    },
    "3605": {
      "op": "JUMPDEST"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3610": {
      "op": "NOT"
    },
    "3611": {
      "op": "DUP3"
    },
    "3612": {
      "op": "EQ"
    },
    "3613": {
      "op": "ISZERO"
    },
    "3614": {
      "op": "PUSH2",
      "value": "0xE37"
    },
    "3617": {
      "op": "JUMPI"
    },
    "3618": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3628": {
      "op": "MSTORE"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3633": {
      "op": "MSTORE"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3638": {
      "op": "REVERT"
    },
    "3639": {
      "op": "JUMPDEST"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3643": {
      "op": "ADD"
    },
    "3644": {
      "op": "SWAP1"
    },
    "3645": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "1b7a87c926037bb24bf3a4b3d06cd8b49e60bd9d",
  "source": "// SPDX-License-Identifier: AGPL 3.0\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract Swap is Ownable {\n    IERC20 public RewardsContract;\n    IERC20 public ThanksContract;\n    address[] public validRecipientAddresses;\n\n    event Sent(address indexed _from, address indexed _to, uint256 _amount);\n\n    constructor(address _rewardsAddress, address _thanksAddress) public {\n        RewardsContract = IERC20(_rewardsAddress);\n        ThanksContract = IERC20(_thanksAddress);\n    }\n\n    // Adds user address to the contract.  This is to limit the addresses which can interact with the contract.  \n    // Can only be added by the person that deploys the contract\n    function addAddress(address newRecipientAddress) public onlyOwner{\n        validRecipientAddresses.push(newRecipientAddress);\n    }\n\n    // Returns whether or not the user address has already been added to the contract\n    function addressSetup(address userAddress) public view returns(bool) {\n        for (uint i=0; i < validRecipientAddresses.length; i++) {\n            if (validRecipientAddresses[i] == userAddress) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // Function which takes in a thank you token and send a reward token to the user indicated\n    function sendThanks(uint256 amount, address toAddress) public {\n        // make sure both sender and receiver were already added to the contract\n        require(addressSetup(msg.sender), \"User not yet setup\");\n        require(addressSetup(toAddress), \"Recipient not yet setup\");\n        // Make sure there are enough coins in both the senders address and within the contract to send\n        // and convert\n        require(ThanksContract.balanceOf(msg.sender) >= amount, \"Not enough thank yous to send\");\n        require(RewardsContract.balanceOf(address(this)) >= amount, \"Not enough rewards to give out\");\n        // Make sure the sender is not sending a thank you to him/her self\n        require(msg.sender != toAddress, \"You cannot thank yourself\");\n\n        // Transfer the thank you token to the contract\n        ThanksContract.transferFrom(msg.sender, address(this), amount);\n        // Transfer the reward token to the thanked user\n        RewardsContract.transfer(toAddress, amount);\n\n        emit Sent(msg.sender, toAddress, amount);\n    }\n\n    // Redeem tokens for awards.  This still needs work\n    function redeem(uint256 amount) public {\n        require(addressSetup(msg.sender), \"User not yet setup\");\n        require(RewardsContract.balanceOf(msg.sender) >= amount, \"Trying to redeem more rewards than you are holding\");\n\n        RewardsContract.transferFrom(msg.sender, address(this), amount);\n    }\n\n    // Distribute the thank you tokens contained within the contract.  This equally distributes\n    // any tokens to all added users.  This will be modified with better logic later\n    function distribute() public onlyOwner {\n        // Make sure there are users setup\n        require(validRecipientAddresses.length > 0, \"No recipient addresses added yet\");\n\n        // Determine how many thank you tokens to send to each user, then iterate and send\n        uint eachShare = ThanksContract.balanceOf(address(this)) / validRecipientAddresses.length;\n        for (uint256 userIndex; userIndex < validRecipientAddresses.length; userIndex++) {\n            ThanksContract.transfer(validRecipientAddresses[userIndex], eachShare);\n        }\n    }\n\n    // Allow the ability to withdraw tokens that were not supposed to be deposited\n    function withdrawToken(address _tokenContract, uint256 _amount) public onlyOwner {\n        IERC20 tokenContract = IERC20(_tokenContract);\n        \n        // transfer the token from address of this contract\n        // to address of the user (executing the withdrawToken() function)\n        tokenContract.transfer(msg.sender, _amount);\n    }\n\n    // Below functions are meant to allow funding of the contract in order to pay for gas etc.\n    // Allow any crypto sent to the contract to be removed\n    function withdrawEth() public payable onlyOwner {\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    // Function to receive Ether. msg.data must be empty\n    receive() external payable {}\n\n    // Fallback function is called when msg.data is not empty\n    fallback() external payable {}\n\n    // Get the balance of ether contained within the contract\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n}\n",
  "sourceMap": "173:4402:3:-:0;;;398:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:2;921:18:0;:32::i;:::-;476:15:3;:41;;-1:-1:-1;;;;;476:41:3;;;-1:-1:-1;;;;;;476:41:3;;;;;;;527:14;:39;;;;;;;;;;;173:4402;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:4:-;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;173:4402:3;;;;;;",
  "sourcePath": "contracts/Swap.sol",
  "type": "contract"
}